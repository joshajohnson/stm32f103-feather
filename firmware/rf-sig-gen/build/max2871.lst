ARM GAS  /tmp/ccgGoqyH.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"max2871.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.max2871SpiWrite,"ax",%progbits
  16              		.align	1
  17              		.global	max2871SpiWrite
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	max2871SpiWrite:
  24              	.LFB70:
  25              		.file 1 "Src/max2871.c"
   1:Src/max2871.c **** #include "main.h"
   2:Src/max2871.c **** #include "max2871.h"
   3:Src/max2871.c **** #include "max2871_registers.h"
   4:Src/max2871.c **** #include "dwt_stm32_delay.h"
   5:Src/max2871.c **** #include "usbd_cdc_if.h"
   6:Src/max2871.c **** #include <string.h>
   7:Src/max2871.c **** #include <stdlib.h>
   8:Src/max2871.c **** #include <stdio.h>
   9:Src/max2871.c **** #include <math.h>
  10:Src/max2871.c **** 
  11:Src/max2871.c **** #define MOD 4095
  12:Src/max2871.c **** #define STR1_SIZE 128
  13:Src/max2871.c **** uint8_t str1[STR1_SIZE] = "";
  14:Src/max2871.c **** 
  15:Src/max2871.c **** struct MAX2871Struct max2871Status;
  16:Src/max2871.c **** 
  17:Src/max2871.c **** // Setup of the MAX2871 PLL, 50MHz, output off
  18:Src/max2871.c **** void max2871Setup(struct MAX2871Struct *max2871Status)
  19:Src/max2871.c **** {
  20:Src/max2871.c **** 	// Set to initial known state
  21:Src/max2871.c **** 	max2871ChipEnable(max2871Status);
  22:Src/max2871.c **** 	max2871RFDisable(max2871Status);
  23:Src/max2871.c **** 	HAL_GPIO_WritePin(MAX_CLK_GPIO_Port, MAX_CLK_Pin, 0);
  24:Src/max2871.c **** 	HAL_GPIO_WritePin(MAX_DAT_GPIO_Port, MAX_DAT_Pin, 0);
  25:Src/max2871.c **** 	HAL_GPIO_WritePin(MAX_MUX_GPIO_Port, MAX_MUX_Pin, 0);
  26:Src/max2871.c **** 	HAL_GPIO_WritePin(MAX_LE_GPIO_Port, MAX_LE_Pin, 1);
  27:Src/max2871.c **** 
  28:Src/max2871.c **** 	max2871RegsInit();
  29:Src/max2871.c **** 
  30:Src/max2871.c **** 	// Initial writing of registers, with wait time
  31:Src/max2871.c **** 	uint32_t txReg;
  32:Src/max2871.c **** 	for (int j = 1; j >= 0; j--)
  33:Src/max2871.c **** 	{
ARM GAS  /tmp/ccgGoqyH.s 			page 2


  34:Src/max2871.c **** 		for (int i = 5; i >= 0; i--)
  35:Src/max2871.c **** 		{
  36:Src/max2871.c **** 			txReg = max2871GetRegister(i);
  37:Src/max2871.c **** 			max2871SpiWrite(txReg);
  38:Src/max2871.c **** 			if (i == 5) HAL_Delay(20);
  39:Src/max2871.c **** 		}
  40:Src/max2871.c **** 		HAL_Delay(20);
  41:Src/max2871.c **** 	}
  42:Src/max2871.c **** 
  43:Src/max2871.c **** 	// Set initial register values
  44:Src/max2871.c **** 	max2871Set_INT(0); 		// Frac N
  45:Src/max2871.c **** 	max2871Set_N(83);		// Init to 50Mhz
  46:Src/max2871.c **** 	max2871Set_FRAC(1365);
  47:Src/max2871.c **** 	max2871Set_CPOC(0);
  48:Src/max2871.c **** 	max2871Set_CPL(0);
  49:Src/max2871.c **** 	max2871Set_CPT(0);
  50:Src/max2871.c **** 	max2871Set_P(1);
  51:Src/max2871.c **** 	max2871Set_M(4095);
  52:Src/max2871.c **** 	max2871Set_LDS(1);
  53:Src/max2871.c **** 	max2871Set_SDN(0);
  54:Src/max2871.c **** 	max2871Set_MUX(0xC); 	// Reg 6 Readback 0xC
  55:Src/max2871.c **** 	max2871Set_DBR(1);
  56:Src/max2871.c **** 	max2871Set_RDIV2(0);
  57:Src/max2871.c **** 	max2871Set_R(1); 		// 38.4MHz f_PFD
  58:Src/max2871.c **** 	max2871Set_REG4DB(0);
  59:Src/max2871.c **** 	max2871Set_CP(15);
  60:Src/max2871.c **** 	max2871Set_LDF(0);
  61:Src/max2871.c **** 	max2871Set_LDP(0);
  62:Src/max2871.c **** 	max2871Set_PDP(1);
  63:Src/max2871.c **** 	max2871Set_SHDN(0);
  64:Src/max2871.c **** 	max2871Set_TRI(0);
  65:Src/max2871.c **** 	max2871Set_RST(0);
  66:Src/max2871.c **** 	max2871Set_VCO(0);
  67:Src/max2871.c **** 	max2871Set_VAS_SHDN(0);
  68:Src/max2871.c **** 	max2871Set_VAS_TEMP(1);
  69:Src/max2871.c **** 	max2871Set_CSM(0);
  70:Src/max2871.c **** 	max2871Set_MUTEDEL(1);
  71:Src/max2871.c **** 	max2871Set_CDM(0);
  72:Src/max2871.c **** 	max2871Set_CDIV(38);
  73:Src/max2871.c **** 	max2871Set_SDLDO(0);
  74:Src/max2871.c **** 	max2871Set_SDDIV(0);
  75:Src/max2871.c **** 	max2871Set_SDREF(0);
  76:Src/max2871.c **** 	max2871Set_BS(768);		//BS = fPFD / 50KHz
  77:Src/max2871.c **** 	max2871Set_FB(1);
  78:Src/max2871.c **** 	max2871Set_DIVA(6);
  79:Src/max2871.c **** 	max2871Set_SDVCO(0);
  80:Src/max2871.c **** 	max2871Set_MTLD(1);
  81:Src/max2871.c **** 	max2871Set_BDIV(0);
  82:Src/max2871.c **** 	max2871Set_RFB_EN(0);
  83:Src/max2871.c **** 	max2871Set_BPWR(0);
  84:Src/max2871.c **** 	max2871Set_RFA_EN(0);	// Begin with power off
  85:Src/max2871.c **** 	max2871Set_APWR(3);
  86:Src/max2871.c **** 	max2871Set_SDPLL(0);
  87:Src/max2871.c **** 	max2871Set_F01(0);
  88:Src/max2871.c **** 	max2871Set_LD(1);
  89:Src/max2871.c **** 	max2871Set_Reserved();
  90:Src/max2871.c **** 
ARM GAS  /tmp/ccgGoqyH.s 			page 3


  91:Src/max2871.c **** 	// Update info in struct
  92:Src/max2871.c **** 	max2871Status->RFA_EN = 0;
  93:Src/max2871.c **** 	max2871Status->rfPower = 3;
  94:Src/max2871.c **** 	max2871Status->frequency = 50;
  95:Src/max2871.c **** 
  96:Src/max2871.c **** 	// Send updated registers over SPI
  97:Src/max2871.c **** 	max2871WriteRegisters();
  98:Src/max2871.c **** 	HAL_Delay(10);
  99:Src/max2871.c **** 
 100:Src/max2871.c **** 	// Check if the PLL has locked
 101:Src/max2871.c **** 	max2871CheckLD(max2871Status);
 102:Src/max2871.c **** }
 103:Src/max2871.c **** 
 104:Src/max2871.c **** // Writes given register to MAX2871
 105:Src/max2871.c **** void max2871SpiWrite(uint32_t r)
 106:Src/max2871.c **** {
  26              		.loc 1 106 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 70B5     		push	{r4, r5, r6, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 4, -16
  35              		.cfi_offset 5, -12
  36              		.cfi_offset 6, -8
  37              		.cfi_offset 14, -4
  38 0002 0646     		mov	r6, r0
 107:Src/max2871.c **** 	// Ensure LE high
 108:Src/max2871.c **** 	HAL_GPIO_WritePin(MAX_LE_GPIO_Port, MAX_LE_Pin, 1);
  39              		.loc 1 108 0
  40 0004 2D4C     		ldr	r4, .L8
  41 0006 0122     		movs	r2, #1
  42 0008 0221     		movs	r1, #2
  43 000a 2046     		mov	r0, r4
  44              	.LVL1:
  45 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
  46              	.LVL2:
 109:Src/max2871.c **** 
 110:Src/max2871.c **** 	// Start by bringing LE low
 111:Src/max2871.c **** 	HAL_GPIO_WritePin(MAX_LE_GPIO_Port, MAX_LE_Pin, 0);
  47              		.loc 1 111 0
  48 0010 0022     		movs	r2, #0
  49 0012 0221     		movs	r1, #2
  50 0014 2046     		mov	r0, r4
  51 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
  52              	.LVL3:
  53              	.LBB9:
 112:Src/max2871.c **** 
 113:Src/max2871.c **** 	// Transmit all the bits!
 114:Src/max2871.c **** 	for (int8_t bit = 32; bit > 0; bit--)
  54              		.loc 1 114 0
  55 001a 2025     		movs	r5, #32
  56 001c 31E0     		b	.L2
  57              	.LVL4:
  58              	.L5:
ARM GAS  /tmp/ccgGoqyH.s 			page 4


 115:Src/max2871.c **** 	{
 116:Src/max2871.c **** 		HAL_GPIO_WritePin(MAX_DAT_GPIO_Port, MAX_DAT_Pin, ((r) & (1 << bit - 1)) ? 1 : 0);
  59              		.loc 1 116 0 discriminator 3
  60 001e 6B1E     		subs	r3, r5, #1
  61 0020 0124     		movs	r4, #1
  62 0022 04FA03F3 		lsl	r3, r4, r3
  63 0026 3342     		tst	r3, r6
  64 0028 14BF     		ite	ne
  65 002a 2246     		movne	r2, r4
  66 002c 0022     		moveq	r2, #0
  67 002e 1021     		movs	r1, #16
  68 0030 2348     		ldr	r0, .L8+4
  69 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
  70              	.LVL5:
  71              	.LBB10:
  72              	.LBB11:
  73              		.file 2 "Inc/dwt_stm32_delay.h"
   1:Inc/dwt_stm32_delay.h **** #ifndef DWT_STM32_DELAY_H
   2:Inc/dwt_stm32_delay.h **** #define DWT_STM32_DELAY_H
   3:Inc/dwt_stm32_delay.h **** 
   4:Inc/dwt_stm32_delay.h **** #ifdef __cplusplus
   5:Inc/dwt_stm32_delay.h **** extern "C" {
   6:Inc/dwt_stm32_delay.h **** #endif
   7:Inc/dwt_stm32_delay.h **** 
   8:Inc/dwt_stm32_delay.h **** #include "stm32f1xx_hal.h"
   9:Inc/dwt_stm32_delay.h **** 
  10:Inc/dwt_stm32_delay.h **** /**
  11:Inc/dwt_stm32_delay.h ****  * @brief  Initializes DWT_Cycle_Count for DWT_Delay_us function
  12:Inc/dwt_stm32_delay.h ****  * @return Error DWT counter
  13:Inc/dwt_stm32_delay.h ****  *         1: DWT counter Error
  14:Inc/dwt_stm32_delay.h ****  *         0: DWT counter works
  15:Inc/dwt_stm32_delay.h ****  */
  16:Inc/dwt_stm32_delay.h **** uint32_t DWT_Delay_Init(void);
  17:Inc/dwt_stm32_delay.h **** 
  18:Inc/dwt_stm32_delay.h **** /**
  19:Inc/dwt_stm32_delay.h ****  * @brief  This function provides a delay (in microseconds)
  20:Inc/dwt_stm32_delay.h ****  * @param  microseconds: delay in microseconds
  21:Inc/dwt_stm32_delay.h ****  */
  22:Inc/dwt_stm32_delay.h **** __STATIC_INLINE void DWT_Delay_us(volatile uint32_t microseconds)
  23:Inc/dwt_stm32_delay.h **** {
  24:Inc/dwt_stm32_delay.h ****   uint32_t clk_cycle_start = DWT->CYCCNT;
  74              		.loc 2 24 0 discriminator 3
  75 0036 234B     		ldr	r3, .L8+8
  76 0038 5C68     		ldr	r4, [r3, #4]
  77              	.LVL6:
  25:Inc/dwt_stm32_delay.h **** 
  26:Inc/dwt_stm32_delay.h ****   /* Go to number of cycles for system */
  27:Inc/dwt_stm32_delay.h ****   microseconds *= (HAL_RCC_GetHCLKFreq() / 1000000);
  78              		.loc 2 27 0 discriminator 3
  79 003a FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
  80              	.LVL7:
  81 003e 224B     		ldr	r3, .L8+12
  82 0040 A3FB0030 		umull	r3, r0, r3, r0
  83 0044 800C     		lsrs	r0, r0, #18
  84              	.L3:
  28:Inc/dwt_stm32_delay.h **** 
  29:Inc/dwt_stm32_delay.h ****   /* Delay till end */
ARM GAS  /tmp/ccgGoqyH.s 			page 5


  30:Inc/dwt_stm32_delay.h ****   while ((DWT->CYCCNT - clk_cycle_start) < microseconds);
  85              		.loc 2 30 0
  86 0046 1F4B     		ldr	r3, .L8+8
  87 0048 5B68     		ldr	r3, [r3, #4]
  88 004a 1B1B     		subs	r3, r3, r4
  89 004c 8342     		cmp	r3, r0
  90 004e FAD3     		bcc	.L3
  91              	.LVL8:
  92              	.LBE11:
  93              	.LBE10:
 117:Src/max2871.c **** 		DWT_Delay_us(1);
 118:Src/max2871.c **** 		HAL_GPIO_WritePin(MAX_CLK_GPIO_Port, MAX_CLK_Pin, 1);
  94              		.loc 1 118 0 discriminator 3
  95 0050 0122     		movs	r2, #1
  96 0052 2021     		movs	r1, #32
  97 0054 1A48     		ldr	r0, .L8+4
  98 0056 FFF7FEFF 		bl	HAL_GPIO_WritePin
  99              	.LVL9:
 100              	.LBB12:
 101              	.LBB13:
  24:Inc/dwt_stm32_delay.h **** 
 102              		.loc 2 24 0 discriminator 3
 103 005a 1A4B     		ldr	r3, .L8+8
 104 005c 5C68     		ldr	r4, [r3, #4]
 105              	.LVL10:
  27:Inc/dwt_stm32_delay.h **** 
 106              		.loc 2 27 0 discriminator 3
 107 005e FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 108              	.LVL11:
 109 0062 194B     		ldr	r3, .L8+12
 110 0064 A3FB0030 		umull	r3, r0, r3, r0
 111 0068 800C     		lsrs	r0, r0, #18
 112              	.L4:
 113              		.loc 2 30 0
 114 006a 164B     		ldr	r3, .L8+8
 115 006c 5B68     		ldr	r3, [r3, #4]
 116 006e 1B1B     		subs	r3, r3, r4
 117 0070 8342     		cmp	r3, r0
 118 0072 FAD3     		bcc	.L4
 119              	.LVL12:
 120              	.LBE13:
 121              	.LBE12:
 119:Src/max2871.c **** 		DWT_Delay_us(1);
 120:Src/max2871.c **** 		HAL_GPIO_WritePin(MAX_CLK_GPIO_Port, MAX_CLK_Pin, 0);
 122              		.loc 1 120 0 discriminator 3
 123 0074 0022     		movs	r2, #0
 124 0076 2021     		movs	r1, #32
 125 0078 1148     		ldr	r0, .L8+4
 126 007a FFF7FEFF 		bl	HAL_GPIO_WritePin
 127              	.LVL13:
 114:Src/max2871.c **** 	{
 128              		.loc 1 114 0 discriminator 3
 129 007e 013D     		subs	r5, r5, #1
 130              	.LVL14:
 131 0080 6DB2     		sxtb	r5, r5
 132              	.LVL15:
 133              	.L2:
ARM GAS  /tmp/ccgGoqyH.s 			page 6


 114:Src/max2871.c **** 	{
 134              		.loc 1 114 0 is_stmt 0 discriminator 1
 135 0082 002D     		cmp	r5, #0
 136 0084 CBDC     		bgt	.L5
 137              	.LBE9:
 121:Src/max2871.c **** 	}
 122:Src/max2871.c **** 
 123:Src/max2871.c **** 	// Ensure DAT is low afterwards
 124:Src/max2871.c **** 	HAL_GPIO_WritePin(MAX_DAT_GPIO_Port, MAX_DAT_Pin, 0);
 138              		.loc 1 124 0 is_stmt 1
 139 0086 0022     		movs	r2, #0
 140 0088 1021     		movs	r1, #16
 141 008a 0D48     		ldr	r0, .L8+4
 142 008c FFF7FEFF 		bl	HAL_GPIO_WritePin
 143              	.LVL16:
 125:Src/max2871.c **** 	// Once Transfer complete, pull LE high
 126:Src/max2871.c **** 	HAL_GPIO_WritePin(MAX_LE_GPIO_Port, MAX_LE_Pin, 1);
 144              		.loc 1 126 0
 145 0090 0122     		movs	r2, #1
 146 0092 0221     		movs	r1, #2
 147 0094 0948     		ldr	r0, .L8
 148 0096 FFF7FEFF 		bl	HAL_GPIO_WritePin
 149              	.LVL17:
 150 009a 6424     		movs	r4, #100
 151              	.LVL18:
 152              	.LBB14:
 153              	.LBB15:
  24:Inc/dwt_stm32_delay.h **** 
 154              		.loc 2 24 0
 155 009c 094B     		ldr	r3, .L8+8
 156 009e 5D68     		ldr	r5, [r3, #4]
 157              	.LVL19:
  27:Inc/dwt_stm32_delay.h **** 
 158              		.loc 2 27 0
 159 00a0 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 160              	.LVL20:
 161 00a4 084B     		ldr	r3, .L8+12
 162 00a6 A3FB0023 		umull	r2, r3, r3, r0
 163 00aa 9B0C     		lsrs	r3, r3, #18
 164 00ac 04FB03F4 		mul	r4, r4, r3
 165              	.L6:
 166              		.loc 2 30 0
 167 00b0 044B     		ldr	r3, .L8+8
 168 00b2 5B68     		ldr	r3, [r3, #4]
 169 00b4 5B1B     		subs	r3, r3, r5
 170 00b6 A342     		cmp	r3, r4
 171 00b8 FAD3     		bcc	.L6
 172              	.LBE15:
 173              	.LBE14:
 127:Src/max2871.c **** 	DWT_Delay_us(100);
 128:Src/max2871.c **** }
 174              		.loc 1 128 0
 175 00ba 70BD     		pop	{r4, r5, r6, pc}
 176              	.LVL21:
 177              	.L9:
 178              		.align	2
 179              	.L8:
ARM GAS  /tmp/ccgGoqyH.s 			page 7


 180 00bc 00080140 		.word	1073809408
 181 00c0 000C0140 		.word	1073810432
 182 00c4 001000E0 		.word	-536866816
 183 00c8 83DE1B43 		.word	1125899907
 184              		.cfi_endproc
 185              	.LFE70:
 187              		.section	.text.max2871SpiRead,"ax",%progbits
 188              		.align	1
 189              		.global	max2871SpiRead
 190              		.syntax unified
 191              		.thumb
 192              		.thumb_func
 193              		.fpu softvfp
 195              	max2871SpiRead:
 196              	.LFB71:
 129:Src/max2871.c **** 
 130:Src/max2871.c **** // Readback register 6 from MAX2871. Requires MUX to be set in readback mode (0xC)
 131:Src/max2871.c **** uint32_t max2871SpiRead(void)
 132:Src/max2871.c **** {
 197              		.loc 1 132 0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201 0000 70B5     		push	{r4, r5, r6, lr}
 202              	.LCFI1:
 203              		.cfi_def_cfa_offset 16
 204              		.cfi_offset 4, -16
 205              		.cfi_offset 5, -12
 206              		.cfi_offset 6, -8
 207              		.cfi_offset 14, -4
 133:Src/max2871.c **** 	uint32_t dataReturn;
 134:Src/max2871.c **** 
 135:Src/max2871.c **** 	max2871SpiWrite(0x06);
 208              		.loc 1 135 0
 209 0002 0620     		movs	r0, #6
 210 0004 FFF7FEFF 		bl	max2871SpiWrite
 211              	.LVL22:
 136:Src/max2871.c **** 
 137:Src/max2871.c **** 	// Ensure LE High
 138:Src/max2871.c **** 	HAL_GPIO_WritePin(MAX_LE_GPIO_Port, MAX_LE_Pin, 1);
 212              		.loc 1 138 0
 213 0008 0122     		movs	r2, #1
 214 000a 0221     		movs	r1, #2
 215 000c 2148     		ldr	r0, .L17
 216 000e FFF7FEFF 		bl	HAL_GPIO_WritePin
 217              	.LVL23:
 218              	.LBB23:
 139:Src/max2871.c **** 
 140:Src/max2871.c **** 	// Receive all the bits!
 141:Src/max2871.c **** 	for (int8_t bit = 32; bit > 0; bit--)
 219              		.loc 1 141 0
 220 0012 2024     		movs	r4, #32
 221 0014 39E0     		b	.L11
 222              	.LVL24:
 223              	.L15:
 142:Src/max2871.c **** 	{
 143:Src/max2871.c **** 		HAL_GPIO_WritePin(MAX_CLK_GPIO_Port, MAX_CLK_Pin, 1);
ARM GAS  /tmp/ccgGoqyH.s 			page 8


 224              		.loc 1 143 0 discriminator 3
 225 0016 0122     		movs	r2, #1
 226 0018 2021     		movs	r1, #32
 227 001a 1F48     		ldr	r0, .L17+4
 228 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 229              	.LVL25:
 230              	.LBB24:
 231              	.LBB25:
  24:Inc/dwt_stm32_delay.h **** 
 232              		.loc 2 24 0 discriminator 3
 233 0020 1E4B     		ldr	r3, .L17+8
 234 0022 5E68     		ldr	r6, [r3, #4]
 235              	.LVL26:
  27:Inc/dwt_stm32_delay.h **** 
 236              		.loc 2 27 0 discriminator 3
 237 0024 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 238              	.LVL27:
 239 0028 1D4B     		ldr	r3, .L17+12
 240 002a A3FB0030 		umull	r3, r0, r3, r0
 241 002e 800C     		lsrs	r0, r0, #18
 242              	.L12:
 243              		.loc 2 30 0
 244 0030 1A4B     		ldr	r3, .L17+8
 245 0032 5B68     		ldr	r3, [r3, #4]
 246 0034 9B1B     		subs	r3, r3, r6
 247 0036 8342     		cmp	r3, r0
 248 0038 FAD3     		bcc	.L12
 249              	.LVL28:
 250              	.LBE25:
 251              	.LBE24:
 144:Src/max2871.c **** 		DWT_Delay_us(1);
 145:Src/max2871.c **** 		dataReturn |= HAL_GPIO_ReadPin(MAX_MUX_GPIO_Port, MAX_MUX_Pin) << bit;
 252              		.loc 1 145 0 discriminator 3
 253 003a 8021     		movs	r1, #128
 254 003c 1648     		ldr	r0, .L17+4
 255 003e FFF7FEFF 		bl	HAL_GPIO_ReadPin
 256              	.LVL29:
 257 0042 A040     		lsls	r0, r0, r4
 258 0044 0543     		orrs	r5, r5, r0
 259              	.LVL30:
 260              	.LBB26:
 261              	.LBB27:
  24:Inc/dwt_stm32_delay.h **** 
 262              		.loc 2 24 0 discriminator 3
 263 0046 154B     		ldr	r3, .L17+8
 264 0048 5E68     		ldr	r6, [r3, #4]
 265              	.LVL31:
  27:Inc/dwt_stm32_delay.h **** 
 266              		.loc 2 27 0 discriminator 3
 267 004a FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 268              	.LVL32:
 269 004e 144B     		ldr	r3, .L17+12
 270 0050 A3FB0030 		umull	r3, r0, r3, r0
 271 0054 800C     		lsrs	r0, r0, #18
 272              	.L13:
 273              		.loc 2 30 0
 274 0056 114B     		ldr	r3, .L17+8
ARM GAS  /tmp/ccgGoqyH.s 			page 9


 275 0058 5B68     		ldr	r3, [r3, #4]
 276 005a 9B1B     		subs	r3, r3, r6
 277 005c 8342     		cmp	r3, r0
 278 005e FAD3     		bcc	.L13
 279              	.LVL33:
 280              	.LBE27:
 281              	.LBE26:
 146:Src/max2871.c **** 		DWT_Delay_us(1);
 147:Src/max2871.c **** 		HAL_GPIO_WritePin(MAX_CLK_GPIO_Port, MAX_CLK_Pin, 0);
 282              		.loc 1 147 0 discriminator 3
 283 0060 0022     		movs	r2, #0
 284 0062 2021     		movs	r1, #32
 285 0064 0C48     		ldr	r0, .L17+4
 286 0066 FFF7FEFF 		bl	HAL_GPIO_WritePin
 287              	.LVL34:
 288              	.LBB28:
 289              	.LBB29:
  24:Inc/dwt_stm32_delay.h **** 
 290              		.loc 2 24 0 discriminator 3
 291 006a 0C4B     		ldr	r3, .L17+8
 292 006c 5E68     		ldr	r6, [r3, #4]
 293              	.LVL35:
  27:Inc/dwt_stm32_delay.h **** 
 294              		.loc 2 27 0 discriminator 3
 295 006e FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 296              	.LVL36:
 297 0072 0B4A     		ldr	r2, .L17+12
 298 0074 A2FB0032 		umull	r3, r2, r2, r0
 299 0078 920C     		lsrs	r2, r2, #18
 300 007a 5200     		lsls	r2, r2, #1
 301              	.L14:
 302              		.loc 2 30 0
 303 007c 074B     		ldr	r3, .L17+8
 304 007e 5B68     		ldr	r3, [r3, #4]
 305 0080 9B1B     		subs	r3, r3, r6
 306 0082 9342     		cmp	r3, r2
 307 0084 FAD3     		bcc	.L14
 308              	.LVL37:
 309              	.LBE29:
 310              	.LBE28:
 141:Src/max2871.c **** 	{
 311              		.loc 1 141 0 discriminator 3
 312 0086 013C     		subs	r4, r4, #1
 313              	.LVL38:
 314 0088 64B2     		sxtb	r4, r4
 315              	.LVL39:
 316              	.L11:
 141:Src/max2871.c **** 	{
 317              		.loc 1 141 0 is_stmt 0 discriminator 1
 318 008a 002C     		cmp	r4, #0
 319 008c C3DC     		bgt	.L15
 320              	.LBE23:
 148:Src/max2871.c **** 		DWT_Delay_us(2);
 149:Src/max2871.c **** 	}
 150:Src/max2871.c **** 
 151:Src/max2871.c **** 	return dataReturn;
 152:Src/max2871.c **** }
ARM GAS  /tmp/ccgGoqyH.s 			page 10


 321              		.loc 1 152 0 is_stmt 1
 322 008e 2846     		mov	r0, r5
 323 0090 70BD     		pop	{r4, r5, r6, pc}
 324              	.LVL40:
 325              	.L18:
 326 0092 00BF     		.align	2
 327              	.L17:
 328 0094 00080140 		.word	1073809408
 329 0098 000C0140 		.word	1073810432
 330 009c 001000E0 		.word	-536866816
 331 00a0 83DE1B43 		.word	1125899907
 332              		.cfi_endproc
 333              	.LFE71:
 335              		.section	.text.max2871WriteRegisters,"ax",%progbits
 336              		.align	1
 337              		.global	max2871WriteRegisters
 338              		.syntax unified
 339              		.thumb
 340              		.thumb_func
 341              		.fpu softvfp
 343              	max2871WriteRegisters:
 344              	.LFB72:
 153:Src/max2871.c **** 
 154:Src/max2871.c **** // Writes registers 5 - 0 to MAX2871
 155:Src/max2871.c **** void max2871WriteRegisters(void)
 156:Src/max2871.c **** {
 345              		.loc 1 156 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349 0000 10B5     		push	{r4, lr}
 350              	.LCFI2:
 351              		.cfi_def_cfa_offset 8
 352              		.cfi_offset 4, -8
 353              		.cfi_offset 14, -4
 354              	.LVL41:
 355              	.LBB30:
 157:Src/max2871.c **** 	for (int i = 5; i >= 0; i--)
 356              		.loc 1 157 0
 357 0002 0524     		movs	r4, #5
 358 0004 05E0     		b	.L20
 359              	.LVL42:
 360              	.L21:
 158:Src/max2871.c **** 	{
 159:Src/max2871.c **** 		max2871SpiWrite(max2871GetRegister(i));
 361              		.loc 1 159 0 discriminator 3
 362 0006 E0B2     		uxtb	r0, r4
 363 0008 FFF7FEFF 		bl	max2871GetRegister
 364              	.LVL43:
 365 000c FFF7FEFF 		bl	max2871SpiWrite
 366              	.LVL44:
 157:Src/max2871.c **** 	for (int i = 5; i >= 0; i--)
 367              		.loc 1 157 0 discriminator 3
 368 0010 013C     		subs	r4, r4, #1
 369              	.LVL45:
 370              	.L20:
 157:Src/max2871.c **** 	for (int i = 5; i >= 0; i--)
ARM GAS  /tmp/ccgGoqyH.s 			page 11


 371              		.loc 1 157 0 is_stmt 0 discriminator 1
 372 0012 002C     		cmp	r4, #0
 373 0014 F7DA     		bge	.L21
 374              	.LBE30:
 160:Src/max2871.c **** 	}
 161:Src/max2871.c **** }
 375              		.loc 1 161 0 is_stmt 1
 376 0016 10BD     		pop	{r4, pc}
 377              		.cfi_endproc
 378              	.LFE72:
 380              		.global	__aeabi_fcmpge
 381              		.global	__aeabi_fcmplt
 382              		.global	__aeabi_i2f
 383              		.global	__aeabi_fmul
 384              		.global	__aeabi_fdiv
 385              		.global	__aeabi_f2uiz
 386              		.global	__aeabi_ui2f
 387              		.global	__aeabi_fsub
 388              		.global	__aeabi_f2d
 389              		.global	__aeabi_d2f
 390              		.global	__aeabi_fadd
 391              		.section	.text.max2871SetFrequency,"ax",%progbits
 392              		.align	1
 393              		.global	max2871SetFrequency
 394              		.syntax unified
 395              		.thumb
 396              		.thumb_func
 397              		.fpu softvfp
 399              	max2871SetFrequency:
 400              	.LFB73:
 162:Src/max2871.c **** 
 163:Src/max2871.c **** // Calculates values for given frequency and INT_N / FRAC_N mode
 164:Src/max2871.c **** void max2871SetFrequency(float mhz, uint8_t intN, struct MAX2871Struct *max2871Status)
 165:Src/max2871.c **** {
 401              		.loc 1 165 0
 402              		.cfi_startproc
 403              		@ args = 0, pretend = 0, frame = 0
 404              		@ frame_needed = 0, uses_anonymous_args = 0
 405              	.LVL46:
 406 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 407              	.LCFI3:
 408              		.cfi_def_cfa_offset 40
 409              		.cfi_offset 3, -40
 410              		.cfi_offset 4, -36
 411              		.cfi_offset 5, -32
 412              		.cfi_offset 6, -28
 413              		.cfi_offset 7, -24
 414              		.cfi_offset 8, -20
 415              		.cfi_offset 9, -16
 416              		.cfi_offset 10, -12
 417              		.cfi_offset 11, -8
 418              		.cfi_offset 14, -4
 419 0004 0546     		mov	r5, r0
 420 0006 0C46     		mov	r4, r1
 421 0008 1646     		mov	r6, r2
 166:Src/max2871.c **** 	// Determine DIVA
 167:Src/max2871.c **** 	uint8_t  diva;
ARM GAS  /tmp/ccgGoqyH.s 			page 12


 168:Src/max2871.c **** 	if ((mhz >= 23.5) &&  (mhz < 46.875))
 422              		.loc 1 168 0
 423 000a 6749     		ldr	r1, .L45
 424              	.LVL47:
 425 000c FFF7FEFF 		bl	__aeabi_fcmpge
 426              	.LVL48:
 427 0010 28B1     		cbz	r0, .L24
 428              		.loc 1 168 0 is_stmt 0 discriminator 1
 429 0012 6649     		ldr	r1, .L45+4
 430 0014 2846     		mov	r0, r5
 431 0016 FFF7FEFF 		bl	__aeabi_fcmplt
 432              	.LVL49:
 433 001a 0028     		cmp	r0, #0
 434 001c 2FD1     		bne	.L31
 435              	.L24:
 169:Src/max2871.c **** 		diva = 7;
 170:Src/max2871.c **** 	else if (mhz < 93.75)
 436              		.loc 1 170 0 is_stmt 1
 437 001e 6449     		ldr	r1, .L45+8
 438 0020 2846     		mov	r0, r5
 439 0022 FFF7FEFF 		bl	__aeabi_fcmplt
 440              	.LVL50:
 441 0026 0028     		cmp	r0, #0
 442 0028 2CD1     		bne	.L32
 171:Src/max2871.c **** 		diva = 6;
 172:Src/max2871.c **** 	else if (mhz < 187.5)
 443              		.loc 1 172 0
 444 002a 6249     		ldr	r1, .L45+12
 445 002c 2846     		mov	r0, r5
 446 002e FFF7FEFF 		bl	__aeabi_fcmplt
 447              	.LVL51:
 448 0032 0028     		cmp	r0, #0
 449 0034 5DD1     		bne	.L33
 173:Src/max2871.c **** 		diva = 5;
 174:Src/max2871.c **** 	else if (mhz < 375)
 450              		.loc 1 174 0
 451 0036 6049     		ldr	r1, .L45+16
 452 0038 2846     		mov	r0, r5
 453 003a FFF7FEFF 		bl	__aeabi_fcmplt
 454              	.LVL52:
 455 003e 0028     		cmp	r0, #0
 456 0040 5AD1     		bne	.L34
 175:Src/max2871.c **** 		diva = 4;
 176:Src/max2871.c **** 	else if (mhz < 750)
 457              		.loc 1 176 0
 458 0042 5E49     		ldr	r1, .L45+20
 459 0044 2846     		mov	r0, r5
 460 0046 FFF7FEFF 		bl	__aeabi_fcmplt
 461              	.LVL53:
 462 004a 0028     		cmp	r0, #0
 463 004c 57D1     		bne	.L35
 177:Src/max2871.c **** 		diva = 3;
 178:Src/max2871.c **** 	else if (mhz < 1500)
 464              		.loc 1 178 0
 465 004e 5C49     		ldr	r1, .L45+24
 466 0050 2846     		mov	r0, r5
 467 0052 FFF7FEFF 		bl	__aeabi_fcmplt
ARM GAS  /tmp/ccgGoqyH.s 			page 13


 468              	.LVL54:
 469 0056 0028     		cmp	r0, #0
 470 0058 54D1     		bne	.L36
 179:Src/max2871.c **** 		diva = 2;
 180:Src/max2871.c **** 	else if (mhz < 3000)
 471              		.loc 1 180 0
 472 005a 5A49     		ldr	r1, .L45+28
 473 005c 2846     		mov	r0, r5
 474 005e FFF7FEFF 		bl	__aeabi_fcmplt
 475              	.LVL55:
 476 0062 0028     		cmp	r0, #0
 477 0064 51D1     		bne	.L37
 181:Src/max2871.c **** 		diva = 1;
 182:Src/max2871.c **** 	else if (mhz < 6000)
 478              		.loc 1 182 0
 479 0066 5849     		ldr	r1, .L45+32
 480 0068 2846     		mov	r0, r5
 481 006a FFF7FEFF 		bl	__aeabi_fcmplt
 482              	.LVL56:
 483 006e 10B1     		cbz	r0, .L41
 183:Src/max2871.c **** 		diva = 0;
 484              		.loc 1 183 0
 485 0070 4FF00008 		mov	r8, #0
 486 0074 08E0     		b	.L26
 487              	.L41:
 184:Src/max2871.c **** 	else
 185:Src/max2871.c **** 		printUSB((char *) "> Bad input frequency to max2871SetFrequency");
 488              		.loc 1 185 0
 489 0076 5548     		ldr	r0, .L45+36
 490 0078 FFF7FEFF 		bl	printUSB
 491              	.LVL57:
 492 007c 04E0     		b	.L26
 493              	.L31:
 169:Src/max2871.c **** 	else if (mhz < 93.75)
 494              		.loc 1 169 0
 495 007e 4FF00708 		mov	r8, #7
 496 0082 01E0     		b	.L26
 497              	.L32:
 171:Src/max2871.c **** 	else if (mhz < 187.5)
 498              		.loc 1 171 0
 499 0084 4FF00608 		mov	r8, #6
 500              	.L26:
 501              	.LVL58:
 186:Src/max2871.c **** 
 187:Src/max2871.c **** 	// Calculate fOUT
 188:Src/max2871.c **** 	float fComp = 38.4;
 189:Src/max2871.c **** 	float fVCO = mhz * (2 << (diva - 1));
 502              		.loc 1 189 0
 503 0088 08F1FF30 		add	r0, r8, #-1
 504 008c 0223     		movs	r3, #2
 505 008e 03FA00F0 		lsl	r0, r3, r0
 506 0092 FFF7FEFF 		bl	__aeabi_i2f
 507              	.LVL59:
 508 0096 8246     		mov	r10, r0
 509 0098 2946     		mov	r1, r5
 510 009a FFF7FEFF 		bl	__aeabi_fmul
 511              	.LVL60:
ARM GAS  /tmp/ccgGoqyH.s 			page 14


 512 009e 0546     		mov	r5, r0
 513              	.LVL61:
 190:Src/max2871.c **** 	float n = fVCO / fComp;
 514              		.loc 1 190 0
 515 00a0 4B49     		ldr	r1, .L45+40
 516 00a2 FFF7FEFF 		bl	__aeabi_fdiv
 517              	.LVL62:
 518 00a6 8346     		mov	fp, r0
 519              	.LVL63:
 191:Src/max2871.c **** 	uint32_t N = (uint16_t) n;
 520              		.loc 1 191 0
 521 00a8 FFF7FEFF 		bl	__aeabi_f2uiz
 522              	.LVL64:
 523 00ac 1FFA80F9 		uxth	r9, r0
 524              	.LVL65:
 192:Src/max2871.c **** 
 193:Src/max2871.c **** 	float F = round((n - N) * MOD);
 525              		.loc 1 193 0
 526 00b0 4846     		mov	r0, r9
 527 00b2 FFF7FEFF 		bl	__aeabi_ui2f
 528              	.LVL66:
 529 00b6 0746     		mov	r7, r0
 530 00b8 0146     		mov	r1, r0
 531 00ba 5846     		mov	r0, fp
 532 00bc FFF7FEFF 		bl	__aeabi_fsub
 533              	.LVL67:
 534 00c0 4449     		ldr	r1, .L45+44
 535 00c2 FFF7FEFF 		bl	__aeabi_fmul
 536              	.LVL68:
 537 00c6 FFF7FEFF 		bl	__aeabi_f2d
 538              	.LVL69:
 539 00ca FFF7FEFF 		bl	round
 540              	.LVL70:
 541 00ce FFF7FEFF 		bl	__aeabi_d2f
 542              	.LVL71:
 543 00d2 8346     		mov	fp, r0
 544              	.LVL72:
 194:Src/max2871.c **** 
 195:Src/max2871.c **** 	// Determine fVCO
 196:Src/max2871.c **** 	if (intN == 1)
 545              		.loc 1 196 0
 546 00d4 012C     		cmp	r4, #1
 547 00d6 1BD0     		beq	.L42
 197:Src/max2871.c **** 		fVCO = N * fComp;
 198:Src/max2871.c **** 	else if (!intN)
 548              		.loc 1 198 0
 549 00d8 FCB9     		cbnz	r4, .L28
 199:Src/max2871.c **** 		fVCO = (N + (F/MOD)) * fComp;
 550              		.loc 1 199 0
 551 00da 3E49     		ldr	r1, .L45+44
 552 00dc FFF7FEFF 		bl	__aeabi_fdiv
 553              	.LVL73:
 554 00e0 0146     		mov	r1, r0
 555 00e2 3846     		mov	r0, r7
 556 00e4 FFF7FEFF 		bl	__aeabi_fadd
 557              	.LVL74:
 558 00e8 3949     		ldr	r1, .L45+40
ARM GAS  /tmp/ccgGoqyH.s 			page 15


 559 00ea FFF7FEFF 		bl	__aeabi_fmul
 560              	.LVL75:
 561 00ee 0546     		mov	r5, r0
 562              	.LVL76:
 563 00f0 13E0     		b	.L28
 564              	.LVL77:
 565              	.L33:
 173:Src/max2871.c **** 	else if (mhz < 375)
 566              		.loc 1 173 0
 567 00f2 4FF00508 		mov	r8, #5
 568 00f6 C7E7     		b	.L26
 569              	.L34:
 175:Src/max2871.c **** 	else if (mhz < 750)
 570              		.loc 1 175 0
 571 00f8 4FF00408 		mov	r8, #4
 572 00fc C4E7     		b	.L26
 573              	.L35:
 177:Src/max2871.c **** 	else if (mhz < 1500)
 574              		.loc 1 177 0
 575 00fe 4FF00308 		mov	r8, #3
 576 0102 C1E7     		b	.L26
 577              	.L36:
 179:Src/max2871.c **** 	else if (mhz < 3000)
 578              		.loc 1 179 0
 579 0104 4FF00208 		mov	r8, #2
 580 0108 BEE7     		b	.L26
 581              	.L37:
 181:Src/max2871.c **** 	else if (mhz < 6000)
 582              		.loc 1 181 0
 583 010a 4FF00108 		mov	r8, #1
 584 010e BBE7     		b	.L26
 585              	.LVL78:
 586              	.L42:
 197:Src/max2871.c **** 	else if (!intN)
 587              		.loc 1 197 0
 588 0110 2F49     		ldr	r1, .L45+40
 589 0112 3846     		mov	r0, r7
 590              	.LVL79:
 591 0114 FFF7FEFF 		bl	__aeabi_fmul
 592              	.LVL80:
 593 0118 0546     		mov	r5, r0
 594              	.LVL81:
 595              	.L28:
 200:Src/max2871.c **** 
 201:Src/max2871.c **** 	float fOUT = fVCO / (2 << (diva - 1));
 596              		.loc 1 201 0
 597 011a 5146     		mov	r1, r10
 598 011c 2846     		mov	r0, r5
 599 011e FFF7FEFF 		bl	__aeabi_fdiv
 600              	.LVL82:
 601 0122 0546     		mov	r5, r0
 602              	.LVL83:
 202:Src/max2871.c **** 
 203:Src/max2871.c **** 	// Set registers for Int-N configuration
 204:Src/max2871.c **** 	if (intN == 1)
 603              		.loc 1 204 0
 604 0124 012C     		cmp	r4, #1
ARM GAS  /tmp/ccgGoqyH.s 			page 16


 605 0126 06D0     		beq	.L43
 205:Src/max2871.c **** 	{
 206:Src/max2871.c **** 		max2871Set_INT(1);
 207:Src/max2871.c **** 		max2871Set_N(N);
 208:Src/max2871.c **** 		max2871Set_FRAC(F);
 209:Src/max2871.c **** 		max2871Set_CPL(0);
 210:Src/max2871.c **** 		max2871Set_M(MOD);
 211:Src/max2871.c **** 		max2871Set_LDF(1);
 212:Src/max2871.c **** 		max2871Set_DIVA(diva);
 213:Src/max2871.c **** 		max2871Set_F01(0);
 214:Src/max2871.c **** 	}
 215:Src/max2871.c **** 	// Set registers for Frac-N configuration
 216:Src/max2871.c **** 	else if (!intN)
 606              		.loc 1 216 0
 607 0128 0CB3     		cbz	r4, .L44
 608              	.LVL84:
 609              	.L30:
 217:Src/max2871.c **** 	{
 218:Src/max2871.c **** 		max2871Set_INT(0);
 219:Src/max2871.c **** 		max2871Set_N(N);
 220:Src/max2871.c **** 		max2871Set_FRAC(F);
 221:Src/max2871.c **** 		max2871Set_CPL(1);
 222:Src/max2871.c **** 		max2871Set_M(MOD);
 223:Src/max2871.c **** 		max2871Set_LDF(0);
 224:Src/max2871.c **** 		max2871Set_DIVA(diva);
 225:Src/max2871.c **** 		max2871Set_F01(1);
 226:Src/max2871.c **** 	}
 227:Src/max2871.c **** 	max2871Status->intN_nFracN = intN;
 610              		.loc 1 227 0
 611 012a F472     		strb	r4, [r6, #11]
 228:Src/max2871.c **** 	max2871Status->frequency = fOUT;
 612              		.loc 1 228 0
 613 012c 7560     		str	r5, [r6, #4]	@ float
 229:Src/max2871.c **** 
 230:Src/max2871.c **** 	// Update MAX registers with new frequency info
 231:Src/max2871.c **** 	max2871WriteRegisters();
 614              		.loc 1 231 0
 615 012e FFF7FEFF 		bl	max2871WriteRegisters
 616              	.LVL85:
 232:Src/max2871.c **** }
 617              		.loc 1 232 0
 618 0132 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 619              	.LVL86:
 620              	.L43:
 206:Src/max2871.c **** 		max2871Set_N(N);
 621              		.loc 1 206 0
 622 0136 0120     		movs	r0, #1
 623              	.LVL87:
 624 0138 FFF7FEFF 		bl	max2871Set_INT
 625              	.LVL88:
 207:Src/max2871.c **** 		max2871Set_FRAC(F);
 626              		.loc 1 207 0
 627 013c 4846     		mov	r0, r9
 628 013e FFF7FEFF 		bl	max2871Set_N
 629              	.LVL89:
 208:Src/max2871.c **** 		max2871Set_CPL(0);
 630              		.loc 1 208 0
ARM GAS  /tmp/ccgGoqyH.s 			page 17


 631 0142 5846     		mov	r0, fp
 632 0144 FFF7FEFF 		bl	__aeabi_f2uiz
 633              	.LVL90:
 634 0148 FFF7FEFF 		bl	max2871Set_FRAC
 635              	.LVL91:
 209:Src/max2871.c **** 		max2871Set_M(MOD);
 636              		.loc 1 209 0
 637 014c 0020     		movs	r0, #0
 638 014e FFF7FEFF 		bl	max2871Set_CPL
 639              	.LVL92:
 210:Src/max2871.c **** 		max2871Set_LDF(1);
 640              		.loc 1 210 0
 641 0152 40F6FF70 		movw	r0, #4095
 642 0156 FFF7FEFF 		bl	max2871Set_M
 643              	.LVL93:
 211:Src/max2871.c **** 		max2871Set_DIVA(diva);
 644              		.loc 1 211 0
 645 015a 0120     		movs	r0, #1
 646 015c FFF7FEFF 		bl	max2871Set_LDF
 647              	.LVL94:
 212:Src/max2871.c **** 		max2871Set_F01(0);
 648              		.loc 1 212 0
 649 0160 4046     		mov	r0, r8
 650 0162 FFF7FEFF 		bl	max2871Set_DIVA
 651              	.LVL95:
 213:Src/max2871.c **** 	}
 652              		.loc 1 213 0
 653 0166 0020     		movs	r0, #0
 654 0168 FFF7FEFF 		bl	max2871Set_F01
 655              	.LVL96:
 656 016c DDE7     		b	.L30
 657              	.LVL97:
 658              	.L44:
 218:Src/max2871.c **** 		max2871Set_N(N);
 659              		.loc 1 218 0
 660 016e 0020     		movs	r0, #0
 661              	.LVL98:
 662 0170 FFF7FEFF 		bl	max2871Set_INT
 663              	.LVL99:
 219:Src/max2871.c **** 		max2871Set_FRAC(F);
 664              		.loc 1 219 0
 665 0174 4846     		mov	r0, r9
 666 0176 FFF7FEFF 		bl	max2871Set_N
 667              	.LVL100:
 220:Src/max2871.c **** 		max2871Set_CPL(1);
 668              		.loc 1 220 0
 669 017a 5846     		mov	r0, fp
 670 017c FFF7FEFF 		bl	__aeabi_f2uiz
 671              	.LVL101:
 672 0180 FFF7FEFF 		bl	max2871Set_FRAC
 673              	.LVL102:
 221:Src/max2871.c **** 		max2871Set_M(MOD);
 674              		.loc 1 221 0
 675 0184 0120     		movs	r0, #1
 676 0186 FFF7FEFF 		bl	max2871Set_CPL
 677              	.LVL103:
 222:Src/max2871.c **** 		max2871Set_LDF(0);
ARM GAS  /tmp/ccgGoqyH.s 			page 18


 678              		.loc 1 222 0
 679 018a 40F6FF70 		movw	r0, #4095
 680 018e FFF7FEFF 		bl	max2871Set_M
 681              	.LVL104:
 223:Src/max2871.c **** 		max2871Set_DIVA(diva);
 682              		.loc 1 223 0
 683 0192 0020     		movs	r0, #0
 684 0194 FFF7FEFF 		bl	max2871Set_LDF
 685              	.LVL105:
 224:Src/max2871.c **** 		max2871Set_F01(1);
 686              		.loc 1 224 0
 687 0198 4046     		mov	r0, r8
 688 019a FFF7FEFF 		bl	max2871Set_DIVA
 689              	.LVL106:
 225:Src/max2871.c **** 	}
 690              		.loc 1 225 0
 691 019e 0120     		movs	r0, #1
 692 01a0 FFF7FEFF 		bl	max2871Set_F01
 693              	.LVL107:
 694 01a4 C1E7     		b	.L30
 695              	.L46:
 696 01a6 00BF     		.align	2
 697              	.L45:
 698 01a8 0000BC41 		.word	1102839808
 699 01ac 00803B42 		.word	1111195648
 700 01b0 0080BB42 		.word	1119584256
 701 01b4 00803B43 		.word	1127972864
 702 01b8 0080BB43 		.word	1136361472
 703 01bc 00803B44 		.word	1144750080
 704 01c0 0080BB44 		.word	1153138688
 705 01c4 00803B45 		.word	1161527296
 706 01c8 0080BB45 		.word	1169915904
 707 01cc 00000000 		.word	.LC1
 708 01d0 9A991942 		.word	1108973978
 709 01d4 00F07F45 		.word	1166012416
 710              		.cfi_endproc
 711              	.LFE73:
 713              		.section	.text.max2871ChipEnable,"ax",%progbits
 714              		.align	1
 715              		.global	max2871ChipEnable
 716              		.syntax unified
 717              		.thumb
 718              		.thumb_func
 719              		.fpu softvfp
 721              	max2871ChipEnable:
 722              	.LFB74:
 233:Src/max2871.c **** 
 234:Src/max2871.c **** void max2871ChipEnable(struct MAX2871Struct *max2871Status)
 235:Src/max2871.c **** {
 723              		.loc 1 235 0
 724              		.cfi_startproc
 725              		@ args = 0, pretend = 0, frame = 0
 726              		@ frame_needed = 0, uses_anonymous_args = 0
 727              	.LVL108:
 728 0000 10B5     		push	{r4, lr}
 729              	.LCFI4:
 730              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccgGoqyH.s 			page 19


 731              		.cfi_offset 4, -8
 732              		.cfi_offset 14, -4
 733 0002 0446     		mov	r4, r0
 236:Src/max2871.c **** 	HAL_GPIO_WritePin(MAX_CE_GPIO_Port, MAX_CE_Pin, 1);
 734              		.loc 1 236 0
 735 0004 0122     		movs	r2, #1
 736 0006 0821     		movs	r1, #8
 737 0008 0248     		ldr	r0, .L49
 738              	.LVL109:
 739 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 740              	.LVL110:
 237:Src/max2871.c **** 	max2871Status->CHIP_EN = 1;
 741              		.loc 1 237 0
 742 000e 0123     		movs	r3, #1
 743 0010 2370     		strb	r3, [r4]
 238:Src/max2871.c **** }
 744              		.loc 1 238 0
 745 0012 10BD     		pop	{r4, pc}
 746              	.LVL111:
 747              	.L50:
 748              		.align	2
 749              	.L49:
 750 0014 000C0140 		.word	1073810432
 751              		.cfi_endproc
 752              	.LFE74:
 754              		.section	.text.max2871ChipDisable,"ax",%progbits
 755              		.align	1
 756              		.global	max2871ChipDisable
 757              		.syntax unified
 758              		.thumb
 759              		.thumb_func
 760              		.fpu softvfp
 762              	max2871ChipDisable:
 763              	.LFB75:
 239:Src/max2871.c **** 
 240:Src/max2871.c **** void max2871ChipDisable(struct MAX2871Struct *max2871Status)
 241:Src/max2871.c **** {
 764              		.loc 1 241 0
 765              		.cfi_startproc
 766              		@ args = 0, pretend = 0, frame = 0
 767              		@ frame_needed = 0, uses_anonymous_args = 0
 768              	.LVL112:
 769 0000 10B5     		push	{r4, lr}
 770              	.LCFI5:
 771              		.cfi_def_cfa_offset 8
 772              		.cfi_offset 4, -8
 773              		.cfi_offset 14, -4
 774 0002 0446     		mov	r4, r0
 242:Src/max2871.c **** 	HAL_GPIO_WritePin(MAX_CE_GPIO_Port, MAX_CE_Pin, 0);
 775              		.loc 1 242 0
 776 0004 0022     		movs	r2, #0
 777 0006 0821     		movs	r1, #8
 778 0008 0248     		ldr	r0, .L53
 779              	.LVL113:
 780 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 781              	.LVL114:
 243:Src/max2871.c **** 	max2871Status->CHIP_EN = 0;
ARM GAS  /tmp/ccgGoqyH.s 			page 20


 782              		.loc 1 243 0
 783 000e 0023     		movs	r3, #0
 784 0010 2370     		strb	r3, [r4]
 244:Src/max2871.c **** }
 785              		.loc 1 244 0
 786 0012 10BD     		pop	{r4, pc}
 787              	.LVL115:
 788              	.L54:
 789              		.align	2
 790              	.L53:
 791 0014 000C0140 		.word	1073810432
 792              		.cfi_endproc
 793              	.LFE75:
 795              		.section	.text.max2871RFEnable,"ax",%progbits
 796              		.align	1
 797              		.global	max2871RFEnable
 798              		.syntax unified
 799              		.thumb
 800              		.thumb_func
 801              		.fpu softvfp
 803              	max2871RFEnable:
 804              	.LFB76:
 245:Src/max2871.c **** 
 246:Src/max2871.c **** void max2871RFEnable(struct MAX2871Struct *max2871Status)
 247:Src/max2871.c **** {
 805              		.loc 1 247 0
 806              		.cfi_startproc
 807              		@ args = 0, pretend = 0, frame = 0
 808              		@ frame_needed = 0, uses_anonymous_args = 0
 809              	.LVL116:
 810 0000 10B5     		push	{r4, lr}
 811              	.LCFI6:
 812              		.cfi_def_cfa_offset 8
 813              		.cfi_offset 4, -8
 814              		.cfi_offset 14, -4
 815 0002 0446     		mov	r4, r0
 248:Src/max2871.c **** 	max2871Set_RFA_EN(1);
 816              		.loc 1 248 0
 817 0004 0120     		movs	r0, #1
 818              	.LVL117:
 819 0006 FFF7FEFF 		bl	max2871Set_RFA_EN
 820              	.LVL118:
 249:Src/max2871.c **** 	HAL_GPIO_WritePin(MAX_RFOUT_EN_GPIO_Port, MAX_RFOUT_EN_Pin, 1);
 821              		.loc 1 249 0
 822 000a 0122     		movs	r2, #1
 823 000c 0421     		movs	r1, #4
 824 000e 0648     		ldr	r0, .L57
 825 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
 826              	.LVL119:
 250:Src/max2871.c **** 	max2871ChipEnable(max2871Status);
 827              		.loc 1 250 0
 828 0014 2046     		mov	r0, r4
 829 0016 FFF7FEFF 		bl	max2871ChipEnable
 830              	.LVL120:
 251:Src/max2871.c **** 	max2871Status->RFA_EN = 1;
 831              		.loc 1 251 0
 832 001a 0123     		movs	r3, #1
ARM GAS  /tmp/ccgGoqyH.s 			page 21


 833 001c 2372     		strb	r3, [r4, #8]
 252:Src/max2871.c **** 	max2871Status->RF_CHIP_EN = 1;
 834              		.loc 1 252 0
 835 001e 6372     		strb	r3, [r4, #9]
 253:Src/max2871.c **** 	max2871WriteRegisters();
 836              		.loc 1 253 0
 837 0020 FFF7FEFF 		bl	max2871WriteRegisters
 838              	.LVL121:
 254:Src/max2871.c **** }
 839              		.loc 1 254 0
 840 0024 10BD     		pop	{r4, pc}
 841              	.LVL122:
 842              	.L58:
 843 0026 00BF     		.align	2
 844              	.L57:
 845 0028 00080140 		.word	1073809408
 846              		.cfi_endproc
 847              	.LFE76:
 849              		.section	.text.max2871RFDisable,"ax",%progbits
 850              		.align	1
 851              		.global	max2871RFDisable
 852              		.syntax unified
 853              		.thumb
 854              		.thumb_func
 855              		.fpu softvfp
 857              	max2871RFDisable:
 858              	.LFB77:
 255:Src/max2871.c **** 
 256:Src/max2871.c **** void max2871RFDisable(struct MAX2871Struct *max2871Status)
 257:Src/max2871.c **** {
 859              		.loc 1 257 0
 860              		.cfi_startproc
 861              		@ args = 0, pretend = 0, frame = 0
 862              		@ frame_needed = 0, uses_anonymous_args = 0
 863              	.LVL123:
 864 0000 10B5     		push	{r4, lr}
 865              	.LCFI7:
 866              		.cfi_def_cfa_offset 8
 867              		.cfi_offset 4, -8
 868              		.cfi_offset 14, -4
 869 0002 0446     		mov	r4, r0
 258:Src/max2871.c **** 	max2871Set_RFA_EN(0);
 870              		.loc 1 258 0
 871 0004 0020     		movs	r0, #0
 872              	.LVL124:
 873 0006 FFF7FEFF 		bl	max2871Set_RFA_EN
 874              	.LVL125:
 259:Src/max2871.c **** 	HAL_GPIO_WritePin(MAX_RFOUT_EN_GPIO_Port, MAX_RFOUT_EN_Pin, 0);
 875              		.loc 1 259 0
 876 000a 0022     		movs	r2, #0
 877 000c 0421     		movs	r1, #4
 878 000e 0448     		ldr	r0, .L61
 879 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
 880              	.LVL126:
 260:Src/max2871.c **** 	max2871Status->RFA_EN = 0;
 881              		.loc 1 260 0
 882 0014 0023     		movs	r3, #0
ARM GAS  /tmp/ccgGoqyH.s 			page 22


 883 0016 2372     		strb	r3, [r4, #8]
 261:Src/max2871.c **** 	max2871Status->RF_CHIP_EN = 0;
 884              		.loc 1 261 0
 885 0018 6372     		strb	r3, [r4, #9]
 262:Src/max2871.c **** 	max2871WriteRegisters();
 886              		.loc 1 262 0
 887 001a FFF7FEFF 		bl	max2871WriteRegisters
 888              	.LVL127:
 263:Src/max2871.c **** }
 889              		.loc 1 263 0
 890 001e 10BD     		pop	{r4, pc}
 891              	.LVL128:
 892              	.L62:
 893              		.align	2
 894              	.L61:
 895 0020 00080140 		.word	1073809408
 896              		.cfi_endproc
 897              	.LFE77:
 899              		.section	.text.max2871SetPower,"ax",%progbits
 900              		.align	1
 901              		.global	max2871SetPower
 902              		.syntax unified
 903              		.thumb
 904              		.thumb_func
 905              		.fpu softvfp
 907              	max2871SetPower:
 908              	.LFB78:
 264:Src/max2871.c **** 
 265:Src/max2871.c **** void max2871SetPower(int8_t dbm, struct MAX2871Struct *max2871Status)
 266:Src/max2871.c **** {
 909              		.loc 1 266 0
 910              		.cfi_startproc
 911              		@ args = 0, pretend = 0, frame = 0
 912              		@ frame_needed = 0, uses_anonymous_args = 0
 913              	.LVL129:
 914 0000 10B5     		push	{r4, lr}
 915              	.LCFI8:
 916              		.cfi_def_cfa_offset 8
 917              		.cfi_offset 4, -8
 918              		.cfi_offset 14, -4
 919 0002 0C46     		mov	r4, r1
 267:Src/max2871.c **** 	switch (dbm)
 920              		.loc 1 267 0
 921 0004 0430     		adds	r0, r0, #4
 922              	.LVL130:
 923 0006 0928     		cmp	r0, #9
 924 0008 17D8     		bhi	.L64
 925 000a DFE800F0 		tbb	[pc, r0]
 926              	.L66:
 927 000e 05       		.byte	(.L65-.L66)/2
 928 000f 16       		.byte	(.L64-.L66)/2
 929 0010 16       		.byte	(.L64-.L66)/2
 930 0011 0D       		.byte	(.L67-.L66)/2
 931 0012 16       		.byte	(.L64-.L66)/2
 932 0013 16       		.byte	(.L64-.L66)/2
 933 0014 10       		.byte	(.L68-.L66)/2
 934 0015 16       		.byte	(.L64-.L66)/2
ARM GAS  /tmp/ccgGoqyH.s 			page 23


 935 0016 16       		.byte	(.L64-.L66)/2
 936 0017 13       		.byte	(.L69-.L66)/2
 937              		.p2align 1
 938              	.L65:
 268:Src/max2871.c **** 	{
 269:Src/max2871.c **** 		case -4:
 270:Src/max2871.c **** 			max2871Status->rfPower = 0;
 939              		.loc 1 270 0
 940 0018 0023     		movs	r3, #0
 941 001a 8B72     		strb	r3, [r1, #10]
 942              	.LVL131:
 943              	.L70:
 271:Src/max2871.c **** 			break;
 272:Src/max2871.c **** 
 273:Src/max2871.c **** 		case -1:
 274:Src/max2871.c **** 			max2871Status->rfPower = 1;
 275:Src/max2871.c **** 			break;
 276:Src/max2871.c **** 
 277:Src/max2871.c **** 		case 2:
 278:Src/max2871.c **** 			max2871Status->rfPower = 2;
 279:Src/max2871.c **** 			break;
 280:Src/max2871.c **** 
 281:Src/max2871.c **** 		case 5:
 282:Src/max2871.c **** 			max2871Status->rfPower = 3;
 283:Src/max2871.c **** 			break;
 284:Src/max2871.c **** 		default:
 285:Src/max2871.c **** 			printUSB((uint8_t *) "> Bad input power to max2871SetPower");
 286:Src/max2871.c **** 	}
 287:Src/max2871.c **** 
 288:Src/max2871.c **** 	max2871Set_APWR(max2871Status->rfPower);
 944              		.loc 1 288 0
 945 001c A07A     		ldrb	r0, [r4, #10]	@ zero_extendqisi2
 946 001e FFF7FEFF 		bl	max2871Set_APWR
 947              	.LVL132:
 289:Src/max2871.c **** 	max2871WriteRegisters();
 948              		.loc 1 289 0
 949 0022 FFF7FEFF 		bl	max2871WriteRegisters
 950              	.LVL133:
 290:Src/max2871.c **** }
 951              		.loc 1 290 0
 952 0026 10BD     		pop	{r4, pc}
 953              	.LVL134:
 954              	.L67:
 274:Src/max2871.c **** 			break;
 955              		.loc 1 274 0
 956 0028 0123     		movs	r3, #1
 957 002a 8B72     		strb	r3, [r1, #10]
 275:Src/max2871.c **** 
 958              		.loc 1 275 0
 959 002c F6E7     		b	.L70
 960              	.L68:
 278:Src/max2871.c **** 			break;
 961              		.loc 1 278 0
 962 002e 0223     		movs	r3, #2
 963 0030 8B72     		strb	r3, [r1, #10]
 279:Src/max2871.c **** 
 964              		.loc 1 279 0
ARM GAS  /tmp/ccgGoqyH.s 			page 24


 965 0032 F3E7     		b	.L70
 966              	.L69:
 282:Src/max2871.c **** 			break;
 967              		.loc 1 282 0
 968 0034 0323     		movs	r3, #3
 969 0036 8B72     		strb	r3, [r1, #10]
 283:Src/max2871.c **** 		default:
 970              		.loc 1 283 0
 971 0038 F0E7     		b	.L70
 972              	.L64:
 285:Src/max2871.c **** 	}
 973              		.loc 1 285 0
 974 003a 0248     		ldr	r0, .L72
 975 003c FFF7FEFF 		bl	printUSB
 976              	.LVL135:
 977 0040 ECE7     		b	.L70
 978              	.L73:
 979 0042 00BF     		.align	2
 980              	.L72:
 981 0044 00000000 		.word	.LC2
 982              		.cfi_endproc
 983              	.LFE78:
 985              		.section	.text.max2871CheckLD,"ax",%progbits
 986              		.align	1
 987              		.global	max2871CheckLD
 988              		.syntax unified
 989              		.thumb
 990              		.thumb_func
 991              		.fpu softvfp
 993              	max2871CheckLD:
 994              	.LFB79:
 291:Src/max2871.c **** 
 292:Src/max2871.c **** int8_t max2871CheckLD(struct MAX2871Struct *max2871Status)
 293:Src/max2871.c **** {
 995              		.loc 1 293 0
 996              		.cfi_startproc
 997              		@ args = 0, pretend = 0, frame = 0
 998              		@ frame_needed = 0, uses_anonymous_args = 0
 999              	.LVL136:
 1000 0000 10B5     		push	{r4, lr}
 1001              	.LCFI9:
 1002              		.cfi_def_cfa_offset 8
 1003              		.cfi_offset 4, -8
 1004              		.cfi_offset 14, -4
 1005 0002 0446     		mov	r4, r0
 294:Src/max2871.c **** 	max2871Status->ldState = HAL_GPIO_ReadPin(MAX_LD_GPIO_Port, MAX_LD_Pin);
 1006              		.loc 1 294 0
 1007 0004 0821     		movs	r1, #8
 1008 0006 0548     		ldr	r0, .L78
 1009              	.LVL137:
 1010 0008 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1011              	.LVL138:
 1012 000c 6070     		strb	r0, [r4, #1]
 295:Src/max2871.c **** 
 296:Src/max2871.c **** 	if (max2871Status->ldState)
 1013              		.loc 1 296 0
 1014 000e 08B1     		cbz	r0, .L76
ARM GAS  /tmp/ccgGoqyH.s 			page 25


 297:Src/max2871.c **** 		return 1;
 1015              		.loc 1 297 0
 1016 0010 0120     		movs	r0, #1
 1017              	.L75:
 298:Src/max2871.c **** 	else
 299:Src/max2871.c **** 		return -1;
 300:Src/max2871.c **** }
 1018              		.loc 1 300 0
 1019 0012 10BD     		pop	{r4, pc}
 1020              	.LVL139:
 1021              	.L76:
 299:Src/max2871.c **** }
 1022              		.loc 1 299 0
 1023 0014 4FF0FF30 		mov	r0, #-1
 1024 0018 FBE7     		b	.L75
 1025              	.L79:
 1026 001a 00BF     		.align	2
 1027              	.L78:
 1028 001c 00080140 		.word	1073809408
 1029              		.cfi_endproc
 1030              	.LFE79:
 1032              		.section	.text.max2871Setup,"ax",%progbits
 1033              		.align	1
 1034              		.global	max2871Setup
 1035              		.syntax unified
 1036              		.thumb
 1037              		.thumb_func
 1038              		.fpu softvfp
 1040              	max2871Setup:
 1041              	.LFB69:
  19:Src/max2871.c **** 	// Set to initial known state
 1042              		.loc 1 19 0
 1043              		.cfi_startproc
 1044              		@ args = 0, pretend = 0, frame = 0
 1045              		@ frame_needed = 0, uses_anonymous_args = 0
 1046              	.LVL140:
 1047 0000 70B5     		push	{r4, r5, r6, lr}
 1048              	.LCFI10:
 1049              		.cfi_def_cfa_offset 16
 1050              		.cfi_offset 4, -16
 1051              		.cfi_offset 5, -12
 1052              		.cfi_offset 6, -8
 1053              		.cfi_offset 14, -4
 1054 0002 0646     		mov	r6, r0
  21:Src/max2871.c **** 	max2871RFDisable(max2871Status);
 1055              		.loc 1 21 0
 1056 0004 FFF7FEFF 		bl	max2871ChipEnable
 1057              	.LVL141:
  22:Src/max2871.c **** 	HAL_GPIO_WritePin(MAX_CLK_GPIO_Port, MAX_CLK_Pin, 0);
 1058              		.loc 1 22 0
 1059 0008 3046     		mov	r0, r6
 1060 000a FFF7FEFF 		bl	max2871RFDisable
 1061              	.LVL142:
  23:Src/max2871.c **** 	HAL_GPIO_WritePin(MAX_DAT_GPIO_Port, MAX_DAT_Pin, 0);
 1062              		.loc 1 23 0
 1063 000e 654C     		ldr	r4, .L89
 1064 0010 0022     		movs	r2, #0
ARM GAS  /tmp/ccgGoqyH.s 			page 26


 1065 0012 2021     		movs	r1, #32
 1066 0014 2046     		mov	r0, r4
 1067 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1068              	.LVL143:
  24:Src/max2871.c **** 	HAL_GPIO_WritePin(MAX_MUX_GPIO_Port, MAX_MUX_Pin, 0);
 1069              		.loc 1 24 0
 1070 001a 0022     		movs	r2, #0
 1071 001c 1021     		movs	r1, #16
 1072 001e 2046     		mov	r0, r4
 1073 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1074              	.LVL144:
  25:Src/max2871.c **** 	HAL_GPIO_WritePin(MAX_LE_GPIO_Port, MAX_LE_Pin, 1);
 1075              		.loc 1 25 0
 1076 0024 0022     		movs	r2, #0
 1077 0026 8021     		movs	r1, #128
 1078 0028 2046     		mov	r0, r4
 1079 002a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1080              	.LVL145:
  26:Src/max2871.c **** 
 1081              		.loc 1 26 0
 1082 002e 0122     		movs	r2, #1
 1083 0030 0221     		movs	r1, #2
 1084 0032 5D48     		ldr	r0, .L89+4
 1085 0034 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1086              	.LVL146:
  28:Src/max2871.c **** 
 1087              		.loc 1 28 0
 1088 0038 FFF7FEFF 		bl	max2871RegsInit
 1089              	.LVL147:
 1090              	.LBB31:
  32:Src/max2871.c **** 	{
 1091              		.loc 1 32 0
 1092 003c 0125     		movs	r5, #1
 1093 003e 11E0     		b	.L81
 1094              	.LVL148:
 1095              	.L82:
 1096              	.LBB32:
  34:Src/max2871.c **** 		{
 1097              		.loc 1 34 0 discriminator 2
 1098 0040 013C     		subs	r4, r4, #1
 1099              	.LVL149:
 1100              	.L84:
  34:Src/max2871.c **** 		{
 1101              		.loc 1 34 0 is_stmt 0 discriminator 1
 1102 0042 002C     		cmp	r4, #0
 1103 0044 0ADB     		blt	.L87
  36:Src/max2871.c **** 			max2871SpiWrite(txReg);
 1104              		.loc 1 36 0 is_stmt 1
 1105 0046 E0B2     		uxtb	r0, r4
 1106 0048 FFF7FEFF 		bl	max2871GetRegister
 1107              	.LVL150:
  37:Src/max2871.c **** 			if (i == 5) HAL_Delay(20);
 1108              		.loc 1 37 0
 1109 004c FFF7FEFF 		bl	max2871SpiWrite
 1110              	.LVL151:
  38:Src/max2871.c **** 		}
 1111              		.loc 1 38 0
ARM GAS  /tmp/ccgGoqyH.s 			page 27


 1112 0050 052C     		cmp	r4, #5
 1113 0052 F5D1     		bne	.L82
  38:Src/max2871.c **** 		}
 1114              		.loc 1 38 0 is_stmt 0 discriminator 1
 1115 0054 1420     		movs	r0, #20
 1116 0056 FFF7FEFF 		bl	HAL_Delay
 1117              	.LVL152:
 1118 005a F1E7     		b	.L82
 1119              	.L87:
 1120              	.LBE32:
  40:Src/max2871.c **** 	}
 1121              		.loc 1 40 0 is_stmt 1 discriminator 2
 1122 005c 1420     		movs	r0, #20
 1123 005e FFF7FEFF 		bl	HAL_Delay
 1124              	.LVL153:
  32:Src/max2871.c **** 	{
 1125              		.loc 1 32 0 discriminator 2
 1126 0062 013D     		subs	r5, r5, #1
 1127              	.LVL154:
 1128              	.L81:
  32:Src/max2871.c **** 	{
 1129              		.loc 1 32 0 is_stmt 0 discriminator 1
 1130 0064 002D     		cmp	r5, #0
 1131 0066 01DB     		blt	.L88
 1132              	.LBB33:
  34:Src/max2871.c **** 		{
 1133              		.loc 1 34 0 is_stmt 1
 1134 0068 0524     		movs	r4, #5
 1135 006a EAE7     		b	.L84
 1136              	.L88:
 1137              	.LBE33:
 1138              	.LBE31:
  44:Src/max2871.c **** 	max2871Set_N(83);		// Init to 50Mhz
 1139              		.loc 1 44 0
 1140 006c 0020     		movs	r0, #0
 1141 006e FFF7FEFF 		bl	max2871Set_INT
 1142              	.LVL155:
  45:Src/max2871.c **** 	max2871Set_FRAC(1365);
 1143              		.loc 1 45 0
 1144 0072 5320     		movs	r0, #83
 1145 0074 FFF7FEFF 		bl	max2871Set_N
 1146              	.LVL156:
  46:Src/max2871.c **** 	max2871Set_CPOC(0);
 1147              		.loc 1 46 0
 1148 0078 40F25550 		movw	r0, #1365
 1149 007c FFF7FEFF 		bl	max2871Set_FRAC
 1150              	.LVL157:
  47:Src/max2871.c **** 	max2871Set_CPL(0);
 1151              		.loc 1 47 0
 1152 0080 0020     		movs	r0, #0
 1153 0082 FFF7FEFF 		bl	max2871Set_CPOC
 1154              	.LVL158:
  48:Src/max2871.c **** 	max2871Set_CPT(0);
 1155              		.loc 1 48 0
 1156 0086 0020     		movs	r0, #0
 1157 0088 FFF7FEFF 		bl	max2871Set_CPL
 1158              	.LVL159:
ARM GAS  /tmp/ccgGoqyH.s 			page 28


  49:Src/max2871.c **** 	max2871Set_P(1);
 1159              		.loc 1 49 0
 1160 008c 0020     		movs	r0, #0
 1161 008e FFF7FEFF 		bl	max2871Set_CPT
 1162              	.LVL160:
  50:Src/max2871.c **** 	max2871Set_M(4095);
 1163              		.loc 1 50 0
 1164 0092 0120     		movs	r0, #1
 1165 0094 FFF7FEFF 		bl	max2871Set_P
 1166              	.LVL161:
  51:Src/max2871.c **** 	max2871Set_LDS(1);
 1167              		.loc 1 51 0
 1168 0098 40F6FF70 		movw	r0, #4095
 1169 009c FFF7FEFF 		bl	max2871Set_M
 1170              	.LVL162:
  52:Src/max2871.c **** 	max2871Set_SDN(0);
 1171              		.loc 1 52 0
 1172 00a0 0120     		movs	r0, #1
 1173 00a2 FFF7FEFF 		bl	max2871Set_LDS
 1174              	.LVL163:
  53:Src/max2871.c **** 	max2871Set_MUX(0xC); 	// Reg 6 Readback 0xC
 1175              		.loc 1 53 0
 1176 00a6 0020     		movs	r0, #0
 1177 00a8 FFF7FEFF 		bl	max2871Set_SDN
 1178              	.LVL164:
  54:Src/max2871.c **** 	max2871Set_DBR(1);
 1179              		.loc 1 54 0
 1180 00ac 0C20     		movs	r0, #12
 1181 00ae FFF7FEFF 		bl	max2871Set_MUX
 1182              	.LVL165:
  55:Src/max2871.c **** 	max2871Set_RDIV2(0);
 1183              		.loc 1 55 0
 1184 00b2 0120     		movs	r0, #1
 1185 00b4 FFF7FEFF 		bl	max2871Set_DBR
 1186              	.LVL166:
  56:Src/max2871.c **** 	max2871Set_R(1); 		// 38.4MHz f_PFD
 1187              		.loc 1 56 0
 1188 00b8 0020     		movs	r0, #0
 1189 00ba FFF7FEFF 		bl	max2871Set_RDIV2
 1190              	.LVL167:
  57:Src/max2871.c **** 	max2871Set_REG4DB(0);
 1191              		.loc 1 57 0
 1192 00be 0120     		movs	r0, #1
 1193 00c0 FFF7FEFF 		bl	max2871Set_R
 1194              	.LVL168:
  58:Src/max2871.c **** 	max2871Set_CP(15);
 1195              		.loc 1 58 0
 1196 00c4 0020     		movs	r0, #0
 1197 00c6 FFF7FEFF 		bl	max2871Set_REG4DB
 1198              	.LVL169:
  59:Src/max2871.c **** 	max2871Set_LDF(0);
 1199              		.loc 1 59 0
 1200 00ca 0F20     		movs	r0, #15
 1201 00cc FFF7FEFF 		bl	max2871Set_CP
 1202              	.LVL170:
  60:Src/max2871.c **** 	max2871Set_LDP(0);
 1203              		.loc 1 60 0
ARM GAS  /tmp/ccgGoqyH.s 			page 29


 1204 00d0 0020     		movs	r0, #0
 1205 00d2 FFF7FEFF 		bl	max2871Set_LDF
 1206              	.LVL171:
  61:Src/max2871.c **** 	max2871Set_PDP(1);
 1207              		.loc 1 61 0
 1208 00d6 0020     		movs	r0, #0
 1209 00d8 FFF7FEFF 		bl	max2871Set_LDP
 1210              	.LVL172:
  62:Src/max2871.c **** 	max2871Set_SHDN(0);
 1211              		.loc 1 62 0
 1212 00dc 0120     		movs	r0, #1
 1213 00de FFF7FEFF 		bl	max2871Set_PDP
 1214              	.LVL173:
  63:Src/max2871.c **** 	max2871Set_TRI(0);
 1215              		.loc 1 63 0
 1216 00e2 0020     		movs	r0, #0
 1217 00e4 FFF7FEFF 		bl	max2871Set_SHDN
 1218              	.LVL174:
  64:Src/max2871.c **** 	max2871Set_RST(0);
 1219              		.loc 1 64 0
 1220 00e8 0020     		movs	r0, #0
 1221 00ea FFF7FEFF 		bl	max2871Set_TRI
 1222              	.LVL175:
  65:Src/max2871.c **** 	max2871Set_VCO(0);
 1223              		.loc 1 65 0
 1224 00ee 0020     		movs	r0, #0
 1225 00f0 FFF7FEFF 		bl	max2871Set_RST
 1226              	.LVL176:
  66:Src/max2871.c **** 	max2871Set_VAS_SHDN(0);
 1227              		.loc 1 66 0
 1228 00f4 0020     		movs	r0, #0
 1229 00f6 FFF7FEFF 		bl	max2871Set_VCO
 1230              	.LVL177:
  67:Src/max2871.c **** 	max2871Set_VAS_TEMP(1);
 1231              		.loc 1 67 0
 1232 00fa 0020     		movs	r0, #0
 1233 00fc FFF7FEFF 		bl	max2871Set_VAS_SHDN
 1234              	.LVL178:
  68:Src/max2871.c **** 	max2871Set_CSM(0);
 1235              		.loc 1 68 0
 1236 0100 0120     		movs	r0, #1
 1237 0102 FFF7FEFF 		bl	max2871Set_VAS_TEMP
 1238              	.LVL179:
  69:Src/max2871.c **** 	max2871Set_MUTEDEL(1);
 1239              		.loc 1 69 0
 1240 0106 0020     		movs	r0, #0
 1241 0108 FFF7FEFF 		bl	max2871Set_CSM
 1242              	.LVL180:
  70:Src/max2871.c **** 	max2871Set_CDM(0);
 1243              		.loc 1 70 0
 1244 010c 0120     		movs	r0, #1
 1245 010e FFF7FEFF 		bl	max2871Set_MUTEDEL
 1246              	.LVL181:
  71:Src/max2871.c **** 	max2871Set_CDIV(38);
 1247              		.loc 1 71 0
 1248 0112 0020     		movs	r0, #0
 1249 0114 FFF7FEFF 		bl	max2871Set_CDM
ARM GAS  /tmp/ccgGoqyH.s 			page 30


 1250              	.LVL182:
  72:Src/max2871.c **** 	max2871Set_SDLDO(0);
 1251              		.loc 1 72 0
 1252 0118 2620     		movs	r0, #38
 1253 011a FFF7FEFF 		bl	max2871Set_CDIV
 1254              	.LVL183:
  73:Src/max2871.c **** 	max2871Set_SDDIV(0);
 1255              		.loc 1 73 0
 1256 011e 0020     		movs	r0, #0
 1257 0120 FFF7FEFF 		bl	max2871Set_SDLDO
 1258              	.LVL184:
  74:Src/max2871.c **** 	max2871Set_SDREF(0);
 1259              		.loc 1 74 0
 1260 0124 0020     		movs	r0, #0
 1261 0126 FFF7FEFF 		bl	max2871Set_SDDIV
 1262              	.LVL185:
  75:Src/max2871.c **** 	max2871Set_BS(768);		//BS = fPFD / 50KHz
 1263              		.loc 1 75 0
 1264 012a 0020     		movs	r0, #0
 1265 012c FFF7FEFF 		bl	max2871Set_SDREF
 1266              	.LVL186:
  76:Src/max2871.c **** 	max2871Set_FB(1);
 1267              		.loc 1 76 0
 1268 0130 4FF44070 		mov	r0, #768
 1269 0134 FFF7FEFF 		bl	max2871Set_BS
 1270              	.LVL187:
  77:Src/max2871.c **** 	max2871Set_DIVA(6);
 1271              		.loc 1 77 0
 1272 0138 0120     		movs	r0, #1
 1273 013a FFF7FEFF 		bl	max2871Set_FB
 1274              	.LVL188:
  78:Src/max2871.c **** 	max2871Set_SDVCO(0);
 1275              		.loc 1 78 0
 1276 013e 0620     		movs	r0, #6
 1277 0140 FFF7FEFF 		bl	max2871Set_DIVA
 1278              	.LVL189:
  79:Src/max2871.c **** 	max2871Set_MTLD(1);
 1279              		.loc 1 79 0
 1280 0144 0020     		movs	r0, #0
 1281 0146 FFF7FEFF 		bl	max2871Set_SDVCO
 1282              	.LVL190:
  80:Src/max2871.c **** 	max2871Set_BDIV(0);
 1283              		.loc 1 80 0
 1284 014a 0120     		movs	r0, #1
 1285 014c FFF7FEFF 		bl	max2871Set_MTLD
 1286              	.LVL191:
  81:Src/max2871.c **** 	max2871Set_RFB_EN(0);
 1287              		.loc 1 81 0
 1288 0150 0020     		movs	r0, #0
 1289 0152 FFF7FEFF 		bl	max2871Set_BDIV
 1290              	.LVL192:
  82:Src/max2871.c **** 	max2871Set_BPWR(0);
 1291              		.loc 1 82 0
 1292 0156 0020     		movs	r0, #0
 1293 0158 FFF7FEFF 		bl	max2871Set_RFB_EN
 1294              	.LVL193:
  83:Src/max2871.c **** 	max2871Set_RFA_EN(0);	// Begin with power off
ARM GAS  /tmp/ccgGoqyH.s 			page 31


 1295              		.loc 1 83 0
 1296 015c 0020     		movs	r0, #0
 1297 015e FFF7FEFF 		bl	max2871Set_BPWR
 1298              	.LVL194:
  84:Src/max2871.c **** 	max2871Set_APWR(3);
 1299              		.loc 1 84 0
 1300 0162 0020     		movs	r0, #0
 1301 0164 FFF7FEFF 		bl	max2871Set_RFA_EN
 1302              	.LVL195:
  85:Src/max2871.c **** 	max2871Set_SDPLL(0);
 1303              		.loc 1 85 0
 1304 0168 0320     		movs	r0, #3
 1305 016a FFF7FEFF 		bl	max2871Set_APWR
 1306              	.LVL196:
  86:Src/max2871.c **** 	max2871Set_F01(0);
 1307              		.loc 1 86 0
 1308 016e 0020     		movs	r0, #0
 1309 0170 FFF7FEFF 		bl	max2871Set_SDPLL
 1310              	.LVL197:
  87:Src/max2871.c **** 	max2871Set_LD(1);
 1311              		.loc 1 87 0
 1312 0174 0020     		movs	r0, #0
 1313 0176 FFF7FEFF 		bl	max2871Set_F01
 1314              	.LVL198:
  88:Src/max2871.c **** 	max2871Set_Reserved();
 1315              		.loc 1 88 0
 1316 017a 0120     		movs	r0, #1
 1317 017c FFF7FEFF 		bl	max2871Set_LD
 1318              	.LVL199:
  89:Src/max2871.c **** 
 1319              		.loc 1 89 0
 1320 0180 FFF7FEFF 		bl	max2871Set_Reserved
 1321              	.LVL200:
  92:Src/max2871.c **** 	max2871Status->rfPower = 3;
 1322              		.loc 1 92 0
 1323 0184 0023     		movs	r3, #0
 1324 0186 3372     		strb	r3, [r6, #8]
  93:Src/max2871.c **** 	max2871Status->frequency = 50;
 1325              		.loc 1 93 0
 1326 0188 0323     		movs	r3, #3
 1327 018a B372     		strb	r3, [r6, #10]
  94:Src/max2871.c **** 
 1328              		.loc 1 94 0
 1329 018c 074B     		ldr	r3, .L89+8
 1330 018e 7360     		str	r3, [r6, #4]	@ float
  97:Src/max2871.c **** 	HAL_Delay(10);
 1331              		.loc 1 97 0
 1332 0190 FFF7FEFF 		bl	max2871WriteRegisters
 1333              	.LVL201:
  98:Src/max2871.c **** 
 1334              		.loc 1 98 0
 1335 0194 0A20     		movs	r0, #10
 1336 0196 FFF7FEFF 		bl	HAL_Delay
 1337              	.LVL202:
 101:Src/max2871.c **** }
 1338              		.loc 1 101 0
 1339 019a 3046     		mov	r0, r6
ARM GAS  /tmp/ccgGoqyH.s 			page 32


 1340 019c FFF7FEFF 		bl	max2871CheckLD
 1341              	.LVL203:
 102:Src/max2871.c **** 
 1342              		.loc 1 102 0
 1343 01a0 70BD     		pop	{r4, r5, r6, pc}
 1344              	.LVL204:
 1345              	.L90:
 1346 01a2 00BF     		.align	2
 1347              	.L89:
 1348 01a4 000C0140 		.word	1073810432
 1349 01a8 00080140 		.word	1073809408
 1350 01ac 00004842 		.word	1112014848
 1351              		.cfi_endproc
 1352              	.LFE69:
 1354              		.section	.text.max2871PrintRegisters,"ax",%progbits
 1355              		.align	1
 1356              		.global	max2871PrintRegisters
 1357              		.syntax unified
 1358              		.thumb
 1359              		.thumb_func
 1360              		.fpu softvfp
 1362              	max2871PrintRegisters:
 1363              	.LFB80:
 301:Src/max2871.c **** 
 302:Src/max2871.c **** void max2871PrintRegisters(void)
 303:Src/max2871.c **** {
 1364              		.loc 1 303 0
 1365              		.cfi_startproc
 1366              		@ args = 0, pretend = 0, frame = 0
 1367              		@ frame_needed = 0, uses_anonymous_args = 0
 1368 0000 70B5     		push	{r4, r5, r6, lr}
 1369              	.LCFI11:
 1370              		.cfi_def_cfa_offset 16
 1371              		.cfi_offset 4, -16
 1372              		.cfi_offset 5, -12
 1373              		.cfi_offset 6, -8
 1374              		.cfi_offset 14, -4
 1375              	.LVL205:
 1376              	.LBB34:
 304:Src/max2871.c **** 	uint32_t txReg;
 305:Src/max2871.c **** 
 306:Src/max2871.c **** 	for (int8_t i = 0; i <= 5; i++)
 1377              		.loc 1 306 0
 1378 0002 0025     		movs	r5, #0
 1379 0004 12E0     		b	.L92
 1380              	.LVL206:
 1381              	.L93:
 307:Src/max2871.c **** 	{
 308:Src/max2871.c **** 		txReg = max2871GetRegister(i);
 1382              		.loc 1 308 0 discriminator 3
 1383 0006 ECB2     		uxtb	r4, r5
 1384 0008 2046     		mov	r0, r4
 1385 000a FFF7FEFF 		bl	max2871GetRegister
 1386              	.LVL207:
 309:Src/max2871.c **** 		sprintf((char *)str1, "> Register %d = 0x%x\n", i, (unsigned int) txReg);
 1387              		.loc 1 309 0 discriminator 3
 1388 000e 0E4E     		ldr	r6, .L95
ARM GAS  /tmp/ccgGoqyH.s 			page 33


 1389 0010 0346     		mov	r3, r0
 1390 0012 2A46     		mov	r2, r5
 1391 0014 0D49     		ldr	r1, .L95+4
 1392 0016 3046     		mov	r0, r6
 1393              	.LVL208:
 1394 0018 FFF7FEFF 		bl	sprintf
 1395              	.LVL209:
 310:Src/max2871.c **** 		printUSB(str1);
 1396              		.loc 1 310 0 discriminator 3
 1397 001c 3046     		mov	r0, r6
 1398 001e FFF7FEFF 		bl	printUSB
 1399              	.LVL210:
 311:Src/max2871.c **** 		HAL_Delay(10);
 1400              		.loc 1 311 0 discriminator 3
 1401 0022 0A20     		movs	r0, #10
 1402 0024 FFF7FEFF 		bl	HAL_Delay
 1403              	.LVL211:
 306:Src/max2871.c **** 	{
 1404              		.loc 1 306 0 discriminator 3
 1405 0028 0134     		adds	r4, r4, #1
 1406 002a 65B2     		sxtb	r5, r4
 1407              	.LVL212:
 1408              	.L92:
 306:Src/max2871.c **** 	{
 1409              		.loc 1 306 0 is_stmt 0 discriminator 1
 1410 002c 052D     		cmp	r5, #5
 1411 002e EADD     		ble	.L93
 1412              	.LBE34:
 312:Src/max2871.c **** 
 313:Src/max2871.c **** 	}
 314:Src/max2871.c **** 
 315:Src/max2871.c **** 	txReg = max2871SpiRead();
 1413              		.loc 1 315 0 is_stmt 1
 1414 0030 FFF7FEFF 		bl	max2871SpiRead
 1415              	.LVL213:
 316:Src/max2871.c **** 	sprintf((char *)str1, "> Register 6 = 0x%x\n", (unsigned int) txReg);
 1416              		.loc 1 316 0
 1417 0034 044C     		ldr	r4, .L95
 1418 0036 0246     		mov	r2, r0
 1419 0038 0549     		ldr	r1, .L95+8
 1420 003a 2046     		mov	r0, r4
 1421              	.LVL214:
 1422 003c FFF7FEFF 		bl	sprintf
 1423              	.LVL215:
 317:Src/max2871.c **** 	printUSB(str1);
 1424              		.loc 1 317 0
 1425 0040 2046     		mov	r0, r4
 1426 0042 FFF7FEFF 		bl	printUSB
 1427              	.LVL216:
 318:Src/max2871.c **** }
 1428              		.loc 1 318 0
 1429 0046 70BD     		pop	{r4, r5, r6, pc}
 1430              	.LVL217:
 1431              	.L96:
 1432              		.align	2
 1433              	.L95:
 1434 0048 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/ccgGoqyH.s 			page 34


 1435 004c 00000000 		.word	.LC3
 1436 0050 18000000 		.word	.LC4
 1437              		.cfi_endproc
 1438              	.LFE80:
 1440              		.section	.text.max2871PrintStatus,"ax",%progbits
 1441              		.align	1
 1442              		.global	max2871PrintStatus
 1443              		.syntax unified
 1444              		.thumb
 1445              		.thumb_func
 1446              		.fpu softvfp
 1448              	max2871PrintStatus:
 1449              	.LFB81:
 319:Src/max2871.c **** 
 320:Src/max2871.c **** void max2871PrintStatus(uint8_t verbose, struct MAX2871Struct *max2871Status)
 321:Src/max2871.c **** {
 1450              		.loc 1 321 0
 1451              		.cfi_startproc
 1452              		@ args = 0, pretend = 0, frame = 136
 1453              		@ frame_needed = 0, uses_anonymous_args = 0
 1454              	.LVL218:
 1455 0000 30B5     		push	{r4, r5, lr}
 1456              	.LCFI12:
 1457              		.cfi_def_cfa_offset 12
 1458              		.cfi_offset 4, -12
 1459              		.cfi_offset 5, -8
 1460              		.cfi_offset 14, -4
 1461 0002 A3B0     		sub	sp, sp, #140
 1462              	.LCFI13:
 1463              		.cfi_def_cfa_offset 152
 1464 0004 0546     		mov	r5, r0
 1465 0006 0C46     		mov	r4, r1
 322:Src/max2871.c **** 	uint8_t str1[128] = "";
 1466              		.loc 1 322 0
 1467 0008 0021     		movs	r1, #0
 1468              	.LVL219:
 1469 000a 0291     		str	r1, [sp, #8]
 1470 000c 7C22     		movs	r2, #124
 1471 000e 03A8     		add	r0, sp, #12
 1472              	.LVL220:
 1473 0010 FFF7FEFF 		bl	memset
 1474              	.LVL221:
 323:Src/max2871.c **** 	int8_t powerArray[4] = {-4, -1, 2, 5};
 1475              		.loc 1 323 0
 1476 0014 274B     		ldr	r3, .L101
 1477 0016 1B68     		ldr	r3, [r3]
 1478 0018 0193     		str	r3, [sp, #4]
 324:Src/max2871.c **** 
 325:Src/max2871.c **** 	printUSB("> ----  MAX2871  ----\n");
 1479              		.loc 1 325 0
 1480 001a 2748     		ldr	r0, .L101+4
 1481 001c FFF7FEFF 		bl	printUSB
 1482              	.LVL222:
 326:Src/max2871.c **** 
 327:Src/max2871.c **** 	sprintf(str1, "> Chip Enable = %d\n", max2871Status->CHIP_EN);
 1483              		.loc 1 327 0
 1484 0020 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
ARM GAS  /tmp/ccgGoqyH.s 			page 35


 1485 0022 2649     		ldr	r1, .L101+8
 1486 0024 02A8     		add	r0, sp, #8
 1487 0026 FFF7FEFF 		bl	sprintf
 1488              	.LVL223:
 328:Src/max2871.c **** 	printUSB(str1);
 1489              		.loc 1 328 0
 1490 002a 02A8     		add	r0, sp, #8
 1491 002c FFF7FEFF 		bl	printUSB
 1492              	.LVL224:
 329:Src/max2871.c **** 
 330:Src/max2871.c **** 	max2871CheckLD(max2871Status);
 1493              		.loc 1 330 0
 1494 0030 2046     		mov	r0, r4
 1495 0032 FFF7FEFF 		bl	max2871CheckLD
 1496              	.LVL225:
 331:Src/max2871.c **** 	sprintf(str1, "> LD Status = %d\n", max2871Status->ldState);
 1497              		.loc 1 331 0
 1498 0036 6278     		ldrb	r2, [r4, #1]	@ zero_extendqisi2
 1499 0038 2149     		ldr	r1, .L101+12
 1500 003a 02A8     		add	r0, sp, #8
 1501 003c FFF7FEFF 		bl	sprintf
 1502              	.LVL226:
 332:Src/max2871.c **** 	printUSB(str1);
 1503              		.loc 1 332 0
 1504 0040 02A8     		add	r0, sp, #8
 1505 0042 FFF7FEFF 		bl	printUSB
 1506              	.LVL227:
 333:Src/max2871.c **** 
 334:Src/max2871.c **** 	sprintf(str1, "> Set Frequency = %0.2f MHz\n", max2871Status->frequency);
 1507              		.loc 1 334 0
 1508 0046 6068     		ldr	r0, [r4, #4]	@ float
 1509 0048 FFF7FEFF 		bl	__aeabi_f2d
 1510              	.LVL228:
 1511 004c 0246     		mov	r2, r0
 1512 004e 0B46     		mov	r3, r1
 1513 0050 1C49     		ldr	r1, .L101+16
 1514 0052 02A8     		add	r0, sp, #8
 1515 0054 FFF7FEFF 		bl	sprintf
 1516              	.LVL229:
 335:Src/max2871.c **** 	printUSB(str1);
 1517              		.loc 1 335 0
 1518 0058 02A8     		add	r0, sp, #8
 1519 005a FFF7FEFF 		bl	printUSB
 1520              	.LVL230:
 336:Src/max2871.c **** 
 337:Src/max2871.c **** 	sprintf(str1, "> Int-N / nFrac-N = %d\n", max2871Status->intN_nFracN);
 1521              		.loc 1 337 0
 1522 005e E27A     		ldrb	r2, [r4, #11]	@ zero_extendqisi2
 1523 0060 1949     		ldr	r1, .L101+20
 1524 0062 02A8     		add	r0, sp, #8
 1525 0064 FFF7FEFF 		bl	sprintf
 1526              	.LVL231:
 338:Src/max2871.c **** 	printUSB(str1);
 1527              		.loc 1 338 0
 1528 0068 02A8     		add	r0, sp, #8
 1529 006a FFF7FEFF 		bl	printUSB
 1530              	.LVL232:
ARM GAS  /tmp/ccgGoqyH.s 			page 36


 339:Src/max2871.c **** 
 340:Src/max2871.c **** 	sprintf(str1, "> RFA Enable = %d\n", max2871Status->RFA_EN);
 1531              		.loc 1 340 0
 1532 006e 227A     		ldrb	r2, [r4, #8]	@ zero_extendqisi2
 1533 0070 1649     		ldr	r1, .L101+24
 1534 0072 02A8     		add	r0, sp, #8
 1535 0074 FFF7FEFF 		bl	sprintf
 1536              	.LVL233:
 341:Src/max2871.c **** 	printUSB(str1);
 1537              		.loc 1 341 0
 1538 0078 02A8     		add	r0, sp, #8
 1539 007a FFF7FEFF 		bl	printUSB
 1540              	.LVL234:
 342:Src/max2871.c **** 
 343:Src/max2871.c **** 	sprintf(str1, "> RF Out Enable = %d\n", max2871Status->RF_CHIP_EN);
 1541              		.loc 1 343 0
 1542 007e 627A     		ldrb	r2, [r4, #9]	@ zero_extendqisi2
 1543 0080 1349     		ldr	r1, .L101+28
 1544 0082 02A8     		add	r0, sp, #8
 1545 0084 FFF7FEFF 		bl	sprintf
 1546              	.LVL235:
 344:Src/max2871.c **** 	printUSB(str1);
 1547              		.loc 1 344 0
 1548 0088 02A8     		add	r0, sp, #8
 1549 008a FFF7FEFF 		bl	printUSB
 1550              	.LVL236:
 345:Src/max2871.c **** 
 346:Src/max2871.c **** 	sprintf(str1, "> RF Power = %d dBm\n", powerArray[max2871Status->rfPower]);
 1551              		.loc 1 346 0
 1552 008e A37A     		ldrb	r3, [r4, #10]	@ zero_extendqisi2
 1553 0090 22AA     		add	r2, sp, #136
 1554 0092 1344     		add	r3, r3, r2
 1555 0094 13F9842C 		ldrsb	r2, [r3, #-132]
 1556 0098 0E49     		ldr	r1, .L101+32
 1557 009a 02A8     		add	r0, sp, #8
 1558 009c FFF7FEFF 		bl	sprintf
 1559              	.LVL237:
 347:Src/max2871.c **** 	printUSB(str1);
 1560              		.loc 1 347 0
 1561 00a0 02A8     		add	r0, sp, #8
 1562 00a2 FFF7FEFF 		bl	printUSB
 1563              	.LVL238:
 348:Src/max2871.c **** 
 349:Src/max2871.c **** 	if (verbose)
 1564              		.loc 1 349 0
 1565 00a6 0DB9     		cbnz	r5, .L100
 1566              	.L97:
 350:Src/max2871.c **** 	{
 351:Src/max2871.c **** 		max2871PrintRegisters();
 352:Src/max2871.c **** 	}
 353:Src/max2871.c **** }
 1567              		.loc 1 353 0
 1568 00a8 23B0     		add	sp, sp, #140
 1569              	.LCFI14:
 1570              		.cfi_remember_state
 1571              		.cfi_def_cfa_offset 12
 1572              		@ sp needed
ARM GAS  /tmp/ccgGoqyH.s 			page 37


 1573 00aa 30BD     		pop	{r4, r5, pc}
 1574              	.LVL239:
 1575              	.L100:
 1576              	.LCFI15:
 1577              		.cfi_restore_state
 351:Src/max2871.c **** 	}
 1578              		.loc 1 351 0
 1579 00ac FFF7FEFF 		bl	max2871PrintRegisters
 1580              	.LVL240:
 1581              		.loc 1 353 0
 1582 00b0 FAE7     		b	.L97
 1583              	.L102:
 1584 00b2 00BF     		.align	2
 1585              	.L101:
 1586 00b4 00000000 		.word	.LANCHOR1
 1587 00b8 00000000 		.word	.LC5
 1588 00bc 18000000 		.word	.LC6
 1589 00c0 2C000000 		.word	.LC7
 1590 00c4 40000000 		.word	.LC8
 1591 00c8 60000000 		.word	.LC9
 1592 00cc 78000000 		.word	.LC10
 1593 00d0 8C000000 		.word	.LC11
 1594 00d4 A4000000 		.word	.LC12
 1595              		.cfi_endproc
 1596              	.LFE81:
 1598              		.comm	max2871Status,12,4
 1599              		.global	str1
 1600              		.section	.rodata
 1601              		.align	2
 1602              		.set	.LANCHOR1,. + 0
 1603              	.LC0:
 1604 0000 FC       		.byte	-4
 1605 0001 FF       		.byte	-1
 1606 0002 02       		.byte	2
 1607 0003 05       		.byte	5
 1608              		.section	.bss.str1,"aw",%nobits
 1609              		.align	2
 1610              		.set	.LANCHOR0,. + 0
 1613              	str1:
 1614 0000 00000000 		.space	128
 1614      00000000 
 1614      00000000 
 1614      00000000 
 1614      00000000 
 1615              		.section	.rodata.max2871PrintRegisters.str1.4,"aMS",%progbits,1
 1616              		.align	2
 1617              	.LC3:
 1618 0000 3E205265 		.ascii	"> Register %d = 0x%x\012\000"
 1618      67697374 
 1618      65722025 
 1618      64203D20 
 1618      30782578 
 1619 0016 0000     		.space	2
 1620              	.LC4:
 1621 0018 3E205265 		.ascii	"> Register 6 = 0x%x\012\000"
 1621      67697374 
 1621      65722036 
ARM GAS  /tmp/ccgGoqyH.s 			page 38


 1621      203D2030 
 1621      7825780A 
 1622              		.section	.rodata.max2871PrintStatus.str1.4,"aMS",%progbits,1
 1623              		.align	2
 1624              	.LC5:
 1625 0000 3E202D2D 		.ascii	"> ----  MAX2871  ----\012\000"
 1625      2D2D2020 
 1625      4D415832 
 1625      38373120 
 1625      202D2D2D 
 1626 0017 00       		.space	1
 1627              	.LC6:
 1628 0018 3E204368 		.ascii	"> Chip Enable = %d\012\000"
 1628      69702045 
 1628      6E61626C 
 1628      65203D20 
 1628      25640A00 
 1629              	.LC7:
 1630 002c 3E204C44 		.ascii	"> LD Status = %d\012\000"
 1630      20537461 
 1630      74757320 
 1630      3D202564 
 1630      0A00
 1631 003e 0000     		.space	2
 1632              	.LC8:
 1633 0040 3E205365 		.ascii	"> Set Frequency = %0.2f MHz\012\000"
 1633      74204672 
 1633      65717565 
 1633      6E637920 
 1633      3D202530 
 1634 005d 000000   		.space	3
 1635              	.LC9:
 1636 0060 3E20496E 		.ascii	"> Int-N / nFrac-N = %d\012\000"
 1636      742D4E20 
 1636      2F206E46 
 1636      7261632D 
 1636      4E203D20 
 1637              	.LC10:
 1638 0078 3E205246 		.ascii	"> RFA Enable = %d\012\000"
 1638      4120456E 
 1638      61626C65 
 1638      203D2025 
 1638      640A00
 1639 008b 00       		.space	1
 1640              	.LC11:
 1641 008c 3E205246 		.ascii	"> RF Out Enable = %d\012\000"
 1641      204F7574 
 1641      20456E61 
 1641      626C6520 
 1641      3D202564 
 1642 00a2 0000     		.space	2
 1643              	.LC12:
 1644 00a4 3E205246 		.ascii	"> RF Power = %d dBm\012\000"
 1644      20506F77 
 1644      6572203D 
 1644      20256420 
 1644      64426D0A 
ARM GAS  /tmp/ccgGoqyH.s 			page 39


 1645              		.section	.rodata.max2871SetFrequency.str1.4,"aMS",%progbits,1
 1646              		.align	2
 1647              	.LC1:
 1648 0000 3E204261 		.ascii	"> Bad input frequency to max2871SetFrequency\000"
 1648      6420696E 
 1648      70757420 
 1648      66726571 
 1648      75656E63 
 1649              		.section	.rodata.max2871SetPower.str1.4,"aMS",%progbits,1
 1650              		.align	2
 1651              	.LC2:
 1652 0000 3E204261 		.ascii	"> Bad input power to max2871SetPower\000"
 1652      6420696E 
 1652      70757420 
 1652      706F7765 
 1652      7220746F 
 1653              		.text
 1654              	.Letext0:
 1655              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 1656              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 1657              		.file 5 "Drivers/CMSIS/Include/core_cm3.h"
 1658              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 1659              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1660              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1661              		.file 9 "Inc/main.h"
 1662              		.file 10 "Inc/max2871.h"
 1663              		.file 11 "/usr/include/newlib/sys/lock.h"
 1664              		.file 12 "/usr/include/newlib/sys/_types.h"
 1665              		.file 13 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 1666              		.file 14 "/usr/include/newlib/sys/reent.h"
 1667              		.file 15 "/usr/include/newlib/stdlib.h"
 1668              		.file 16 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 1669              		.file 17 "Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc/usbd_cdc.h"
 1670              		.file 18 "Inc/usbd_cdc_if.h"
 1671              		.file 19 "/usr/include/newlib/math.h"
 1672              		.file 20 "/usr/include/newlib/stdio.h"
 1673              		.file 21 "Inc/max2871_registers.h"
 1674              		.file 22 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1675              		.file 23 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1676              		.file 24 "<built-in>"
ARM GAS  /tmp/ccgGoqyH.s 			page 40


DEFINED SYMBOLS
                            *ABS*:0000000000000000 max2871.c
     /tmp/ccgGoqyH.s:16     .text.max2871SpiWrite:0000000000000000 $t
     /tmp/ccgGoqyH.s:23     .text.max2871SpiWrite:0000000000000000 max2871SpiWrite
     /tmp/ccgGoqyH.s:180    .text.max2871SpiWrite:00000000000000bc $d
     /tmp/ccgGoqyH.s:188    .text.max2871SpiRead:0000000000000000 $t
     /tmp/ccgGoqyH.s:195    .text.max2871SpiRead:0000000000000000 max2871SpiRead
     /tmp/ccgGoqyH.s:328    .text.max2871SpiRead:0000000000000094 $d
     /tmp/ccgGoqyH.s:336    .text.max2871WriteRegisters:0000000000000000 $t
     /tmp/ccgGoqyH.s:343    .text.max2871WriteRegisters:0000000000000000 max2871WriteRegisters
     /tmp/ccgGoqyH.s:392    .text.max2871SetFrequency:0000000000000000 $t
     /tmp/ccgGoqyH.s:399    .text.max2871SetFrequency:0000000000000000 max2871SetFrequency
     /tmp/ccgGoqyH.s:698    .text.max2871SetFrequency:00000000000001a8 $d
     /tmp/ccgGoqyH.s:714    .text.max2871ChipEnable:0000000000000000 $t
     /tmp/ccgGoqyH.s:721    .text.max2871ChipEnable:0000000000000000 max2871ChipEnable
     /tmp/ccgGoqyH.s:750    .text.max2871ChipEnable:0000000000000014 $d
     /tmp/ccgGoqyH.s:755    .text.max2871ChipDisable:0000000000000000 $t
     /tmp/ccgGoqyH.s:762    .text.max2871ChipDisable:0000000000000000 max2871ChipDisable
     /tmp/ccgGoqyH.s:791    .text.max2871ChipDisable:0000000000000014 $d
     /tmp/ccgGoqyH.s:796    .text.max2871RFEnable:0000000000000000 $t
     /tmp/ccgGoqyH.s:803    .text.max2871RFEnable:0000000000000000 max2871RFEnable
     /tmp/ccgGoqyH.s:845    .text.max2871RFEnable:0000000000000028 $d
     /tmp/ccgGoqyH.s:850    .text.max2871RFDisable:0000000000000000 $t
     /tmp/ccgGoqyH.s:857    .text.max2871RFDisable:0000000000000000 max2871RFDisable
     /tmp/ccgGoqyH.s:895    .text.max2871RFDisable:0000000000000020 $d
     /tmp/ccgGoqyH.s:900    .text.max2871SetPower:0000000000000000 $t
     /tmp/ccgGoqyH.s:907    .text.max2871SetPower:0000000000000000 max2871SetPower
     /tmp/ccgGoqyH.s:927    .text.max2871SetPower:000000000000000e $d
     /tmp/ccgGoqyH.s:937    .text.max2871SetPower:0000000000000018 $t
     /tmp/ccgGoqyH.s:981    .text.max2871SetPower:0000000000000044 $d
     /tmp/ccgGoqyH.s:986    .text.max2871CheckLD:0000000000000000 $t
     /tmp/ccgGoqyH.s:993    .text.max2871CheckLD:0000000000000000 max2871CheckLD
     /tmp/ccgGoqyH.s:1028   .text.max2871CheckLD:000000000000001c $d
     /tmp/ccgGoqyH.s:1033   .text.max2871Setup:0000000000000000 $t
     /tmp/ccgGoqyH.s:1040   .text.max2871Setup:0000000000000000 max2871Setup
     /tmp/ccgGoqyH.s:1348   .text.max2871Setup:00000000000001a4 $d
     /tmp/ccgGoqyH.s:1355   .text.max2871PrintRegisters:0000000000000000 $t
     /tmp/ccgGoqyH.s:1362   .text.max2871PrintRegisters:0000000000000000 max2871PrintRegisters
     /tmp/ccgGoqyH.s:1434   .text.max2871PrintRegisters:0000000000000048 $d
     /tmp/ccgGoqyH.s:1441   .text.max2871PrintStatus:0000000000000000 $t
     /tmp/ccgGoqyH.s:1448   .text.max2871PrintStatus:0000000000000000 max2871PrintStatus
     /tmp/ccgGoqyH.s:1586   .text.max2871PrintStatus:00000000000000b4 $d
                            *COM*:000000000000000c max2871Status
     /tmp/ccgGoqyH.s:1613   .bss.str1:0000000000000000 str1
     /tmp/ccgGoqyH.s:1601   .rodata:0000000000000000 $d
     /tmp/ccgGoqyH.s:1609   .bss.str1:0000000000000000 $d
     /tmp/ccgGoqyH.s:1616   .rodata.max2871PrintRegisters.str1.4:0000000000000000 $d
     /tmp/ccgGoqyH.s:1623   .rodata.max2871PrintStatus.str1.4:0000000000000000 $d
     /tmp/ccgGoqyH.s:1646   .rodata.max2871SetFrequency.str1.4:0000000000000000 $d
     /tmp/ccgGoqyH.s:1650   .rodata.max2871SetPower.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_RCC_GetHCLKFreq
HAL_GPIO_ReadPin
max2871GetRegister
__aeabi_fcmpge
ARM GAS  /tmp/ccgGoqyH.s 			page 41


__aeabi_fcmplt
__aeabi_i2f
__aeabi_fmul
__aeabi_fdiv
__aeabi_f2uiz
__aeabi_ui2f
__aeabi_fsub
__aeabi_f2d
__aeabi_d2f
__aeabi_fadd
printUSB
round
max2871Set_INT
max2871Set_N
max2871Set_FRAC
max2871Set_CPL
max2871Set_M
max2871Set_LDF
max2871Set_DIVA
max2871Set_F01
max2871Set_RFA_EN
max2871Set_APWR
max2871RegsInit
HAL_Delay
max2871Set_CPOC
max2871Set_CPT
max2871Set_P
max2871Set_LDS
max2871Set_SDN
max2871Set_MUX
max2871Set_DBR
max2871Set_RDIV2
max2871Set_R
max2871Set_REG4DB
max2871Set_CP
max2871Set_LDP
max2871Set_PDP
max2871Set_SHDN
max2871Set_TRI
max2871Set_RST
max2871Set_VCO
max2871Set_VAS_SHDN
max2871Set_VAS_TEMP
max2871Set_CSM
max2871Set_MUTEDEL
max2871Set_CDM
max2871Set_CDIV
max2871Set_SDLDO
max2871Set_SDDIV
max2871Set_SDREF
max2871Set_BS
max2871Set_FB
max2871Set_SDVCO
max2871Set_MTLD
max2871Set_BDIV
max2871Set_RFB_EN
max2871Set_BPWR
ARM GAS  /tmp/ccgGoqyH.s 			page 42


max2871Set_SDPLL
max2871Set_LD
max2871Set_Reserved
sprintf
memset
