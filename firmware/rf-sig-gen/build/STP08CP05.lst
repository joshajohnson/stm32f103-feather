ARM GAS  /tmp/cciePhOU.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"STP08CP05.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.global	__aeabi_fcmplt
  16              		.section	.text.freqToLed,"ax",%progbits
  17              		.align	1
  18              		.global	freqToLed
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	freqToLed:
  25              	.LFB66:
  26              		.file 1 "Src/STP08CP05.c"
   1:Src/STP08CP05.c **** #include "STP08CP05.h"
   2:Src/STP08CP05.c **** 
   3:Src/STP08CP05.c **** uint8_t freqToLed (float frequency)
   4:Src/STP08CP05.c **** {
  27              		.loc 1 4 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 38B5     		push	{r3, r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 3, -16
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39 0002 0446     		mov	r4, r0
   5:Src/STP08CP05.c ****     uint8_t leds;
   6:Src/STP08CP05.c **** 
   7:Src/STP08CP05.c ****     if (frequency < 23.50)
  40              		.loc 1 7 0
  41 0004 1F49     		ldr	r1, .L13
  42 0006 FFF7FEFF 		bl	__aeabi_fcmplt
  43              	.LVL1:
  44 000a 48BB     		cbnz	r0, .L3
   8:Src/STP08CP05.c ****         leds = 0;
   9:Src/STP08CP05.c ****     else if (frequency < 36.875)
  45              		.loc 1 9 0
  46 000c 1E49     		ldr	r1, .L13+4
  47 000e 2046     		mov	r0, r4
  48 0010 FFF7FEFF 		bl	__aeabi_fcmplt
  49              	.LVL2:
ARM GAS  /tmp/cciePhOU.s 			page 2


  50 0014 38BB     		cbnz	r0, .L4
  10:Src/STP08CP05.c ****         leds = 0b00000001;
  11:Src/STP08CP05.c ****     else if (frequency < 73.75)
  51              		.loc 1 11 0
  52 0016 1D49     		ldr	r1, .L13+8
  53 0018 2046     		mov	r0, r4
  54 001a FFF7FEFF 		bl	__aeabi_fcmplt
  55              	.LVL3:
  56 001e 20BB     		cbnz	r0, .L5
  12:Src/STP08CP05.c ****         leds = 0b00000011;
  13:Src/STP08CP05.c ****     else if (frequency < 187.5)
  57              		.loc 1 13 0
  58 0020 1B49     		ldr	r1, .L13+12
  59 0022 2046     		mov	r0, r4
  60 0024 FFF7FEFF 		bl	__aeabi_fcmplt
  61              	.LVL4:
  62 0028 08BB     		cbnz	r0, .L6
  14:Src/STP08CP05.c ****         leds = 0b00000111;
  15:Src/STP08CP05.c ****     else if (frequency < 375)
  63              		.loc 1 15 0
  64 002a 1A49     		ldr	r1, .L13+16
  65 002c 2046     		mov	r0, r4
  66 002e FFF7FEFF 		bl	__aeabi_fcmplt
  67              	.LVL5:
  68 0032 F0B9     		cbnz	r0, .L7
  16:Src/STP08CP05.c ****         leds = 0b00001111;
  17:Src/STP08CP05.c ****     else if (frequency < 750)
  69              		.loc 1 17 0
  70 0034 1849     		ldr	r1, .L13+20
  71 0036 2046     		mov	r0, r4
  72 0038 FFF7FEFF 		bl	__aeabi_fcmplt
  73              	.LVL6:
  74 003c D8B9     		cbnz	r0, .L8
  18:Src/STP08CP05.c ****         leds = 0b00011111;
  19:Src/STP08CP05.c ****     else if (frequency < 1500)
  75              		.loc 1 19 0
  76 003e 1749     		ldr	r1, .L13+24
  77 0040 2046     		mov	r0, r4
  78 0042 FFF7FEFF 		bl	__aeabi_fcmplt
  79              	.LVL7:
  80 0046 C0B9     		cbnz	r0, .L9
  20:Src/STP08CP05.c ****         leds = 0b00111111;
  21:Src/STP08CP05.c ****     else if (frequency < 3000)
  81              		.loc 1 21 0
  82 0048 1549     		ldr	r1, .L13+28
  83 004a 2046     		mov	r0, r4
  84 004c FFF7FEFF 		bl	__aeabi_fcmplt
  85              	.LVL8:
  86 0050 A8B9     		cbnz	r0, .L10
  22:Src/STP08CP05.c ****         leds = 0b01111111;
  23:Src/STP08CP05.c ****     else if (frequency < 6000)
  87              		.loc 1 23 0
  88 0052 1449     		ldr	r1, .L13+32
  89 0054 2046     		mov	r0, r4
  90 0056 FFF7FEFF 		bl	__aeabi_fcmplt
  91              	.LVL9:
  92 005a 10B1     		cbz	r0, .L2
ARM GAS  /tmp/cciePhOU.s 			page 3


  24:Src/STP08CP05.c ****         leds = 0b11111111;
  93              		.loc 1 24 0
  94 005c FF25     		movs	r5, #255
  95 005e 00E0     		b	.L2
  96              	.L3:
   8:Src/STP08CP05.c ****     else if (frequency < 36.875)
  97              		.loc 1 8 0
  98 0060 0025     		movs	r5, #0
  99              	.L2:
 100              	.LVL10:
  25:Src/STP08CP05.c **** 
  26:Src/STP08CP05.c ****     return leds;
  27:Src/STP08CP05.c **** }
 101              		.loc 1 27 0
 102 0062 2846     		mov	r0, r5
 103 0064 38BD     		pop	{r3, r4, r5, pc}
 104              	.LVL11:
 105              	.L4:
  10:Src/STP08CP05.c ****     else if (frequency < 73.75)
 106              		.loc 1 10 0
 107 0066 0125     		movs	r5, #1
 108 0068 FBE7     		b	.L2
 109              	.L5:
  12:Src/STP08CP05.c ****     else if (frequency < 187.5)
 110              		.loc 1 12 0
 111 006a 0325     		movs	r5, #3
 112 006c F9E7     		b	.L2
 113              	.L6:
  14:Src/STP08CP05.c ****     else if (frequency < 375)
 114              		.loc 1 14 0
 115 006e 0725     		movs	r5, #7
 116 0070 F7E7     		b	.L2
 117              	.L7:
  16:Src/STP08CP05.c ****     else if (frequency < 750)
 118              		.loc 1 16 0
 119 0072 0F25     		movs	r5, #15
 120 0074 F5E7     		b	.L2
 121              	.L8:
  18:Src/STP08CP05.c ****     else if (frequency < 1500)
 122              		.loc 1 18 0
 123 0076 1F25     		movs	r5, #31
 124 0078 F3E7     		b	.L2
 125              	.L9:
  20:Src/STP08CP05.c ****     else if (frequency < 3000)
 126              		.loc 1 20 0
 127 007a 3F25     		movs	r5, #63
 128 007c F1E7     		b	.L2
 129              	.L10:
  22:Src/STP08CP05.c ****     else if (frequency < 6000)
 130              		.loc 1 22 0
 131 007e 7F25     		movs	r5, #127
 132 0080 EFE7     		b	.L2
 133              	.L14:
 134 0082 00BF     		.align	2
 135              	.L13:
 136 0084 0000BC41 		.word	1102839808
 137 0088 00801342 		.word	1108574208
ARM GAS  /tmp/cciePhOU.s 			page 4


 138 008c 00809342 		.word	1116962816
 139 0090 00803B43 		.word	1127972864
 140 0094 0080BB43 		.word	1136361472
 141 0098 00803B44 		.word	1144750080
 142 009c 0080BB44 		.word	1153138688
 143 00a0 00803B45 		.word	1161527296
 144 00a4 0080BB45 		.word	1169915904
 145              		.cfi_endproc
 146              	.LFE66:
 148              		.section	.text.stpSpiTx,"ax",%progbits
 149              		.align	1
 150              		.global	stpSpiTx
 151              		.syntax unified
 152              		.thumb
 153              		.thumb_func
 154              		.fpu softvfp
 156              	stpSpiTx:
 157              	.LFB70:
  28:Src/STP08CP05.c **** 
  29:Src/STP08CP05.c **** void rainbow()
  30:Src/STP08CP05.c **** {
  31:Src/STP08CP05.c ****     uint8_t display = 0;
  32:Src/STP08CP05.c ****     while ((RX_FIFO.dataReady == 0))
  33:Src/STP08CP05.c ****     {
  34:Src/STP08CP05.c ****         for (uint8_t i = 0; i < 8; i++)
  35:Src/STP08CP05.c ****         {
  36:Src/STP08CP05.c ****             stpSpiTx(display |= (1 << i));
  37:Src/STP08CP05.c ****             HAL_Delay(250);
  38:Src/STP08CP05.c ****         }
  39:Src/STP08CP05.c **** 
  40:Src/STP08CP05.c ****         for (uint8_t i = 0; i < 8; i++)
  41:Src/STP08CP05.c ****         {
  42:Src/STP08CP05.c ****             stpSpiTx(display &= ~(1 << i));
  43:Src/STP08CP05.c ****             HAL_Delay(250);
  44:Src/STP08CP05.c ****         }
  45:Src/STP08CP05.c ****     }
  46:Src/STP08CP05.c **** }
  47:Src/STP08CP05.c **** 
  48:Src/STP08CP05.c **** void kitt()
  49:Src/STP08CP05.c **** {
  50:Src/STP08CP05.c ****     uint8_t display = 0;
  51:Src/STP08CP05.c ****     while ((RX_FIFO.dataReady == 0))
  52:Src/STP08CP05.c ****     {
  53:Src/STP08CP05.c ****         for (uint8_t i = 0; i < 8; i++)
  54:Src/STP08CP05.c ****         {
  55:Src/STP08CP05.c ****             stpSpiTx(display = (1 << i));
  56:Src/STP08CP05.c ****             HAL_Delay(100);
  57:Src/STP08CP05.c ****             if (RX_FIFO.dataReady == 1) break;
  58:Src/STP08CP05.c ****         }
  59:Src/STP08CP05.c ****         for (uint8_t i = 6; i > 0; i--)
  60:Src/STP08CP05.c ****         {
  61:Src/STP08CP05.c ****             stpSpiTx(display = (1 << i));
  62:Src/STP08CP05.c ****             HAL_Delay(100);
  63:Src/STP08CP05.c ****             if (RX_FIFO.dataReady == 1) break;
  64:Src/STP08CP05.c ****         }
  65:Src/STP08CP05.c ****     }
  66:Src/STP08CP05.c **** }
ARM GAS  /tmp/cciePhOU.s 			page 5


  67:Src/STP08CP05.c **** 
  68:Src/STP08CP05.c **** void binary()
  69:Src/STP08CP05.c **** {
  70:Src/STP08CP05.c ****     while ((RX_FIFO.dataReady == 0))
  71:Src/STP08CP05.c ****     {
  72:Src/STP08CP05.c ****         for (uint8_t i = 0; i <= 255; i++)
  73:Src/STP08CP05.c ****         {
  74:Src/STP08CP05.c ****             stpSpiTx(i);
  75:Src/STP08CP05.c ****             HAL_Delay(50);
  76:Src/STP08CP05.c ****             if (RX_FIFO.dataReady == 1) break;
  77:Src/STP08CP05.c ****         }
  78:Src/STP08CP05.c ****     }
  79:Src/STP08CP05.c **** }
  80:Src/STP08CP05.c **** 
  81:Src/STP08CP05.c **** void stpSpiTx(uint8_t leds)
  82:Src/STP08CP05.c **** {
 158              		.loc 1 82 0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162              	.LVL12:
 163 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 164              	.LCFI1:
 165              		.cfi_def_cfa_offset 24
 166              		.cfi_offset 3, -24
 167              		.cfi_offset 4, -20
 168              		.cfi_offset 5, -16
 169              		.cfi_offset 6, -12
 170              		.cfi_offset 7, -8
 171              		.cfi_offset 14, -4
 172 0002 0746     		mov	r7, r0
 173              	.LVL13:
 174              	.LBB2:
  83:Src/STP08CP05.c **** 	// Transfer the bits
  84:Src/STP08CP05.c **** 	for (uint8_t i = 0; i < 8; i++)
 175              		.loc 1 84 0
 176 0004 0024     		movs	r4, #0
 177 0006 17E0     		b	.L16
 178              	.LVL14:
 179              	.L17:
  85:Src/STP08CP05.c **** 	{
  86:Src/STP08CP05.c **** 		HAL_GPIO_WritePin(LED_SDI_GPIO_Port, LED_SDI_Pin, leds & (1 << i));
 180              		.loc 1 86 0 discriminator 3
 181 0008 0126     		movs	r6, #1
 182 000a 06FA04F2 		lsl	r2, r6, r4
 183 000e 184D     		ldr	r5, .L19
 184 0010 3A40     		ands	r2, r2, r7
 185 0012 4FF48061 		mov	r1, #1024
 186 0016 2846     		mov	r0, r5
 187 0018 FFF7FEFF 		bl	HAL_GPIO_WritePin
 188              	.LVL15:
  87:Src/STP08CP05.c **** 		HAL_GPIO_WritePin(LED_CLK_GPIO_Port, LED_CLK_Pin, 1);
 189              		.loc 1 87 0 discriminator 3
 190 001c 3246     		mov	r2, r6
 191 001e 4FF40061 		mov	r1, #2048
 192 0022 2846     		mov	r0, r5
 193 0024 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /tmp/cciePhOU.s 			page 6


 194              	.LVL16:
  88:Src/STP08CP05.c **** 		HAL_GPIO_WritePin(LED_CLK_GPIO_Port, LED_CLK_Pin, 0);
 195              		.loc 1 88 0 discriminator 3
 196 0028 0022     		movs	r2, #0
 197 002a 4FF40061 		mov	r1, #2048
 198 002e 2846     		mov	r0, r5
 199 0030 FFF7FEFF 		bl	HAL_GPIO_WritePin
 200              	.LVL17:
  84:Src/STP08CP05.c **** 	{
 201              		.loc 1 84 0 discriminator 3
 202 0034 3444     		add	r4, r4, r6
 203              	.LVL18:
 204 0036 E4B2     		uxtb	r4, r4
 205              	.LVL19:
 206              	.L16:
  84:Src/STP08CP05.c **** 	{
 207              		.loc 1 84 0 is_stmt 0 discriminator 1
 208 0038 072C     		cmp	r4, #7
 209 003a E5D9     		bls	.L17
 210              	.LBE2:
  89:Src/STP08CP05.c **** 	}
  90:Src/STP08CP05.c **** 
  91:Src/STP08CP05.c ****     // Latch Enable
  92:Src/STP08CP05.c ****     HAL_GPIO_WritePin(LED_LE_GPIO_Port, LED_LE_Pin, 1);
 211              		.loc 1 92 0 is_stmt 1
 212 003c 0C4C     		ldr	r4, .L19
 213              	.LVL20:
 214 003e 0122     		movs	r2, #1
 215 0040 4FF48051 		mov	r1, #4096
 216 0044 2046     		mov	r0, r4
 217 0046 FFF7FEFF 		bl	HAL_GPIO_WritePin
 218              	.LVL21:
  93:Src/STP08CP05.c ****     HAL_GPIO_WritePin(LED_LE_GPIO_Port, LED_LE_Pin, 0);
 219              		.loc 1 93 0
 220 004a 0022     		movs	r2, #0
 221 004c 4FF48051 		mov	r1, #4096
 222 0050 2046     		mov	r0, r4
 223 0052 FFF7FEFF 		bl	HAL_GPIO_WritePin
 224              	.LVL22:
  94:Src/STP08CP05.c **** 
  95:Src/STP08CP05.c ****     // Clock Again
  96:Src/STP08CP05.c ****     HAL_GPIO_WritePin(LED_CLK_GPIO_Port, LED_CLK_Pin, 1);
 225              		.loc 1 96 0
 226 0056 0122     		movs	r2, #1
 227 0058 4FF40061 		mov	r1, #2048
 228 005c 2046     		mov	r0, r4
 229 005e FFF7FEFF 		bl	HAL_GPIO_WritePin
 230              	.LVL23:
  97:Src/STP08CP05.c ****     HAL_GPIO_WritePin(LED_CLK_GPIO_Port, LED_CLK_Pin, 0);
 231              		.loc 1 97 0
 232 0062 0022     		movs	r2, #0
 233 0064 4FF40061 		mov	r1, #2048
 234 0068 2046     		mov	r0, r4
 235 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 236              	.LVL24:
  98:Src/STP08CP05.c **** 	
  99:Src/STP08CP05.c **** }...
ARM GAS  /tmp/cciePhOU.s 			page 7


 237              		.loc 1 99 0
 238 006e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 239              	.L20:
 240              		.align	2
 241              	.L19:
 242 0070 000C0140 		.word	1073810432
 243              		.cfi_endproc
 244              	.LFE70:
 246              		.section	.text.rainbow,"ax",%progbits
 247              		.align	1
 248              		.global	rainbow
 249              		.syntax unified
 250              		.thumb
 251              		.thumb_func
 252              		.fpu softvfp
 254              	rainbow:
 255              	.LFB67:
  30:Src/STP08CP05.c **** {
 256              		.loc 1 30 0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260 0000 70B5     		push	{r4, r5, r6, lr}
 261              	.LCFI2:
 262              		.cfi_def_cfa_offset 16
 263              		.cfi_offset 4, -16
 264              		.cfi_offset 5, -12
 265              		.cfi_offset 6, -8
 266              		.cfi_offset 14, -4
 267              	.LVL25:
  31:Src/STP08CP05.c ****     uint8_t display = 0;
 268              		.loc 1 31 0
 269 0002 0026     		movs	r6, #0
  32:Src/STP08CP05.c ****     while ((RX_FIFO.dataReady == 0))
 270              		.loc 1 32 0
 271 0004 1CE0     		b	.L22
 272              	.LVL26:
 273              	.L23:
 274              	.LBB3:
  36:Src/STP08CP05.c ****             stpSpiTx(display |= (1 << i));
 275              		.loc 1 36 0 discriminator 3
 276 0006 0123     		movs	r3, #1
 277 0008 AB40     		lsls	r3, r3, r5
 278 000a 1E43     		orrs	r6, r6, r3
 279              	.LVL27:
 280 000c F6B2     		uxtb	r6, r6
 281              	.LVL28:
 282 000e 3046     		mov	r0, r6
 283 0010 FFF7FEFF 		bl	stpSpiTx
 284              	.LVL29:
  37:Src/STP08CP05.c ****             HAL_Delay(250);
 285              		.loc 1 37 0 discriminator 3
 286 0014 FA20     		movs	r0, #250
 287 0016 FFF7FEFF 		bl	HAL_Delay
 288              	.LVL30:
  34:Src/STP08CP05.c ****         for (uint8_t i = 0; i < 8; i++)
 289              		.loc 1 34 0 discriminator 3
ARM GAS  /tmp/cciePhOU.s 			page 8


 290 001a 0135     		adds	r5, r5, #1
 291              	.LVL31:
 292 001c EDB2     		uxtb	r5, r5
 293              	.LVL32:
 294              	.L26:
  34:Src/STP08CP05.c ****         for (uint8_t i = 0; i < 8; i++)
 295              		.loc 1 34 0 is_stmt 0 discriminator 1
 296 001e 072D     		cmp	r5, #7
 297 0020 F1D9     		bls	.L23
 298 0022 0BE0     		b	.L24
 299              	.LVL33:
 300              	.L25:
 301              	.LBE3:
 302              	.LBB4:
  42:Src/STP08CP05.c ****             stpSpiTx(display &= ~(1 << i));
 303              		.loc 1 42 0 is_stmt 1 discriminator 3
 304 0024 0123     		movs	r3, #1
 305 0026 A340     		lsls	r3, r3, r4
 306 0028 26EA0306 		bic	r6, r6, r3
 307              	.LVL34:
 308 002c 3046     		mov	r0, r6
 309 002e FFF7FEFF 		bl	stpSpiTx
 310              	.LVL35:
  43:Src/STP08CP05.c ****             HAL_Delay(250);
 311              		.loc 1 43 0 discriminator 3
 312 0032 FA20     		movs	r0, #250
 313 0034 FFF7FEFF 		bl	HAL_Delay
 314              	.LVL36:
  40:Src/STP08CP05.c ****         for (uint8_t i = 0; i < 8; i++)
 315              		.loc 1 40 0 discriminator 3
 316 0038 0134     		adds	r4, r4, #1
 317              	.LVL37:
 318 003a E4B2     		uxtb	r4, r4
 319              	.LVL38:
 320              	.L24:
  40:Src/STP08CP05.c ****         for (uint8_t i = 0; i < 8; i++)
 321              		.loc 1 40 0 is_stmt 0 discriminator 1
 322 003c 072C     		cmp	r4, #7
 323 003e F1D9     		bls	.L25
 324              	.LVL39:
 325              	.L22:
 326              	.LBE4:
  32:Src/STP08CP05.c ****     while ((RX_FIFO.dataReady == 0))
 327              		.loc 1 32 0 is_stmt 1
 328 0040 034B     		ldr	r3, .L30
 329 0042 93F88840 		ldrb	r4, [r3, #136]	@ zero_extendqisi2
 330 0046 0CB9     		cbnz	r4, .L29
 331              	.LBB5:
  34:Src/STP08CP05.c ****         for (uint8_t i = 0; i < 8; i++)
 332              		.loc 1 34 0
 333 0048 2546     		mov	r5, r4
 334 004a E8E7     		b	.L26
 335              	.L29:
 336              	.LBE5:
  46:Src/STP08CP05.c **** }
 337              		.loc 1 46 0
 338 004c 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/cciePhOU.s 			page 9


 339              	.LVL40:
 340              	.L31:
 341 004e 00BF     		.align	2
 342              	.L30:
 343 0050 00000000 		.word	RX_FIFO
 344              		.cfi_endproc
 345              	.LFE67:
 347              		.section	.text.kitt,"ax",%progbits
 348              		.align	1
 349              		.global	kitt
 350              		.syntax unified
 351              		.thumb
 352              		.thumb_func
 353              		.fpu softvfp
 355              	kitt:
 356              	.LFB68:
  49:Src/STP08CP05.c **** {
 357              		.loc 1 49 0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 0
 360              		@ frame_needed = 0, uses_anonymous_args = 0
 361 0000 10B5     		push	{r4, lr}
 362              	.LCFI3:
 363              		.cfi_def_cfa_offset 8
 364              		.cfi_offset 4, -8
 365              		.cfi_offset 14, -4
 366              	.LVL41:
  51:Src/STP08CP05.c ****     while ((RX_FIFO.dataReady == 0))
 367              		.loc 1 51 0
 368 0002 11E0     		b	.L38
 369              	.LVL42:
 370              	.L34:
  49:Src/STP08CP05.c **** {
 371              		.loc 1 49 0 discriminator 1
 372 0004 0624     		movs	r4, #6
 373              	.LVL43:
 374 0006 01E0     		b	.L36
 375              	.LVL44:
 376              	.L41:
 377              	.LBB6:
  59:Src/STP08CP05.c ****         for (uint8_t i = 6; i > 0; i--)
 378              		.loc 1 59 0 discriminator 2
 379 0008 013C     		subs	r4, r4, #1
 380              	.LVL45:
 381 000a E4B2     		uxtb	r4, r4
 382              	.LVL46:
 383              	.L36:
  59:Src/STP08CP05.c ****         for (uint8_t i = 6; i > 0; i--)
 384              		.loc 1 59 0 is_stmt 0 discriminator 1
 385 000c 64B1     		cbz	r4, .L38
  61:Src/STP08CP05.c ****             stpSpiTx(display = (1 << i));
 386              		.loc 1 61 0 is_stmt 1
 387 000e 0120     		movs	r0, #1
 388 0010 A040     		lsls	r0, r0, r4
 389              	.LVL47:
 390 0012 C0B2     		uxtb	r0, r0
 391 0014 FFF7FEFF 		bl	stpSpiTx
ARM GAS  /tmp/cciePhOU.s 			page 10


 392              	.LVL48:
  62:Src/STP08CP05.c ****             HAL_Delay(100);
 393              		.loc 1 62 0
 394 0018 6420     		movs	r0, #100
 395 001a FFF7FEFF 		bl	HAL_Delay
 396              	.LVL49:
  63:Src/STP08CP05.c ****             if (RX_FIFO.dataReady == 1) break;
 397              		.loc 1 63 0
 398 001e 0E4B     		ldr	r3, .L43
 399 0020 93F88830 		ldrb	r3, [r3, #136]	@ zero_extendqisi2
 400 0024 012B     		cmp	r3, #1
 401 0026 EFD1     		bne	.L41
 402              	.LVL50:
 403              	.L38:
 404              	.LBE6:
  51:Src/STP08CP05.c ****     while ((RX_FIFO.dataReady == 0))
 405              		.loc 1 51 0
 406 0028 0B4B     		ldr	r3, .L43
 407 002a 93F88840 		ldrb	r4, [r3, #136]	@ zero_extendqisi2
 408 002e 8CB9     		cbnz	r4, .L42
 409              	.L39:
 410              	.LVL51:
 411              	.LBB7:
  53:Src/STP08CP05.c ****         for (uint8_t i = 0; i < 8; i++)
 412              		.loc 1 53 0 discriminator 1
 413 0030 072C     		cmp	r4, #7
 414 0032 E7D8     		bhi	.L34
  55:Src/STP08CP05.c ****             stpSpiTx(display = (1 << i));
 415              		.loc 1 55 0
 416 0034 0120     		movs	r0, #1
 417 0036 A040     		lsls	r0, r0, r4
 418              	.LVL52:
 419 0038 C0B2     		uxtb	r0, r0
 420 003a FFF7FEFF 		bl	stpSpiTx
 421              	.LVL53:
  56:Src/STP08CP05.c ****             HAL_Delay(100);
 422              		.loc 1 56 0
 423 003e 6420     		movs	r0, #100
 424 0040 FFF7FEFF 		bl	HAL_Delay
 425              	.LVL54:
  57:Src/STP08CP05.c ****             if (RX_FIFO.dataReady == 1) break;
 426              		.loc 1 57 0
 427 0044 044B     		ldr	r3, .L43
 428 0046 93F88830 		ldrb	r3, [r3, #136]	@ zero_extendqisi2
 429 004a 012B     		cmp	r3, #1
 430 004c DAD0     		beq	.L34
  53:Src/STP08CP05.c ****         for (uint8_t i = 0; i < 8; i++)
 431              		.loc 1 53 0 discriminator 2
 432 004e 0134     		adds	r4, r4, #1
 433              	.LVL55:
 434 0050 E4B2     		uxtb	r4, r4
 435              	.LVL56:
 436 0052 EDE7     		b	.L39
 437              	.LVL57:
 438              	.L42:
 439              	.LBE7:
  66:Src/STP08CP05.c **** }
ARM GAS  /tmp/cciePhOU.s 			page 11


 440              		.loc 1 66 0
 441 0054 10BD     		pop	{r4, pc}
 442              	.L44:
 443 0056 00BF     		.align	2
 444              	.L43:
 445 0058 00000000 		.word	RX_FIFO
 446              		.cfi_endproc
 447              	.LFE68:
 449              		.section	.text.binary,"ax",%progbits
 450              		.align	1
 451              		.global	binary
 452              		.syntax unified
 453              		.thumb
 454              		.thumb_func
 455              		.fpu softvfp
 457              	binary:
 458              	.LFB69:
  69:Src/STP08CP05.c **** {
 459              		.loc 1 69 0
 460              		.cfi_startproc
 461              		@ args = 0, pretend = 0, frame = 0
 462              		@ frame_needed = 0, uses_anonymous_args = 0
 463 0000 10B5     		push	{r4, lr}
 464              	.LCFI4:
 465              		.cfi_def_cfa_offset 8
 466              		.cfi_offset 4, -8
 467              		.cfi_offset 14, -4
 468              	.L46:
  70:Src/STP08CP05.c ****     while ((RX_FIFO.dataReady == 0))
 469              		.loc 1 70 0
 470 0002 094B     		ldr	r3, .L50
 471 0004 93F88840 		ldrb	r4, [r3, #136]	@ zero_extendqisi2
 472 0008 6CB9     		cbnz	r4, .L49
 473              	.L47:
 474              	.LVL58:
 475              	.LBB8:
  74:Src/STP08CP05.c ****             stpSpiTx(i);
 476              		.loc 1 74 0
 477 000a 2046     		mov	r0, r4
 478 000c FFF7FEFF 		bl	stpSpiTx
 479              	.LVL59:
  75:Src/STP08CP05.c ****             HAL_Delay(50);
 480              		.loc 1 75 0
 481 0010 3220     		movs	r0, #50
 482 0012 FFF7FEFF 		bl	HAL_Delay
 483              	.LVL60:
  76:Src/STP08CP05.c ****             if (RX_FIFO.dataReady == 1) break;
 484              		.loc 1 76 0
 485 0016 044B     		ldr	r3, .L50
 486 0018 93F88830 		ldrb	r3, [r3, #136]	@ zero_extendqisi2
 487 001c 012B     		cmp	r3, #1
 488 001e F0D0     		beq	.L46
  72:Src/STP08CP05.c ****         for (uint8_t i = 0; i <= 255; i++)
 489              		.loc 1 72 0
 490 0020 0134     		adds	r4, r4, #1
 491              	.LVL61:
 492 0022 E4B2     		uxtb	r4, r4
ARM GAS  /tmp/cciePhOU.s 			page 12


 493              	.LVL62:
  74:Src/STP08CP05.c ****             stpSpiTx(i);
 494              		.loc 1 74 0
 495 0024 F1E7     		b	.L47
 496              	.LVL63:
 497              	.L49:
 498              	.LBE8:
  79:Src/STP08CP05.c **** }
 499              		.loc 1 79 0
 500 0026 10BD     		pop	{r4, pc}
 501              	.L51:
 502              		.align	2
 503              	.L50:
 504 0028 00000000 		.word	RX_FIFO
 505              		.cfi_endproc
 506              	.LFE69:
 508              		.text
 509              	.Letext0:
 510              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 511              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 512              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 513              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 514              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 515              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 516              		.file 8 "Inc/main.h"
 517              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
ARM GAS  /tmp/cciePhOU.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 STP08CP05.c
     /tmp/cciePhOU.s:17     .text.freqToLed:0000000000000000 $t
     /tmp/cciePhOU.s:24     .text.freqToLed:0000000000000000 freqToLed
     /tmp/cciePhOU.s:136    .text.freqToLed:0000000000000084 $d
     /tmp/cciePhOU.s:149    .text.stpSpiTx:0000000000000000 $t
     /tmp/cciePhOU.s:156    .text.stpSpiTx:0000000000000000 stpSpiTx
     /tmp/cciePhOU.s:242    .text.stpSpiTx:0000000000000070 $d
     /tmp/cciePhOU.s:247    .text.rainbow:0000000000000000 $t
     /tmp/cciePhOU.s:254    .text.rainbow:0000000000000000 rainbow
     /tmp/cciePhOU.s:343    .text.rainbow:0000000000000050 $d
     /tmp/cciePhOU.s:348    .text.kitt:0000000000000000 $t
     /tmp/cciePhOU.s:355    .text.kitt:0000000000000000 kitt
     /tmp/cciePhOU.s:445    .text.kitt:0000000000000058 $d
     /tmp/cciePhOU.s:450    .text.binary:0000000000000000 $t
     /tmp/cciePhOU.s:457    .text.binary:0000000000000000 binary
     /tmp/cciePhOU.s:504    .text.binary:0000000000000028 $d

UNDEFINED SYMBOLS
__aeabi_fcmplt
HAL_GPIO_WritePin
HAL_Delay
RX_FIFO
