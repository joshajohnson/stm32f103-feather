ARM GAS  /tmp/ccByiixK.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"txChain.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.global	__aeabi_fmul
  16              		.global	__aeabi_f2uiz
  17              		.section	.text.setAttenuation,"ax",%progbits
  18              		.align	1
  19              		.global	setAttenuation
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu softvfp
  25              	setAttenuation:
  26              	.LFB72:
  27              		.file 1 "Src/txChain.c"
   1:Src/txChain.c **** #include "main.h"
   2:Src/txChain.c **** #include "txChain.h"
   3:Src/txChain.c **** #include "max2871.h"
   4:Src/txChain.c **** #include "dwt_stm32_delay.h"
   5:Src/txChain.c **** #include "usbd_cdc_if.h"
   6:Src/txChain.c **** #include <string.h>
   7:Src/txChain.c **** #include <stdlib.h>
   8:Src/txChain.c **** #include <math.h>
   9:Src/txChain.c **** #include "STP08CP05.h"d
  10:Src/txChain.c **** 
  11:Src/txChain.c **** extern ADC_HandleTypeDef hadc1;
  12:Src/txChain.c **** 
  13:Src/txChain.c **** struct txStruct txStatus;
  14:Src/txChain.c **** 
  15:Src/txChain.c **** // Sets up output for given frequency and power level
  16:Src/txChain.c **** void sigGen(float frequency, float power, struct MAX2871Struct *max2871Status, struct txStruct *txS
  17:Src/txChain.c **** {
  18:Src/txChain.c **** 	// Ensure RF Enabled
  19:Src/txChain.c **** 	max2871RFEnable(max2871Status);
  20:Src/txChain.c **** 	enablePA(txStatus);
  21:Src/txChain.c **** 
  22:Src/txChain.c **** 	max2871SetFrequency(frequency,FRAC_N,max2871Status);
  23:Src/txChain.c **** 	stpSpiTx(freqToLed(frequency));
  24:Src/txChain.c **** 
  25:Src/txChain.c **** 	while (!max2871CheckLD(max2871Status));
  26:Src/txChain.c **** 	// Don't go any further until PLL has lock
  27:Src/txChain.c **** 
  28:Src/txChain.c **** 	setOutputPower(power, max2871Status, txStatus);
  29:Src/txChain.c **** }
  30:Src/txChain.c **** 
  31:Src/txChain.c **** // Sweeps through frequencies
ARM GAS  /tmp/ccByiixK.s 			page 2


  32:Src/txChain.c **** void sweep(float lowerFreq, float higherFreq, float numSteps, float power, float sweepTime, struct 
  33:Src/txChain.c **** {
  34:Src/txChain.c **** 	float stepSize = ((higherFreq - lowerFreq) / numSteps);
  35:Src/txChain.c **** 	uint32_t delay = sweepTime * 1000000 / numSteps; 	// Delay is in uS
  36:Src/txChain.c **** 
  37:Src/txChain.c **** 	float currentFrequency = lowerFreq;
  38:Src/txChain.c **** 
  39:Src/txChain.c **** 	while (currentFrequency <= higherFreq)
  40:Src/txChain.c **** 	{
  41:Src/txChain.c **** 		sigGen(currentFrequency, power, max2871Status, txStatus);
  42:Src/txChain.c **** 		DWT_Delay_us(delay);
  43:Src/txChain.c **** 		currentFrequency += stepSize;
  44:Src/txChain.c **** 		if (RX_FIFO.dataReady == 1) break;
  45:Src/txChain.c **** 
  46:Src/txChain.c **** 	}
  47:Src/txChain.c **** }
  48:Src/txChain.c **** 
  49:Src/txChain.c **** void txChainInit(struct MAX2871Struct *max2871Status, struct txStruct *txStatus)
  50:Src/txChain.c **** {
  51:Src/txChain.c **** 	max2871RFDisable(max2871Status);
  52:Src/txChain.c **** 	disablePA(txStatus);
  53:Src/txChain.c **** 	setAttenuation(MAX_ATTENUATION,txStatus);
  54:Src/txChain.c **** 	max2871Setup(max2871Status);
  55:Src/txChain.c **** }
  56:Src/txChain.c **** 
  57:Src/txChain.c **** // Sets attenuation for a SKY12347 attenuator
  58:Src/txChain.c **** void setAttenuation(float atten, struct txStruct *txStatus)
  59:Src/txChain.c **** {
  28              		.loc 1 59 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 4, -16
  37              		.cfi_offset 5, -12
  38              		.cfi_offset 6, -8
  39              		.cfi_offset 14, -4
  60:Src/txChain.c **** 	// Convert given attenuation value to the 8 bits which SKY12347 wants
  61:Src/txChain.c **** 	txStatus->attenuation = atten;
  40              		.loc 1 61 0
  41 0002 8860     		str	r0, [r1, #8]	@ float
  62:Src/txChain.c **** 	uint8_t bitSequence = (atten * 4);
  42              		.loc 1 62 0
  43 0004 4FF08141 		mov	r1, #1082130432
  44              	.LVL1:
  45 0008 FFF7FEFF 		bl	__aeabi_fmul
  46              	.LVL2:
  47 000c FFF7FEFF 		bl	__aeabi_f2uiz
  48              	.LVL3:
  49 0010 C6B2     		uxtb	r6, r0
  50              	.LVL4:
  63:Src/txChain.c **** 	bitSequence = ~bitSequence;
  51              		.loc 1 63 0
  52 0012 F643     		mvns	r6, r6
ARM GAS  /tmp/ccByiixK.s 			page 3


  53              	.LVL5:
  54 0014 F6B2     		uxtb	r6, r6
  55              	.LVL6:
  64:Src/txChain.c **** 
  65:Src/txChain.c **** 	// Init attenuator LE high
  66:Src/txChain.c **** 	HAL_GPIO_WritePin(ATTEN_LE_GPIO_Port,ATTEN_LE_Pin,1);
  56              		.loc 1 66 0
  57 0016 0122     		movs	r2, #1
  58 0018 4021     		movs	r1, #64
  59 001a 3748     		ldr	r0, .L10
  60 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
  61              	.LVL7:
  62 0020 0A24     		movs	r4, #10
  63              	.LVL8:
  64              	.LBB13:
  65              	.LBB14:
  66              		.file 2 "Inc/dwt_stm32_delay.h"
   1:Inc/dwt_stm32_delay.h **** #ifndef DWT_STM32_DELAY_H
   2:Inc/dwt_stm32_delay.h **** #define DWT_STM32_DELAY_H
   3:Inc/dwt_stm32_delay.h **** 
   4:Inc/dwt_stm32_delay.h **** #ifdef __cplusplus
   5:Inc/dwt_stm32_delay.h **** extern "C" {
   6:Inc/dwt_stm32_delay.h **** #endif
   7:Inc/dwt_stm32_delay.h **** 
   8:Inc/dwt_stm32_delay.h **** #include "stm32f1xx_hal.h"
   9:Inc/dwt_stm32_delay.h **** 
  10:Inc/dwt_stm32_delay.h **** /**
  11:Inc/dwt_stm32_delay.h ****  * @brief  Initializes DWT_Cycle_Count for DWT_Delay_us function
  12:Inc/dwt_stm32_delay.h ****  * @return Error DWT counter
  13:Inc/dwt_stm32_delay.h ****  *         1: DWT counter Error
  14:Inc/dwt_stm32_delay.h ****  *         0: DWT counter works
  15:Inc/dwt_stm32_delay.h ****  */
  16:Inc/dwt_stm32_delay.h **** uint32_t DWT_Delay_Init(void);
  17:Inc/dwt_stm32_delay.h **** 
  18:Inc/dwt_stm32_delay.h **** /**
  19:Inc/dwt_stm32_delay.h ****  * @brief  This function provides a delay (in microseconds)
  20:Inc/dwt_stm32_delay.h ****  * @param  microseconds: delay in microseconds
  21:Inc/dwt_stm32_delay.h ****  */
  22:Inc/dwt_stm32_delay.h **** __STATIC_INLINE void DWT_Delay_us(volatile uint32_t microseconds)
  23:Inc/dwt_stm32_delay.h **** {
  24:Inc/dwt_stm32_delay.h ****   uint32_t clk_cycle_start = DWT->CYCCNT;
  67              		.loc 2 24 0
  68 0022 364B     		ldr	r3, .L10+4
  69 0024 5D68     		ldr	r5, [r3, #4]
  70              	.LVL9:
  25:Inc/dwt_stm32_delay.h **** 
  26:Inc/dwt_stm32_delay.h ****   /* Go to number of cycles for system */
  27:Inc/dwt_stm32_delay.h ****   microseconds *= (HAL_RCC_GetHCLKFreq() / 1000000);
  71              		.loc 2 27 0
  72 0026 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
  73              	.LVL10:
  74 002a 354B     		ldr	r3, .L10+8
  75 002c A3FB0023 		umull	r2, r3, r3, r0
  76 0030 9B0C     		lsrs	r3, r3, #18
  77 0032 04FB03F4 		mul	r4, r4, r3
  78              	.L2:
  28:Inc/dwt_stm32_delay.h **** 
ARM GAS  /tmp/ccByiixK.s 			page 4


  29:Inc/dwt_stm32_delay.h ****   /* Delay till end */
  30:Inc/dwt_stm32_delay.h ****   while ((DWT->CYCCNT - clk_cycle_start) < microseconds);
  79              		.loc 2 30 0
  80 0036 314B     		ldr	r3, .L10+4
  81 0038 5B68     		ldr	r3, [r3, #4]
  82 003a 5B1B     		subs	r3, r3, r5
  83 003c A342     		cmp	r3, r4
  84 003e FAD3     		bcc	.L2
  85              	.LVL11:
  86              	.LBE14:
  87              	.LBE13:
  67:Src/txChain.c **** 	DWT_Delay_us(10);
  68:Src/txChain.c **** 	// Begin by bringing LE low
  69:Src/txChain.c **** 	HAL_GPIO_WritePin(ATTEN_LE_GPIO_Port, ATTEN_LE_Pin, 0);
  88              		.loc 1 69 0
  89 0040 0022     		movs	r2, #0
  90 0042 4021     		movs	r1, #64
  91 0044 2C48     		ldr	r0, .L10
  92 0046 FFF7FEFF 		bl	HAL_GPIO_WritePin
  93              	.LVL12:
  94              	.LBB15:
  95              	.LBB16:
  24:Inc/dwt_stm32_delay.h **** 
  96              		.loc 2 24 0
  97 004a 2C4B     		ldr	r3, .L10+4
  98 004c 5C68     		ldr	r4, [r3, #4]
  99              	.LVL13:
  27:Inc/dwt_stm32_delay.h **** 
 100              		.loc 2 27 0
 101 004e FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 102              	.LVL14:
 103 0052 2B4A     		ldr	r2, .L10+8
 104 0054 A2FB0032 		umull	r3, r2, r2, r0
 105 0058 920C     		lsrs	r2, r2, #18
 106              	.L3:
 107              		.loc 2 30 0
 108 005a 284B     		ldr	r3, .L10+4
 109 005c 5B68     		ldr	r3, [r3, #4]
 110 005e 1B1B     		subs	r3, r3, r4
 111 0060 9342     		cmp	r3, r2
 112 0062 FAD3     		bcc	.L3
 113              	.LBE16:
 114              	.LBE15:
 115              	.LBB17:
  70:Src/txChain.c **** 	DWT_Delay_us(1);
  71:Src/txChain.c **** 
  72:Src/txChain.c **** 	// Transfer the bits
  73:Src/txChain.c **** 	for (uint8_t i = 6; i > 0 ; i--)
 116              		.loc 1 73 0
 117 0064 0625     		movs	r5, #6
 118 0066 2DE0     		b	.L4
 119              	.LVL15:
 120              	.L7:
  74:Src/txChain.c **** 	{
  75:Src/txChain.c **** 		HAL_GPIO_WritePin(ATTEN_SDO_GPIO_Port, ATTEN_SDO_Pin, bitSequence & (1 << i));
 121              		.loc 1 75 0 discriminator 3
 122 0068 0124     		movs	r4, #1
ARM GAS  /tmp/ccByiixK.s 			page 5


 123 006a 04FA05F2 		lsl	r2, r4, r5
 124 006e 3240     		ands	r2, r2, r6
 125 0070 8021     		movs	r1, #128
 126 0072 2148     		ldr	r0, .L10
 127 0074 FFF7FEFF 		bl	HAL_GPIO_WritePin
 128              	.LVL16:
 129              	.LBB18:
 130              	.LBB19:
  24:Inc/dwt_stm32_delay.h **** 
 131              		.loc 2 24 0 discriminator 3
 132 0078 204B     		ldr	r3, .L10+4
 133 007a 5C68     		ldr	r4, [r3, #4]
 134              	.LVL17:
  27:Inc/dwt_stm32_delay.h **** 
 135              		.loc 2 27 0 discriminator 3
 136 007c FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 137              	.LVL18:
 138 0080 1F4B     		ldr	r3, .L10+8
 139 0082 A3FB0030 		umull	r3, r0, r3, r0
 140 0086 800C     		lsrs	r0, r0, #18
 141              	.L5:
 142              		.loc 2 30 0
 143 0088 1C4B     		ldr	r3, .L10+4
 144 008a 5B68     		ldr	r3, [r3, #4]
 145 008c 1B1B     		subs	r3, r3, r4
 146 008e 8342     		cmp	r3, r0
 147 0090 FAD3     		bcc	.L5
 148              	.LVL19:
 149              	.LBE19:
 150              	.LBE18:
  76:Src/txChain.c **** 		DWT_Delay_us(1);
  77:Src/txChain.c **** 		HAL_GPIO_WritePin(ATTEN_CLK_GPIO_Port, ATTEN_CLK_Pin, 1);
 151              		.loc 1 77 0 discriminator 3
 152 0092 0122     		movs	r2, #1
 153 0094 1146     		mov	r1, r2
 154 0096 1B48     		ldr	r0, .L10+12
 155 0098 FFF7FEFF 		bl	HAL_GPIO_WritePin
 156              	.LVL20:
 157              	.LBB20:
 158              	.LBB21:
  24:Inc/dwt_stm32_delay.h **** 
 159              		.loc 2 24 0 discriminator 3
 160 009c 174B     		ldr	r3, .L10+4
 161 009e 5C68     		ldr	r4, [r3, #4]
 162              	.LVL21:
  27:Inc/dwt_stm32_delay.h **** 
 163              		.loc 2 27 0 discriminator 3
 164 00a0 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 165              	.LVL22:
 166 00a4 164B     		ldr	r3, .L10+8
 167 00a6 A3FB0030 		umull	r3, r0, r3, r0
 168 00aa 800C     		lsrs	r0, r0, #18
 169              	.L6:
 170              		.loc 2 30 0
 171 00ac 134B     		ldr	r3, .L10+4
 172 00ae 5B68     		ldr	r3, [r3, #4]
 173 00b0 1B1B     		subs	r3, r3, r4
ARM GAS  /tmp/ccByiixK.s 			page 6


 174 00b2 8342     		cmp	r3, r0
 175 00b4 FAD3     		bcc	.L6
 176              	.LVL23:
 177              	.LBE21:
 178              	.LBE20:
  78:Src/txChain.c **** 		DWT_Delay_us(1);
  79:Src/txChain.c **** 		HAL_GPIO_WritePin(ATTEN_CLK_GPIO_Port, ATTEN_CLK_Pin, 0);
 179              		.loc 1 79 0 discriminator 3
 180 00b6 0022     		movs	r2, #0
 181 00b8 0121     		movs	r1, #1
 182 00ba 1248     		ldr	r0, .L10+12
 183 00bc FFF7FEFF 		bl	HAL_GPIO_WritePin
 184              	.LVL24:
  73:Src/txChain.c **** 	{
 185              		.loc 1 73 0 discriminator 3
 186 00c0 013D     		subs	r5, r5, #1
 187              	.LVL25:
 188 00c2 EDB2     		uxtb	r5, r5
 189              	.LVL26:
 190              	.L4:
  73:Src/txChain.c **** 	{
 191              		.loc 1 73 0 is_stmt 0 discriminator 1
 192 00c4 002D     		cmp	r5, #0
 193 00c6 CFD1     		bne	.L7
 194              	.LBE17:
  80:Src/txChain.c **** 	}
  81:Src/txChain.c **** 	HAL_GPIO_WritePin(ATTEN_SDO_GPIO_Port, ATTEN_SDO_Pin, 0);
 195              		.loc 1 81 0 is_stmt 1
 196 00c8 0022     		movs	r2, #0
 197 00ca 8021     		movs	r1, #128
 198 00cc 0A48     		ldr	r0, .L10
 199 00ce FFF7FEFF 		bl	HAL_GPIO_WritePin
 200              	.LVL27:
 201              	.LBB22:
 202              	.LBB23:
  24:Inc/dwt_stm32_delay.h **** 
 203              		.loc 2 24 0
 204 00d2 0A4B     		ldr	r3, .L10+4
 205 00d4 5C68     		ldr	r4, [r3, #4]
 206              	.LVL28:
  27:Inc/dwt_stm32_delay.h **** 
 207              		.loc 2 27 0
 208 00d6 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 209              	.LVL29:
 210 00da 094A     		ldr	r2, .L10+8
 211 00dc A2FB0032 		umull	r3, r2, r2, r0
 212 00e0 920C     		lsrs	r2, r2, #18
 213              	.L8:
 214              		.loc 2 30 0
 215 00e2 064B     		ldr	r3, .L10+4
 216 00e4 5B68     		ldr	r3, [r3, #4]
 217 00e6 1B1B     		subs	r3, r3, r4
 218 00e8 9342     		cmp	r3, r2
 219 00ea FAD3     		bcc	.L8
 220              	.LVL30:
 221              	.LBE23:
 222              	.LBE22:
ARM GAS  /tmp/ccByiixK.s 			page 7


  82:Src/txChain.c **** 	// Shift data in by bringing LE high
  83:Src/txChain.c **** 	DWT_Delay_us(1);
  84:Src/txChain.c **** 	HAL_GPIO_WritePin(ATTEN_LE_GPIO_Port, ATTEN_LE_Pin, 1);
 223              		.loc 1 84 0
 224 00ec 0122     		movs	r2, #1
 225 00ee 4021     		movs	r1, #64
 226 00f0 0148     		ldr	r0, .L10
 227 00f2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 228              	.LVL31:
  85:Src/txChain.c **** }
 229              		.loc 1 85 0
 230 00f6 70BD     		pop	{r4, r5, r6, pc}
 231              	.LVL32:
 232              	.L11:
 233              		.align	2
 234              	.L10:
 235 00f8 00080140 		.word	1073809408
 236 00fc 001000E0 		.word	-536866816
 237 0100 83DE1B43 		.word	1125899907
 238 0104 000C0140 		.word	1073810432
 239              		.cfi_endproc
 240              	.LFE72:
 242              		.global	__aeabi_ui2d
 243              		.global	__aeabi_dmul
 244              		.global	__aeabi_d2f
 245              		.global	__aeabi_f2d
 246              		.global	__aeabi_dadd
 247              		.section	.text.readAD8319,"ax",%progbits
 248              		.align	1
 249              		.global	readAD8319
 250              		.syntax unified
 251              		.thumb
 252              		.thumb_func
 253              		.fpu softvfp
 255              	readAD8319:
 256              	.LFB74:
  86:Src/txChain.c **** 
  87:Src/txChain.c **** // Very simple control of attenuator to set desired output power.
  88:Src/txChain.c **** // Changes attenuation until AD8319 reads correct value or runs out of attenuation.
  89:Src/txChain.c **** void setOutputPower(float setPower, struct MAX2871Struct *max2871Status, struct txStruct *txStatus)
  90:Src/txChain.c **** {
  91:Src/txChain.c **** 	if (setPower >= 0)
  92:Src/txChain.c **** 		max2871SetPower(5, max2871Status);
  93:Src/txChain.c **** 	else
  94:Src/txChain.c **** 		max2871SetPower(-4, max2871Status);
  95:Src/txChain.c **** 
  96:Src/txChain.c **** 	txStatus->setOutputPower = setPower;
  97:Src/txChain.c **** 	readAD8319(txStatus);
  98:Src/txChain.c **** 
  99:Src/txChain.c **** 	// If power too high
 100:Src/txChain.c **** 	if (txStatus->measOutputPower > (txStatus->setOutputPower + STEP_ATTENUATION / 2))
 101:Src/txChain.c **** 	{
 102:Src/txChain.c **** 		// While power too high
 103:Src/txChain.c **** 		while (txStatus->measOutputPower > (txStatus->setOutputPower + STEP_ATTENUATION / 2))
 104:Src/txChain.c **** 		{
 105:Src/txChain.c **** 			if (txStatus->attenuation < MAX_ATTENUATION)
 106:Src/txChain.c **** 			{
ARM GAS  /tmp/ccByiixK.s 			page 8


 107:Src/txChain.c **** 				setAttenuation(txStatus->attenuation += STEP_ATTENUATION, txStatus);
 108:Src/txChain.c **** 				DWT_Delay_us(1);
 109:Src/txChain.c **** 				readAD8319(txStatus);
 110:Src/txChain.c **** 			}
 111:Src/txChain.c **** 			else
 112:Src/txChain.c **** 			{
 113:Src/txChain.c **** 				printUSB((char *) "> Ran out of attenuation!\r\n");
 114:Src/txChain.c **** 				break;
 115:Src/txChain.c **** 			}
 116:Src/txChain.c **** 		}
 117:Src/txChain.c **** 	}
 118:Src/txChain.c **** 	// If power too low
 119:Src/txChain.c **** 	else if (txStatus->measOutputPower < (txStatus->setOutputPower - STEP_ATTENUATION / 2))
 120:Src/txChain.c **** 	{
 121:Src/txChain.c **** 		// While power too low
 122:Src/txChain.c **** 		while (txStatus->measOutputPower < (txStatus->setOutputPower - STEP_ATTENUATION / 2))
 123:Src/txChain.c **** 		{
 124:Src/txChain.c **** 			if (txStatus->attenuation > MIN_ATTENUATION)
 125:Src/txChain.c **** 			{
 126:Src/txChain.c **** 				setAttenuation(txStatus->attenuation -= STEP_ATTENUATION, txStatus);
 127:Src/txChain.c **** 				DWT_Delay_us(1);
 128:Src/txChain.c **** 				readAD8319(txStatus);
 129:Src/txChain.c **** 			}
 130:Src/txChain.c **** 			else
 131:Src/txChain.c **** 			{
 132:Src/txChain.c **** 				printUSB((char *) "> Ran out of attenuation!\r\n");
 133:Src/txChain.c **** 				break;
 134:Src/txChain.c **** 			}
 135:Src/txChain.c **** 		}
 136:Src/txChain.c **** 	}
 137:Src/txChain.c **** 
 138:Src/txChain.c **** }
 139:Src/txChain.c **** 
 140:Src/txChain.c **** // Sets power value in the txStatus struct
 141:Src/txChain.c **** // Accounts for losses before AD8319, however need to confirm through measurements
 142:Src/txChain.c **** // Returns voltage measured from the AD8319
 143:Src/txChain.c **** float readAD8319(struct txStruct *txStatus)
 144:Src/txChain.c **** {
 257              		.loc 1 144 0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261              	.LVL33:
 262 0000 70B5     		push	{r4, r5, r6, lr}
 263              	.LCFI1:
 264              		.cfi_def_cfa_offset 16
 265              		.cfi_offset 4, -16
 266              		.cfi_offset 5, -12
 267              		.cfi_offset 6, -8
 268              		.cfi_offset 14, -4
 269 0002 0646     		mov	r6, r0
 270              	.LVL34:
 271              	.LBB24:
 145:Src/txChain.c **** 	float voltage, power;
 146:Src/txChain.c **** 	uint32_t adcValue = 0;
 147:Src/txChain.c **** 	uint32_t ch;
 148:Src/txChain.c **** 	uint16_t retVal;
ARM GAS  /tmp/ccByiixK.s 			page 9


 149:Src/txChain.c **** 
 150:Src/txChain.c **** 
 151:Src/txChain.c **** 	// Get a 8 sample average of the ADC data
 152:Src/txChain.c **** 	for (uint8_t i = 8; i > 0; i--)
 272              		.loc 1 152 0
 273 0004 0824     		movs	r4, #8
 274              	.LBE24:
 146:Src/txChain.c **** 	uint32_t ch;
 275              		.loc 1 146 0
 276 0006 0025     		movs	r5, #0
 277              	.LBB25:
 278              		.loc 1 152 0
 279 0008 04E0     		b	.L13
 280              	.LVL35:
 281              	.L15:
 153:Src/txChain.c **** 	{
 154:Src/txChain.c **** 		while(HAL_ADC_PollForConversion(&hadc1, 1000) != HAL_OK)
 155:Src/txChain.c **** 		{
 156:Src/txChain.c **** 			// Wait
 157:Src/txChain.c **** 		}
 158:Src/txChain.c **** 
 159:Src/txChain.c **** 		if(HAL_ADC_PollForConversion(&hadc1, 1000) == HAL_OK)
 160:Src/txChain.c **** 		{
 161:Src/txChain.c **** 			adcValue += HAL_ADC_GetValue(&hadc1);
 162:Src/txChain.c **** 		}
 163:Src/txChain.c **** 		HAL_Delay(1);
 282              		.loc 1 163 0 discriminator 2
 283 000a 0120     		movs	r0, #1
 284 000c FFF7FEFF 		bl	HAL_Delay
 285              	.LVL36:
 152:Src/txChain.c **** 	{
 286              		.loc 1 152 0 discriminator 2
 287 0010 013C     		subs	r4, r4, #1
 288              	.LVL37:
 289 0012 E4B2     		uxtb	r4, r4
 290              	.LVL38:
 291              	.L13:
 152:Src/txChain.c **** 	{
 292              		.loc 1 152 0 is_stmt 0 discriminator 1
 293 0014 94B1     		cbz	r4, .L17
 294              	.L14:
 154:Src/txChain.c **** 		{
 295              		.loc 1 154 0 is_stmt 1 discriminator 1
 296 0016 4FF47A71 		mov	r1, #1000
 297 001a 1D48     		ldr	r0, .L18+16
 298 001c FFF7FEFF 		bl	HAL_ADC_PollForConversion
 299              	.LVL39:
 300 0020 0028     		cmp	r0, #0
 301 0022 F8D1     		bne	.L14
 159:Src/txChain.c **** 		{
 302              		.loc 1 159 0
 303 0024 4FF47A71 		mov	r1, #1000
 304 0028 1948     		ldr	r0, .L18+16
 305 002a FFF7FEFF 		bl	HAL_ADC_PollForConversion
 306              	.LVL40:
 307 002e 0028     		cmp	r0, #0
 308 0030 EBD1     		bne	.L15
ARM GAS  /tmp/ccByiixK.s 			page 10


 161:Src/txChain.c **** 		}
 309              		.loc 1 161 0
 310 0032 1748     		ldr	r0, .L18+16
 311 0034 FFF7FEFF 		bl	HAL_ADC_GetValue
 312              	.LVL41:
 313 0038 0544     		add	r5, r5, r0
 314              	.LVL42:
 315 003a E6E7     		b	.L15
 316              	.L17:
 317              	.LVL43:
 318              	.LBE25:
 164:Src/txChain.c **** 	}
 165:Src/txChain.c **** 
 166:Src/txChain.c **** 	adcValue /= 8; // Divide by 8 to get average value
 167:Src/txChain.c **** 
 168:Src/txChain.c **** 	voltage = (VREF * adcValue) / NUM_STATES_12_BIT;	// Convert to voltage
 319              		.loc 1 168 0
 320 003c E808     		lsrs	r0, r5, #3
 321              	.LVL44:
 322 003e FFF7FEFF 		bl	__aeabi_ui2d
 323              	.LVL45:
 324 0042 0FA3     		adr	r3, .L18
 325 0044 D3E90023 		ldrd	r2, [r3]
 326 0048 FFF7FEFF 		bl	__aeabi_dmul
 327              	.LVL46:
 328 004c 0022     		movs	r2, #0
 329 004e 114B     		ldr	r3, .L18+20
 330 0050 FFF7FEFF 		bl	__aeabi_dmul
 331              	.LVL47:
 332 0054 FFF7FEFF 		bl	__aeabi_d2f
 333              	.LVL48:
 334 0058 0446     		mov	r4, r0
 335              	.LVL49:
 169:Src/txChain.c **** 
 170:Src/txChain.c **** 	power = -44.4 * voltage + 33; 				// Voltage to power at SMA
 336              		.loc 1 170 0
 337 005a FFF7FEFF 		bl	__aeabi_f2d
 338              	.LVL50:
 339 005e 0AA3     		adr	r3, .L18+8
 340 0060 D3E90023 		ldrd	r2, [r3]
 341 0064 FFF7FEFF 		bl	__aeabi_dmul
 342              	.LVL51:
 343 0068 0022     		movs	r2, #0
 344 006a 0B4B     		ldr	r3, .L18+24
 345 006c FFF7FEFF 		bl	__aeabi_dadd
 346              	.LVL52:
 347 0070 FFF7FEFF 		bl	__aeabi_d2f
 348              	.LVL53:
 171:Src/txChain.c **** 
 172:Src/txChain.c **** 	txStatus->measOutputPower = power;
 349              		.loc 1 172 0
 350 0074 3060     		str	r0, [r6]	@ float
 173:Src/txChain.c **** 
 174:Src/txChain.c **** 	return voltage;
 175:Src/txChain.c **** }
 351              		.loc 1 175 0
 352 0076 2046     		mov	r0, r4
ARM GAS  /tmp/ccByiixK.s 			page 11


 353              	.LVL54:
 354 0078 70BD     		pop	{r4, r5, r6, pc}
 355              	.LVL55:
 356              	.L19:
 357 007a 00BFAFF3 		.align	3
 357      0080
 358              	.L18:
 359 0080 66666666 		.word	1717986918
 360 0084 66660A40 		.word	1074423398
 361 0088 33333333 		.word	858993459
 362 008c 333346C0 		.word	-1069141197
 363 0090 00000000 		.word	hadc1
 364 0094 0000303F 		.word	1060110336
 365 0098 00804040 		.word	1077968896
 366              		.cfi_endproc
 367              	.LFE74:
 369              		.global	__aeabi_fcmpge
 370              		.global	__aeabi_dcmpgt
 371              		.global	__aeabi_fcmplt
 372              		.global	__aeabi_fadd
 373              		.global	__aeabi_dsub
 374              		.global	__aeabi_dcmplt
 375              		.global	__aeabi_fcmpgt
 376              		.global	__aeabi_fsub
 377              		.section	.text.setOutputPower,"ax",%progbits
 378              		.align	1
 379              		.global	setOutputPower
 380              		.syntax unified
 381              		.thumb
 382              		.thumb_func
 383              		.fpu softvfp
 385              	setOutputPower:
 386              	.LFB73:
  90:Src/txChain.c **** 	if (setPower >= 0)
 387              		.loc 1 90 0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 0
 390              		@ frame_needed = 0, uses_anonymous_args = 0
 391              	.LVL56:
 392 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 393              	.LCFI2:
 394              		.cfi_def_cfa_offset 32
 395              		.cfi_offset 3, -32
 396              		.cfi_offset 4, -28
 397              		.cfi_offset 5, -24
 398              		.cfi_offset 6, -20
 399              		.cfi_offset 7, -16
 400              		.cfi_offset 8, -12
 401              		.cfi_offset 9, -8
 402              		.cfi_offset 14, -4
 403 0004 0546     		mov	r5, r0
 404 0006 0E46     		mov	r6, r1
 405 0008 1446     		mov	r4, r2
  91:Src/txChain.c **** 		max2871SetPower(5, max2871Status);
 406              		.loc 1 91 0
 407 000a 0021     		movs	r1, #0
 408              	.LVL57:
ARM GAS  /tmp/ccByiixK.s 			page 12


 409 000c FFF7FEFF 		bl	__aeabi_fcmpge
 410              	.LVL58:
 411 0010 0028     		cmp	r0, #0
 412 0012 5FD0     		beq	.L39
  92:Src/txChain.c **** 	else
 413              		.loc 1 92 0
 414 0014 3146     		mov	r1, r6
 415 0016 0520     		movs	r0, #5
 416 0018 FFF7FEFF 		bl	max2871SetPower
 417              	.LVL59:
 418              	.L23:
  96:Src/txChain.c **** 	readAD8319(txStatus);
 419              		.loc 1 96 0
 420 001c 6560     		str	r5, [r4, #4]	@ float
  97:Src/txChain.c **** 
 421              		.loc 1 97 0
 422 001e 2046     		mov	r0, r4
 423 0020 FFF7FEFF 		bl	readAD8319
 424              	.LVL60:
 100:Src/txChain.c **** 	{
 425              		.loc 1 100 0
 426 0024 2068     		ldr	r0, [r4]	@ float
 427 0026 FFF7FEFF 		bl	__aeabi_f2d
 428              	.LVL61:
 429 002a 0646     		mov	r6, r0
 430              	.LVL62:
 431 002c 0F46     		mov	r7, r1
 432 002e 6068     		ldr	r0, [r4, #4]	@ float
 433 0030 FFF7FEFF 		bl	__aeabi_f2d
 434              	.LVL63:
 435 0034 8046     		mov	r8, r0
 436 0036 8946     		mov	r9, r1
 437 0038 0022     		movs	r2, #0
 438 003a 484B     		ldr	r3, .L44
 439 003c FFF7FEFF 		bl	__aeabi_dadd
 440              	.LVL64:
 441 0040 0246     		mov	r2, r0
 442 0042 0B46     		mov	r3, r1
 443 0044 3046     		mov	r0, r6
 444 0046 3946     		mov	r1, r7
 445 0048 FFF7FEFF 		bl	__aeabi_dcmpgt
 446              	.LVL65:
 447 004c 0028     		cmp	r0, #0
 448 004e 4CD1     		bne	.L24
 119:Src/txChain.c **** 	{
 449              		.loc 1 119 0
 450 0050 0022     		movs	r2, #0
 451 0052 424B     		ldr	r3, .L44
 452 0054 4046     		mov	r0, r8
 453 0056 4946     		mov	r1, r9
 454 0058 FFF7FEFF 		bl	__aeabi_dsub
 455              	.LVL66:
 456 005c 0246     		mov	r2, r0
 457 005e 0B46     		mov	r3, r1
 458 0060 3046     		mov	r0, r6
 459 0062 3946     		mov	r1, r7
 460 0064 FFF7FEFF 		bl	__aeabi_dcmplt
ARM GAS  /tmp/ccByiixK.s 			page 13


 461              	.LVL67:
 462 0068 0028     		cmp	r0, #0
 463 006a 3CD0     		beq	.L20
 464              	.LVL68:
 465              	.L31:
 122:Src/txChain.c **** 		{
 466              		.loc 1 122 0
 467 006c 2068     		ldr	r0, [r4]	@ float
 468 006e FFF7FEFF 		bl	__aeabi_f2d
 469              	.LVL69:
 470 0072 0646     		mov	r6, r0
 471 0074 0F46     		mov	r7, r1
 472 0076 6068     		ldr	r0, [r4, #4]	@ float
 473 0078 FFF7FEFF 		bl	__aeabi_f2d
 474              	.LVL70:
 475 007c 0022     		movs	r2, #0
 476 007e 374B     		ldr	r3, .L44
 477 0080 FFF7FEFF 		bl	__aeabi_dsub
 478              	.LVL71:
 479 0084 0246     		mov	r2, r0
 480 0086 0B46     		mov	r3, r1
 481 0088 3046     		mov	r0, r6
 482 008a 3946     		mov	r1, r7
 483 008c FFF7FEFF 		bl	__aeabi_dcmplt
 484              	.LVL72:
 485 0090 48B3     		cbz	r0, .L20
 124:Src/txChain.c **** 			{
 486              		.loc 1 124 0
 487 0092 A568     		ldr	r5, [r4, #8]	@ float
 488 0094 0021     		movs	r1, #0
 489 0096 2846     		mov	r0, r5
 490 0098 FFF7FEFF 		bl	__aeabi_fcmpgt
 491              	.LVL73:
 492 009c 0028     		cmp	r0, #0
 493 009e 59D0     		beq	.L42
 126:Src/txChain.c **** 				DWT_Delay_us(1);
 494              		.loc 1 126 0
 495 00a0 4FF07C51 		mov	r1, #1056964608
 496 00a4 2846     		mov	r0, r5
 497 00a6 FFF7FEFF 		bl	__aeabi_fsub
 498              	.LVL74:
 499 00aa A060     		str	r0, [r4, #8]	@ float
 500 00ac 2146     		mov	r1, r4
 501 00ae FFF7FEFF 		bl	setAttenuation
 502              	.LVL75:
 503              	.LBB30:
 504              	.LBB31:
  24:Inc/dwt_stm32_delay.h **** 
 505              		.loc 2 24 0
 506 00b2 2B4B     		ldr	r3, .L44+4
 507 00b4 5D68     		ldr	r5, [r3, #4]
 508              	.LVL76:
  27:Inc/dwt_stm32_delay.h **** 
 509              		.loc 2 27 0
 510 00b6 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 511              	.LVL77:
 512 00ba 2A4B     		ldr	r3, .L44+8
ARM GAS  /tmp/ccByiixK.s 			page 14


 513 00bc A3FB0030 		umull	r3, r0, r3, r0
 514 00c0 800C     		lsrs	r0, r0, #18
 515              	.L34:
 516              		.loc 2 30 0
 517 00c2 274B     		ldr	r3, .L44+4
 518 00c4 5B68     		ldr	r3, [r3, #4]
 519 00c6 5B1B     		subs	r3, r3, r5
 520 00c8 8342     		cmp	r3, r0
 521 00ca FAD3     		bcc	.L34
 522              	.LVL78:
 523              	.LBE31:
 524              	.LBE30:
 128:Src/txChain.c **** 			}
 525              		.loc 1 128 0
 526 00cc 2046     		mov	r0, r4
 527 00ce FFF7FEFF 		bl	readAD8319
 528              	.LVL79:
 529 00d2 CBE7     		b	.L31
 530              	.LVL80:
 531              	.L39:
  94:Src/txChain.c **** 
 532              		.loc 1 94 0
 533 00d4 3146     		mov	r1, r6
 534 00d6 6FF00300 		mvn	r0, #3
 535 00da FFF7FEFF 		bl	max2871SetPower
 536              	.LVL81:
 537 00de 9DE7     		b	.L23
 538              	.LVL82:
 539              	.L41:
 113:Src/txChain.c **** 				break;
 540              		.loc 1 113 0
 541 00e0 2148     		ldr	r0, .L44+12
 542 00e2 FFF7FEFF 		bl	printUSB
 543              	.LVL83:
 544              	.L20:
 138:Src/txChain.c **** 
 545              		.loc 1 138 0
 546 00e6 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 547              	.LVL84:
 548              	.L24:
 103:Src/txChain.c **** 		{
 549              		.loc 1 103 0
 550 00ea 2068     		ldr	r0, [r4]	@ float
 551 00ec FFF7FEFF 		bl	__aeabi_f2d
 552              	.LVL85:
 553 00f0 0646     		mov	r6, r0
 554 00f2 0F46     		mov	r7, r1
 555 00f4 6068     		ldr	r0, [r4, #4]	@ float
 556 00f6 FFF7FEFF 		bl	__aeabi_f2d
 557              	.LVL86:
 558 00fa 0022     		movs	r2, #0
 559 00fc 174B     		ldr	r3, .L44
 560 00fe FFF7FEFF 		bl	__aeabi_dadd
 561              	.LVL87:
 562 0102 0246     		mov	r2, r0
 563 0104 0B46     		mov	r3, r1
 564 0106 3046     		mov	r0, r6
ARM GAS  /tmp/ccByiixK.s 			page 15


 565 0108 3946     		mov	r1, r7
 566 010a FFF7FEFF 		bl	__aeabi_dcmpgt
 567              	.LVL88:
 568 010e 0028     		cmp	r0, #0
 569 0110 E9D0     		beq	.L20
 105:Src/txChain.c **** 			{
 570              		.loc 1 105 0
 571 0112 A568     		ldr	r5, [r4, #8]	@ float
 572 0114 1549     		ldr	r1, .L44+16
 573 0116 2846     		mov	r0, r5
 574 0118 FFF7FEFF 		bl	__aeabi_fcmplt
 575              	.LVL89:
 576 011c 0028     		cmp	r0, #0
 577 011e DFD0     		beq	.L41
 107:Src/txChain.c **** 				DWT_Delay_us(1);
 578              		.loc 1 107 0
 579 0120 4FF07C51 		mov	r1, #1056964608
 580 0124 2846     		mov	r0, r5
 581 0126 FFF7FEFF 		bl	__aeabi_fadd
 582              	.LVL90:
 583 012a A060     		str	r0, [r4, #8]	@ float
 584 012c 2146     		mov	r1, r4
 585 012e FFF7FEFF 		bl	setAttenuation
 586              	.LVL91:
 587              	.LBB32:
 588              	.LBB33:
  24:Inc/dwt_stm32_delay.h **** 
 589              		.loc 2 24 0
 590 0132 0B4B     		ldr	r3, .L44+4
 591 0134 5D68     		ldr	r5, [r3, #4]
 592              	.LVL92:
  27:Inc/dwt_stm32_delay.h **** 
 593              		.loc 2 27 0
 594 0136 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 595              	.LVL93:
 596 013a 0A4B     		ldr	r3, .L44+8
 597 013c A3FB0030 		umull	r3, r0, r3, r0
 598 0140 800C     		lsrs	r0, r0, #18
 599              	.L28:
 600              		.loc 2 30 0
 601 0142 074B     		ldr	r3, .L44+4
 602 0144 5B68     		ldr	r3, [r3, #4]
 603 0146 5B1B     		subs	r3, r3, r5
 604 0148 8342     		cmp	r3, r0
 605 014a FAD3     		bcc	.L28
 606              	.LVL94:
 607              	.LBE33:
 608              	.LBE32:
 109:Src/txChain.c **** 			}
 609              		.loc 1 109 0
 610 014c 2046     		mov	r0, r4
 611 014e FFF7FEFF 		bl	readAD8319
 612              	.LVL95:
 613 0152 CAE7     		b	.L24
 614              	.L42:
 132:Src/txChain.c **** 				break;
 615              		.loc 1 132 0
ARM GAS  /tmp/ccByiixK.s 			page 16


 616 0154 0448     		ldr	r0, .L44+12
 617 0156 FFF7FEFF 		bl	printUSB
 618              	.LVL96:
 133:Src/txChain.c **** 			}
 619              		.loc 1 133 0
 620 015a C4E7     		b	.L20
 621              	.L45:
 622              		.align	2
 623              	.L44:
 624 015c 0000D03F 		.word	1070596096
 625 0160 001000E0 		.word	-536866816
 626 0164 83DE1B43 		.word	1125899907
 627 0168 00000000 		.word	.LC0
 628 016c 0000FC41 		.word	1107034112
 629              		.cfi_endproc
 630              	.LFE73:
 632              		.section	.text.enablePA,"ax",%progbits
 633              		.align	1
 634              		.global	enablePA
 635              		.syntax unified
 636              		.thumb
 637              		.thumb_func
 638              		.fpu softvfp
 640              	enablePA:
 641              	.LFB75:
 176:Src/txChain.c **** 
 177:Src/txChain.c **** void enablePA(struct txStruct *txStatus)
 178:Src/txChain.c **** {
 642              		.loc 1 178 0
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 0
 645              		@ frame_needed = 0, uses_anonymous_args = 0
 646              	.LVL97:
 647 0000 10B5     		push	{r4, lr}
 648              	.LCFI3:
 649              		.cfi_def_cfa_offset 8
 650              		.cfi_offset 4, -8
 651              		.cfi_offset 14, -4
 652 0002 0446     		mov	r4, r0
 179:Src/txChain.c **** 	HAL_GPIO_WritePin(PA_PWDN_GPIO_Port,PA_PWDN_Pin,0);
 653              		.loc 1 179 0
 654 0004 0022     		movs	r2, #0
 655 0006 4FF40071 		mov	r1, #512
 656 000a 0348     		ldr	r0, .L48
 657              	.LVL98:
 658 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 659              	.LVL99:
 180:Src/txChain.c **** 	txStatus->paPwdn = 0;
 660              		.loc 1 180 0
 661 0010 0023     		movs	r3, #0
 662 0012 2373     		strb	r3, [r4, #12]
 181:Src/txChain.c **** }
 663              		.loc 1 181 0
 664 0014 10BD     		pop	{r4, pc}
 665              	.LVL100:
 666              	.L49:
 667 0016 00BF     		.align	2
ARM GAS  /tmp/ccByiixK.s 			page 17


 668              	.L48:
 669 0018 000C0140 		.word	1073810432
 670              		.cfi_endproc
 671              	.LFE75:
 673              		.section	.text.sigGen,"ax",%progbits
 674              		.align	1
 675              		.global	sigGen
 676              		.syntax unified
 677              		.thumb
 678              		.thumb_func
 679              		.fpu softvfp
 681              	sigGen:
 682              	.LFB69:
  17:Src/txChain.c **** 	// Ensure RF Enabled
 683              		.loc 1 17 0
 684              		.cfi_startproc
 685              		@ args = 0, pretend = 0, frame = 0
 686              		@ frame_needed = 0, uses_anonymous_args = 0
 687              	.LVL101:
 688 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 689              	.LCFI4:
 690              		.cfi_def_cfa_offset 24
 691              		.cfi_offset 3, -24
 692              		.cfi_offset 4, -20
 693              		.cfi_offset 5, -16
 694              		.cfi_offset 6, -12
 695              		.cfi_offset 7, -8
 696              		.cfi_offset 14, -4
 697 0002 0646     		mov	r6, r0
 698 0004 0F46     		mov	r7, r1
 699 0006 1446     		mov	r4, r2
 700 0008 1D46     		mov	r5, r3
  19:Src/txChain.c **** 	enablePA(txStatus);
 701              		.loc 1 19 0
 702 000a 1046     		mov	r0, r2
 703              	.LVL102:
 704 000c FFF7FEFF 		bl	max2871RFEnable
 705              	.LVL103:
  20:Src/txChain.c **** 
 706              		.loc 1 20 0
 707 0010 2846     		mov	r0, r5
 708 0012 FFF7FEFF 		bl	enablePA
 709              	.LVL104:
  22:Src/txChain.c **** 	stpSpiTx(freqToLed(frequency));
 710              		.loc 1 22 0
 711 0016 2246     		mov	r2, r4
 712 0018 0021     		movs	r1, #0
 713 001a 3046     		mov	r0, r6
 714 001c FFF7FEFF 		bl	max2871SetFrequency
 715              	.LVL105:
  23:Src/txChain.c **** 
 716              		.loc 1 23 0
 717 0020 3046     		mov	r0, r6
 718 0022 FFF7FEFF 		bl	freqToLed
 719              	.LVL106:
 720 0026 FFF7FEFF 		bl	stpSpiTx
 721              	.LVL107:
ARM GAS  /tmp/ccByiixK.s 			page 18


 722              	.L51:
  25:Src/txChain.c **** 	// Don't go any further until PLL has lock
 723              		.loc 1 25 0 discriminator 1
 724 002a 2046     		mov	r0, r4
 725 002c FFF7FEFF 		bl	max2871CheckLD
 726              	.LVL108:
 727 0030 0028     		cmp	r0, #0
 728 0032 FAD0     		beq	.L51
  28:Src/txChain.c **** }
 729              		.loc 1 28 0
 730 0034 2A46     		mov	r2, r5
 731 0036 2146     		mov	r1, r4
 732 0038 3846     		mov	r0, r7
 733 003a FFF7FEFF 		bl	setOutputPower
 734              	.LVL109:
  29:Src/txChain.c **** 
 735              		.loc 1 29 0
 736 003e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 737              		.cfi_endproc
 738              	.LFE69:
 740              		.global	__aeabi_fdiv
 741              		.global	__aeabi_fcmple
 742              		.section	.text.sweep,"ax",%progbits
 743              		.align	1
 744              		.global	sweep
 745              		.syntax unified
 746              		.thumb
 747              		.thumb_func
 748              		.fpu softvfp
 750              	sweep:
 751              	.LFB70:
  33:Src/txChain.c **** 	float stepSize = ((higherFreq - lowerFreq) / numSteps);
 752              		.loc 1 33 0
 753              		.cfi_startproc
 754              		@ args = 12, pretend = 0, frame = 0
 755              		@ frame_needed = 0, uses_anonymous_args = 0
 756              	.LVL110:
 757 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 758              	.LCFI5:
 759              		.cfi_def_cfa_offset 32
 760              		.cfi_offset 3, -32
 761              		.cfi_offset 4, -28
 762              		.cfi_offset 5, -24
 763              		.cfi_offset 6, -20
 764              		.cfi_offset 7, -16
 765              		.cfi_offset 8, -12
 766              		.cfi_offset 9, -8
 767              		.cfi_offset 14, -4
 768 0004 0546     		mov	r5, r0
 769 0006 0F46     		mov	r7, r1
 770 0008 1446     		mov	r4, r2
 771 000a 9946     		mov	r9, r3
  34:Src/txChain.c **** 	uint32_t delay = sweepTime * 1000000 / numSteps; 	// Delay is in uS
 772              		.loc 1 34 0
 773 000c 0146     		mov	r1, r0
 774              	.LVL111:
 775 000e 3846     		mov	r0, r7
ARM GAS  /tmp/ccByiixK.s 			page 19


 776              	.LVL112:
 777 0010 FFF7FEFF 		bl	__aeabi_fsub
 778              	.LVL113:
 779 0014 2146     		mov	r1, r4
 780 0016 FFF7FEFF 		bl	__aeabi_fdiv
 781              	.LVL114:
 782 001a 8046     		mov	r8, r0
 783              	.LVL115:
  35:Src/txChain.c **** 
 784              		.loc 1 35 0
 785 001c 1749     		ldr	r1, .L59
 786 001e 0898     		ldr	r0, [sp, #32]	@ float
 787              	.LVL116:
 788 0020 FFF7FEFF 		bl	__aeabi_fmul
 789              	.LVL117:
 790 0024 2146     		mov	r1, r4
 791 0026 FFF7FEFF 		bl	__aeabi_fdiv
 792              	.LVL118:
 793 002a FFF7FEFF 		bl	__aeabi_f2uiz
 794              	.LVL119:
 795 002e 0646     		mov	r6, r0
 796              	.LVL120:
 797              	.L54:
  39:Src/txChain.c **** 	{
 798              		.loc 1 39 0
 799 0030 3946     		mov	r1, r7
 800 0032 2846     		mov	r0, r5
 801 0034 FFF7FEFF 		bl	__aeabi_fcmple
 802              	.LVL121:
 803 0038 F0B1     		cbz	r0, .L53
  41:Src/txChain.c **** 		DWT_Delay_us(delay);
 804              		.loc 1 41 0
 805 003a 0A9B     		ldr	r3, [sp, #40]
 806 003c 099A     		ldr	r2, [sp, #36]
 807 003e 4946     		mov	r1, r9
 808 0040 2846     		mov	r0, r5
 809 0042 FFF7FEFF 		bl	sigGen
 810              	.LVL122:
 811              	.LBB36:
 812              	.LBB37:
  24:Inc/dwt_stm32_delay.h **** 
 813              		.loc 2 24 0
 814 0046 0E4B     		ldr	r3, .L59+4
 815 0048 5C68     		ldr	r4, [r3, #4]
 816              	.LVL123:
  27:Inc/dwt_stm32_delay.h **** 
 817              		.loc 2 27 0
 818 004a FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 819              	.LVL124:
 820 004e 0D4A     		ldr	r2, .L59+8
 821 0050 A2FB0032 		umull	r3, r2, r2, r0
 822 0054 920C     		lsrs	r2, r2, #18
 823 0056 06FB02F2 		mul	r2, r6, r2
 824              	.L55:
 825              		.loc 2 30 0
 826 005a 094B     		ldr	r3, .L59+4
 827 005c 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/ccByiixK.s 			page 20


 828 005e 1B1B     		subs	r3, r3, r4
 829 0060 9342     		cmp	r3, r2
 830 0062 FAD3     		bcc	.L55
 831              	.LVL125:
 832              	.LBE37:
 833              	.LBE36:
  43:Src/txChain.c **** 		if (RX_FIFO.dataReady == 1) break;
 834              		.loc 1 43 0
 835 0064 4146     		mov	r1, r8
 836 0066 2846     		mov	r0, r5
 837 0068 FFF7FEFF 		bl	__aeabi_fadd
 838              	.LVL126:
 839 006c 0546     		mov	r5, r0
 840              	.LVL127:
  44:Src/txChain.c **** 
 841              		.loc 1 44 0
 842 006e 064B     		ldr	r3, .L59+12
 843 0070 93F88830 		ldrb	r3, [r3, #136]	@ zero_extendqisi2
 844 0074 012B     		cmp	r3, #1
 845 0076 DBD1     		bne	.L54
 846              	.LVL128:
 847              	.L53:
  47:Src/txChain.c **** 
 848              		.loc 1 47 0
 849 0078 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 850              	.LVL129:
 851              	.L60:
 852              		.align	2
 853              	.L59:
 854 007c 00247449 		.word	1232348160
 855 0080 001000E0 		.word	-536866816
 856 0084 83DE1B43 		.word	1125899907
 857 0088 00000000 		.word	RX_FIFO
 858              		.cfi_endproc
 859              	.LFE70:
 861              		.section	.text.disablePA,"ax",%progbits
 862              		.align	1
 863              		.global	disablePA
 864              		.syntax unified
 865              		.thumb
 866              		.thumb_func
 867              		.fpu softvfp
 869              	disablePA:
 870              	.LFB76:
 182:Src/txChain.c **** 
 183:Src/txChain.c **** void disablePA(struct txStruct *txStatus)
 184:Src/txChain.c **** {
 871              		.loc 1 184 0
 872              		.cfi_startproc
 873              		@ args = 0, pretend = 0, frame = 0
 874              		@ frame_needed = 0, uses_anonymous_args = 0
 875              	.LVL130:
 876 0000 10B5     		push	{r4, lr}
 877              	.LCFI6:
 878              		.cfi_def_cfa_offset 8
 879              		.cfi_offset 4, -8
 880              		.cfi_offset 14, -4
ARM GAS  /tmp/ccByiixK.s 			page 21


 881 0002 0446     		mov	r4, r0
 185:Src/txChain.c **** 	HAL_GPIO_WritePin(PA_PWDN_GPIO_Port,PA_PWDN_Pin,1);
 882              		.loc 1 185 0
 883 0004 0122     		movs	r2, #1
 884 0006 4FF40071 		mov	r1, #512
 885 000a 0348     		ldr	r0, .L63
 886              	.LVL131:
 887 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 888              	.LVL132:
 186:Src/txChain.c **** 	txStatus->paPwdn = 1;
 889              		.loc 1 186 0
 890 0010 0123     		movs	r3, #1
 891 0012 2373     		strb	r3, [r4, #12]
 187:Src/txChain.c **** }
 892              		.loc 1 187 0
 893 0014 10BD     		pop	{r4, pc}
 894              	.LVL133:
 895              	.L64:
 896 0016 00BF     		.align	2
 897              	.L63:
 898 0018 000C0140 		.word	1073810432
 899              		.cfi_endproc
 900              	.LFE76:
 902              		.section	.text.txChainInit,"ax",%progbits
 903              		.align	1
 904              		.global	txChainInit
 905              		.syntax unified
 906              		.thumb
 907              		.thumb_func
 908              		.fpu softvfp
 910              	txChainInit:
 911              	.LFB71:
  50:Src/txChain.c **** 	max2871RFDisable(max2871Status);
 912              		.loc 1 50 0
 913              		.cfi_startproc
 914              		@ args = 0, pretend = 0, frame = 0
 915              		@ frame_needed = 0, uses_anonymous_args = 0
 916              	.LVL134:
 917 0000 38B5     		push	{r3, r4, r5, lr}
 918              	.LCFI7:
 919              		.cfi_def_cfa_offset 16
 920              		.cfi_offset 3, -16
 921              		.cfi_offset 4, -12
 922              		.cfi_offset 5, -8
 923              		.cfi_offset 14, -4
 924 0002 0546     		mov	r5, r0
 925 0004 0C46     		mov	r4, r1
  51:Src/txChain.c **** 	disablePA(txStatus);
 926              		.loc 1 51 0
 927 0006 FFF7FEFF 		bl	max2871RFDisable
 928              	.LVL135:
  52:Src/txChain.c **** 	setAttenuation(MAX_ATTENUATION,txStatus);
 929              		.loc 1 52 0
 930 000a 2046     		mov	r0, r4
 931 000c FFF7FEFF 		bl	disablePA
 932              	.LVL136:
  53:Src/txChain.c **** 	max2871Setup(max2871Status);
ARM GAS  /tmp/ccByiixK.s 			page 22


 933              		.loc 1 53 0
 934 0010 2146     		mov	r1, r4
 935 0012 0348     		ldr	r0, .L67
 936 0014 FFF7FEFF 		bl	setAttenuation
 937              	.LVL137:
  54:Src/txChain.c **** }
 938              		.loc 1 54 0
 939 0018 2846     		mov	r0, r5
 940 001a FFF7FEFF 		bl	max2871Setup
 941              	.LVL138:
  55:Src/txChain.c **** 
 942              		.loc 1 55 0
 943 001e 38BD     		pop	{r3, r4, r5, pc}
 944              	.LVL139:
 945              	.L68:
 946              		.align	2
 947              	.L67:
 948 0020 0000FC41 		.word	1107034112
 949              		.cfi_endproc
 950              	.LFE71:
 952              		.section	.text.txChainPrintStatus,"ax",%progbits
 953              		.align	1
 954              		.global	txChainPrintStatus
 955              		.syntax unified
 956              		.thumb
 957              		.thumb_func
 958              		.fpu softvfp
 960              	txChainPrintStatus:
 961              	.LFB77:
 188:Src/txChain.c **** 
 189:Src/txChain.c **** 
 190:Src/txChain.c **** void txChainPrintStatus(uint8_t verbose, struct txStruct *txStatus)
 191:Src/txChain.c **** {
 962              		.loc 1 191 0
 963              		.cfi_startproc
 964              		@ args = 0, pretend = 0, frame = 128
 965              		@ frame_needed = 0, uses_anonymous_args = 0
 966              	.LVL140:
 967 0000 30B5     		push	{r4, r5, lr}
 968              	.LCFI8:
 969              		.cfi_def_cfa_offset 12
 970              		.cfi_offset 4, -12
 971              		.cfi_offset 5, -8
 972              		.cfi_offset 14, -4
 973 0002 A1B0     		sub	sp, sp, #132
 974              	.LCFI9:
 975              		.cfi_def_cfa_offset 144
 976 0004 0546     		mov	r5, r0
 977 0006 0C46     		mov	r4, r1
 192:Src/txChain.c **** 
 193:Src/txChain.c **** 	char str1[128] = "";
 978              		.loc 1 193 0
 979 0008 0021     		movs	r1, #0
 980              	.LVL141:
 981 000a 0091     		str	r1, [sp]
 982 000c 7C22     		movs	r2, #124
 983 000e 01A8     		add	r0, sp, #4
ARM GAS  /tmp/ccByiixK.s 			page 23


 984              	.LVL142:
 985 0010 FFF7FEFF 		bl	memset
 986              	.LVL143:
 194:Src/txChain.c **** 
 195:Src/txChain.c **** 	printUSB((char *)"> ----  TX Chain  ----\n");
 987              		.loc 1 195 0
 988 0014 2448     		ldr	r0, .L73
 989 0016 FFF7FEFF 		bl	printUSB
 990              	.LVL144:
 196:Src/txChain.c **** 
 197:Src/txChain.c **** 	sprintf((char *)str1, "> Attenuation = %0.1f dB\n", txStatus->attenuation);
 991              		.loc 1 197 0
 992 001a A068     		ldr	r0, [r4, #8]	@ float
 993 001c FFF7FEFF 		bl	__aeabi_f2d
 994              	.LVL145:
 995 0020 0246     		mov	r2, r0
 996 0022 0B46     		mov	r3, r1
 997 0024 2149     		ldr	r1, .L73+4
 998 0026 6846     		mov	r0, sp
 999 0028 FFF7FEFF 		bl	sprintf
 1000              	.LVL146:
 198:Src/txChain.c **** 	printUSB(str1);
 1001              		.loc 1 198 0
 1002 002c 6846     		mov	r0, sp
 1003 002e FFF7FEFF 		bl	printUSB
 1004              	.LVL147:
 199:Src/txChain.c **** 
 200:Src/txChain.c **** 	sprintf((char *)str1, "> PA Enabled = %d\n", !txStatus->paPwdn);
 1005              		.loc 1 200 0
 1006 0032 227B     		ldrb	r2, [r4, #12]	@ zero_extendqisi2
 1007 0034 B2FA82F2 		clz	r2, r2
 1008 0038 5209     		lsrs	r2, r2, #5
 1009 003a 1D49     		ldr	r1, .L73+8
 1010 003c 6846     		mov	r0, sp
 1011 003e FFF7FEFF 		bl	sprintf
 1012              	.LVL148:
 201:Src/txChain.c **** 	printUSB(str1);
 1013              		.loc 1 201 0
 1014 0042 6846     		mov	r0, sp
 1015 0044 FFF7FEFF 		bl	printUSB
 1016              	.LVL149:
 202:Src/txChain.c **** 
 203:Src/txChain.c **** 	sprintf((char *)str1, "> Set Output Power= %0.2f dBm\n", txStatus->setOutputPower);
 1017              		.loc 1 203 0
 1018 0048 6068     		ldr	r0, [r4, #4]	@ float
 1019 004a FFF7FEFF 		bl	__aeabi_f2d
 1020              	.LVL150:
 1021 004e 0246     		mov	r2, r0
 1022 0050 0B46     		mov	r3, r1
 1023 0052 1849     		ldr	r1, .L73+12
 1024 0054 6846     		mov	r0, sp
 1025 0056 FFF7FEFF 		bl	sprintf
 1026              	.LVL151:
 204:Src/txChain.c **** 	printUSB(str1);
 1027              		.loc 1 204 0
 1028 005a 6846     		mov	r0, sp
 1029 005c FFF7FEFF 		bl	printUSB
ARM GAS  /tmp/ccByiixK.s 			page 24


 1030              	.LVL152:
 205:Src/txChain.c **** 
 206:Src/txChain.c **** 	readAD8319(txStatus);
 1031              		.loc 1 206 0
 1032 0060 2046     		mov	r0, r4
 1033 0062 FFF7FEFF 		bl	readAD8319
 1034              	.LVL153:
 207:Src/txChain.c **** 
 208:Src/txChain.c **** 	sprintf((char *)str1, "> Measured Output Power = %0.2f dBm\n", txStatus->measOutputPower);
 1035              		.loc 1 208 0
 1036 0066 2068     		ldr	r0, [r4]	@ float
 1037 0068 FFF7FEFF 		bl	__aeabi_f2d
 1038              	.LVL154:
 1039 006c 0246     		mov	r2, r0
 1040 006e 0B46     		mov	r3, r1
 1041 0070 1149     		ldr	r1, .L73+16
 1042 0072 6846     		mov	r0, sp
 1043 0074 FFF7FEFF 		bl	sprintf
 1044              	.LVL155:
 209:Src/txChain.c **** 	printUSB(str1);
 1045              		.loc 1 209 0
 1046 0078 6846     		mov	r0, sp
 1047 007a FFF7FEFF 		bl	printUSB
 1048              	.LVL156:
 210:Src/txChain.c **** 
 211:Src/txChain.c **** 	if (verbose)
 1049              		.loc 1 211 0
 1050 007e 0DB9     		cbnz	r5, .L72
 1051              	.L69:
 212:Src/txChain.c **** 	{
 213:Src/txChain.c **** 		readAD8319(txStatus);
 214:Src/txChain.c **** 		sprintf((char *)str1, "> Measured Voltage= %0.2f V\n", readAD8319(txStatus));
 215:Src/txChain.c **** 		printUSB(str1);
 216:Src/txChain.c **** 	}
 217:Src/txChain.c **** }
 1052              		.loc 1 217 0
 1053 0080 21B0     		add	sp, sp, #132
 1054              	.LCFI10:
 1055              		.cfi_remember_state
 1056              		.cfi_def_cfa_offset 12
 1057              		@ sp needed
 1058 0082 30BD     		pop	{r4, r5, pc}
 1059              	.LVL157:
 1060              	.L72:
 1061              	.LCFI11:
 1062              		.cfi_restore_state
 213:Src/txChain.c **** 		sprintf((char *)str1, "> Measured Voltage= %0.2f V\n", readAD8319(txStatus));
 1063              		.loc 1 213 0
 1064 0084 2046     		mov	r0, r4
 1065 0086 FFF7FEFF 		bl	readAD8319
 1066              	.LVL158:
 214:Src/txChain.c **** 		printUSB(str1);
 1067              		.loc 1 214 0
 1068 008a 2046     		mov	r0, r4
 1069 008c FFF7FEFF 		bl	readAD8319
 1070              	.LVL159:
 1071 0090 FFF7FEFF 		bl	__aeabi_f2d
ARM GAS  /tmp/ccByiixK.s 			page 25


 1072              	.LVL160:
 1073 0094 0246     		mov	r2, r0
 1074 0096 0B46     		mov	r3, r1
 1075 0098 0849     		ldr	r1, .L73+20
 1076 009a 6846     		mov	r0, sp
 1077 009c FFF7FEFF 		bl	sprintf
 1078              	.LVL161:
 215:Src/txChain.c **** 	}
 1079              		.loc 1 215 0
 1080 00a0 6846     		mov	r0, sp
 1081 00a2 FFF7FEFF 		bl	printUSB
 1082              	.LVL162:
 1083              		.loc 1 217 0
 1084 00a6 EBE7     		b	.L69
 1085              	.L74:
 1086              		.align	2
 1087              	.L73:
 1088 00a8 00000000 		.word	.LC1
 1089 00ac 18000000 		.word	.LC2
 1090 00b0 34000000 		.word	.LC3
 1091 00b4 48000000 		.word	.LC4
 1092 00b8 68000000 		.word	.LC5
 1093 00bc 90000000 		.word	.LC6
 1094              		.cfi_endproc
 1095              	.LFE77:
 1097              		.comm	txStatus,16,4
 1098              		.section	.rodata.setOutputPower.str1.4,"aMS",%progbits,1
 1099              		.align	2
 1100              	.LC0:
 1101 0000 3E205261 		.ascii	"> Ran out of attenuation!\015\012\000"
 1101      6E206F75 
 1101      74206F66 
 1101      20617474 
 1101      656E7561 
 1102              		.section	.rodata.txChainPrintStatus.str1.4,"aMS",%progbits,1
 1103              		.align	2
 1104              	.LC1:
 1105 0000 3E202D2D 		.ascii	"> ----  TX Chain  ----\012\000"
 1105      2D2D2020 
 1105      54582043 
 1105      6861696E 
 1105      20202D2D 
 1106              	.LC2:
 1107 0018 3E204174 		.ascii	"> Attenuation = %0.1f dB\012\000"
 1107      74656E75 
 1107      6174696F 
 1107      6E203D20 
 1107      25302E31 
 1108 0032 0000     		.space	2
 1109              	.LC3:
 1110 0034 3E205041 		.ascii	"> PA Enabled = %d\012\000"
 1110      20456E61 
 1110      626C6564 
 1110      203D2025 
 1110      640A00
 1111 0047 00       		.space	1
 1112              	.LC4:
ARM GAS  /tmp/ccByiixK.s 			page 26


 1113 0048 3E205365 		.ascii	"> Set Output Power= %0.2f dBm\012\000"
 1113      74204F75 
 1113      74707574 
 1113      20506F77 
 1113      65723D20 
 1114 0067 00       		.space	1
 1115              	.LC5:
 1116 0068 3E204D65 		.ascii	"> Measured Output Power = %0.2f dBm\012\000"
 1116      61737572 
 1116      6564204F 
 1116      75747075 
 1116      7420506F 
 1117 008d 000000   		.space	3
 1118              	.LC6:
 1119 0090 3E204D65 		.ascii	"> Measured Voltage= %0.2f V\012\000"
 1119      61737572 
 1119      65642056 
 1119      6F6C7461 
 1119      67653D20 
 1120              		.text
 1121              	.Letext0:
 1122              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 1123              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 1124              		.file 5 "Drivers/CMSIS/Include/core_cm3.h"
 1125              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 1126              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1127              		.file 8 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 1128              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1129              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1130              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 1131              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1132              		.file 13 "Inc/main.h"
 1133              		.file 14 "Inc/max2871.h"
 1134              		.file 15 "Inc/txChain.h"
 1135              		.file 16 "/usr/include/newlib/sys/lock.h"
 1136              		.file 17 "/usr/include/newlib/sys/_types.h"
 1137              		.file 18 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 1138              		.file 19 "/usr/include/newlib/sys/reent.h"
 1139              		.file 20 "/usr/include/newlib/stdlib.h"
 1140              		.file 21 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 1141              		.file 22 "Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc/usbd_cdc.h"
 1142              		.file 23 "Inc/usbd_cdc_if.h"
 1143              		.file 24 "/usr/include/newlib/math.h"
 1144              		.file 25 "/usr/include/newlib/stdio.h"
 1145              		.file 26 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1146              		.file 27 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1147              		.file 28 "Inc/STP08CP05.h"
 1148              		.file 29 "<built-in>"
ARM GAS  /tmp/ccByiixK.s 			page 27


DEFINED SYMBOLS
                            *ABS*:0000000000000000 txChain.c
     /tmp/ccByiixK.s:18     .text.setAttenuation:0000000000000000 $t
     /tmp/ccByiixK.s:25     .text.setAttenuation:0000000000000000 setAttenuation
     /tmp/ccByiixK.s:235    .text.setAttenuation:00000000000000f8 $d
     /tmp/ccByiixK.s:248    .text.readAD8319:0000000000000000 $t
     /tmp/ccByiixK.s:255    .text.readAD8319:0000000000000000 readAD8319
     /tmp/ccByiixK.s:359    .text.readAD8319:0000000000000080 $d
     /tmp/ccByiixK.s:378    .text.setOutputPower:0000000000000000 $t
     /tmp/ccByiixK.s:385    .text.setOutputPower:0000000000000000 setOutputPower
     /tmp/ccByiixK.s:624    .text.setOutputPower:000000000000015c $d
     /tmp/ccByiixK.s:633    .text.enablePA:0000000000000000 $t
     /tmp/ccByiixK.s:640    .text.enablePA:0000000000000000 enablePA
     /tmp/ccByiixK.s:669    .text.enablePA:0000000000000018 $d
     /tmp/ccByiixK.s:674    .text.sigGen:0000000000000000 $t
     /tmp/ccByiixK.s:681    .text.sigGen:0000000000000000 sigGen
     /tmp/ccByiixK.s:743    .text.sweep:0000000000000000 $t
     /tmp/ccByiixK.s:750    .text.sweep:0000000000000000 sweep
     /tmp/ccByiixK.s:854    .text.sweep:000000000000007c $d
     /tmp/ccByiixK.s:862    .text.disablePA:0000000000000000 $t
     /tmp/ccByiixK.s:869    .text.disablePA:0000000000000000 disablePA
     /tmp/ccByiixK.s:898    .text.disablePA:0000000000000018 $d
     /tmp/ccByiixK.s:903    .text.txChainInit:0000000000000000 $t
     /tmp/ccByiixK.s:910    .text.txChainInit:0000000000000000 txChainInit
     /tmp/ccByiixK.s:948    .text.txChainInit:0000000000000020 $d
     /tmp/ccByiixK.s:953    .text.txChainPrintStatus:0000000000000000 $t
     /tmp/ccByiixK.s:960    .text.txChainPrintStatus:0000000000000000 txChainPrintStatus
     /tmp/ccByiixK.s:1088   .text.txChainPrintStatus:00000000000000a8 $d
                            *COM*:0000000000000010 txStatus
     /tmp/ccByiixK.s:1099   .rodata.setOutputPower.str1.4:0000000000000000 $d
     /tmp/ccByiixK.s:1103   .rodata.txChainPrintStatus.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
__aeabi_fmul
__aeabi_f2uiz
HAL_GPIO_WritePin
HAL_RCC_GetHCLKFreq
__aeabi_ui2d
__aeabi_dmul
__aeabi_d2f
__aeabi_f2d
__aeabi_dadd
HAL_Delay
HAL_ADC_PollForConversion
HAL_ADC_GetValue
hadc1
__aeabi_fcmpge
__aeabi_dcmpgt
__aeabi_fcmplt
__aeabi_fadd
__aeabi_dsub
__aeabi_dcmplt
__aeabi_fcmpgt
__aeabi_fsub
max2871SetPower
printUSB
max2871RFEnable
ARM GAS  /tmp/ccByiixK.s 			page 28


max2871SetFrequency
freqToLed
stpSpiTx
max2871CheckLD
__aeabi_fdiv
__aeabi_fcmple
RX_FIFO
max2871RFDisable
max2871Setup
memset
sprintf
